{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_TENANT_MUTATION(\\n    $firstName: String!\\n    $lastName: String!\\n    $no_people: Int\\n    $tenantType: String\\n    $isActive: Boolean\\n    $tel_no: String\\n    $sex: String\\n    $stay_duration: DateTime\\n    $comm_email: String\\n    $profileImage: String\\n    $houseId: ID\\n    $from_date: DateTime\\n    $to_date: DateTime\\n    $countryId: ID\\n    $provinceId: ID\\n    $districtId: ID\\n    $street: String\\n  ) {\\n    createTenant(\\n      firstName: $firstName\\n      lastName: $lastName\\n      no_people: $no_people\\n      tenantType: $tenantType\\n      isActive: $isActive\\n      tel_no: $tel_no\\n      sex: $sex\\n      stay_duration: $stay_duration\\n      comm_email: $comm_email\\n      profileImage: $profileImage\\n      houseId: $houseId\\n      from_date: $from_date\\n      to_date: $to_date\\n      countryId: $countryId\\n      provinceId: $provinceId\\n      districtId: $districtId\\n      street: $street\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { Container, ActionButton, Text, Input, TextInput, SubText, OutlinedButton, SubHeader, CaptionText, PrimaryButton, Dropdown } from \"../../../styledComponents\";\nimport UploadIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport HouseIcon from \"@material-ui/icons/Home\";\nimport { withStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Button, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Avatar } from \"@material-ui/core\";\nimport { GET_COUNTRIES } from \"../../../queryComponents/Countries\";\nimport { GET_PROVINCES_IN_COUNTRY } from \"../../../queryComponents/Provinces\";\nimport { GET_DISTRICTS_IN_PROVINCE } from \"../../../queryComponents/Districts\";\nimport { GET_LANDLORD_TENANTS } from \"../../../queryComponents/landlord/LandlordTenants\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/landlord/LandlordHouses\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    dialogPaper: {\n      height: 700,\n      // minWidth: 900,\n      borderRadius: 2,\n      // position: \"relative\",\n      backgroundColor: \"#F2F3F4\"\n    },\n    dialogActionStyle: {\n      padding: 0,\n      margin: 0,\n      border: \"none\",\n      backgroundColor: \"#F2F3F4\"\n    },\n    dialogActions: {\n      // position: \"absolute\",\n      width: \"100%\",\n      // bottom: 0,\n      padding: 0,\n      margin: 0,\n      border: \"none\" // backgroundColor: \"white\"\n\n    },\n    dialogContentStyle: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginRight: 10,\n      height: \"100%\",\n      backgroundColor: \"white\",\n      border: \"none\" // backgroundColor: \"#F2F3F4\",\n\n    },\n    avatarStyle: {\n      position: \"relative\",\n      width: theme.spacing(12),\n      height: theme.spacing(10),\n      borderRadius: 5,\n      backgroundColor: \"#F3F2F1\"\n    },\n    inputStyle: {\n      border: 0,\n      borderRadius: 1,\n      paddingTop: 10,\n      paddingRight: 10,\n      paddingBottom: 10,\n      paddingLeft: 10,\n      backgroundColor: \"#F5F8FA\",\n      // lineHeight: 2,\n      minHeight: 60,\n      fontSize: 12,\n      \"&:focus\": {\n        border: \"1px solid #4C3AF7\",\n        backgroundColor: \"#FEFEFF\"\n      }\n    }\n  };\n});\nvar ActionBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateTenant__ActionBtn\",\n  componentId: \"sc-3akzex-0\"\n})([\"display:flex;justify-content:center;align-items:center;align-content:center;padding-right:10px;padding-left:10px;border-radius:2px;background-color:\", \";\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.lightGrey;\n});\nvar CloseBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateTenant__CloseBtn\",\n  componentId: \"sc-3akzex-1\"\n})([\"position:absolute;top:0;right:0;z-index:1304;display:flex;justify-content:center;align-items:center;align-content:center;padding-right:6px;padding-left:6px;border-radius:2px;background-color:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.bgPrimary;\n});\nvar CancelBtn = styled(PrimaryButton).withConfig({\n  displayName: \"CreateTenant__CancelBtn\",\n  componentId: \"sc-3akzex-2\"\n})([\"border:none;color:\", \";background-color:transparent;&:hover{background-color:\", \";}\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.primaryDark;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.lightGrey;\n});\nvar UploadBtn = styled(OutlinedButton).withConfig({\n  displayName: \"CreateTenant__UploadBtn\",\n  componentId: \"sc-3akzex-3\"\n})([\"display:flex;height:60px;width:100%;border:\", \";\"], function (_ref5) {\n  var theme = _ref5.theme;\n  return \"1px dashed \".concat(theme.btnPrimary);\n});\nvar CREATE_TENANT_MUTATION = gql(_templateObject());\n\nvar Houses = function Houses(_ref6) {\n  var house = _ref6.house,\n      setHouse = _ref6.setHouse;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _useState = useState([]),\n      housesList = _useState[0],\n      setHousesList = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function getTenants(event, client) {\n    var res, houses;\n    return _regeneratorRuntime.async(function getTenants$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_USER_HOUSES\n            }));\n\n          case 4:\n            res = _context.sent;\n            houses = res.data.getUserHouses;\n            setHousesList(changeObj(houses));\n            console.log(houses);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.house_heading\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        marginRight: 10,\n        marginBottom: 10\n      }\n    }, __jsx(Dropdown, {\n      title: house.length > 0 ? house[0].value : \"Add House\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getTenants(e, client);\n      },\n      handleClose: handleClose,\n      selection: house,\n      setSelection: setHouse,\n      items: housesList,\n      wrapperStyles: {\n        width: 100\n      }\n    }));\n  });\n};\n\nvar Countries = function Countries(_ref7) {\n  var country = _ref7.country,\n      setCountry = _ref7.setCountry;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      anchorEl = _React$useState4[0],\n      setAnchorEl = _React$useState4[1];\n\n  var _useState3 = useState([]),\n      countryList = _useState3[0],\n      setCountryList = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  function getCountries(event, client) {\n    var res, countries;\n    return _regeneratorRuntime.async(function getCountries$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_COUNTRIES\n            }));\n\n          case 4:\n            res = _context2.sent;\n            countries = res.data.countries;\n            setCountryList(changeObj(countries));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        marginRight: 10\n      }\n    }, __jsx(Dropdown, {\n      title: country.length > 0 ? country[0].value : \"Country\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getCountries(e, client);\n      },\n      handleClose: handleClose,\n      selection: country,\n      setSelection: setCountry,\n      items: countryList,\n      wrapperStyles: {\n        width: 150\n      }\n    }));\n  });\n};\n\nvar Provinces = function Provinces(_ref8) {\n  var country = _ref8.country,\n      province = _ref8.province,\n      setProvince = _ref8.setProvince;\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      anchorEl = _React$useState6[0],\n      setAnchorEl = _React$useState6[1];\n\n  var _useState5 = useState([]),\n      provinceList = _useState5[0],\n      setProvinceList = _useState5[1];\n\n  var _useState6 = useState(false),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  function getProvinces(event, client) {\n    var res, provinces;\n    return _regeneratorRuntime.async(function getProvinces$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_PROVINCES_IN_COUNTRY,\n              variables: {\n                id: country[0].id\n              }\n            }));\n\n          case 4:\n            res = _context3.sent;\n            provinces = res.data.getProvincesByCountry;\n            setProvinceList(changeObj(provinces));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        pointerEvents: country.length === 0 ? \"none\" : \"auto\",\n        marginRight: 10\n      }\n    }, __jsx(Dropdown, {\n      title: province.length > 0 ? province[0].value : \"Province\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getProvinces(e, client);\n      },\n      handleClose: handleClose,\n      selection: province,\n      setSelection: setProvince,\n      items: provinceList,\n      wrapperStyles: {\n        width: 150\n      }\n    }));\n  });\n};\n\nvar Districts = function Districts(_ref9) {\n  var province = _ref9.province,\n      district = _ref9.district,\n      setDistrict = _ref9.setDistrict;\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      anchorEl = _React$useState8[0],\n      setAnchorEl = _React$useState8[1];\n\n  var _useState7 = useState([]),\n      districtList = _useState7[0],\n      setDistrictList = _useState7[1];\n\n  var _useState8 = useState(false),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  function getDistricts(event, client) {\n    var res, districts;\n    return _regeneratorRuntime.async(function getDistricts$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_DISTRICTS_IN_PROVINCE,\n              variables: {\n                id: province[0].id\n              }\n            }));\n\n          case 4:\n            res = _context4.sent;\n            districts = res.data.getDistrictsByProvince;\n            setDistrictList(changeObj(districts));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        pointerEvents: province.length === 0 ? \"none\" : \"auto\"\n      }\n    }, __jsx(Dropdown, {\n      title: district.length > 0 ? district[0].value : \"District\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getDistricts(e, client);\n      },\n      handleClose: handleClose,\n      selection: district,\n      setSelection: setDistrict,\n      items: districtList,\n      wrapperStyles: {\n        width: 150\n      }\n    }));\n  });\n};\n\nvar UploadImageContainer = function UploadImageContainer(_ref10) {\n  var profileImg = _ref10.profileImg,\n      setProfile = _ref10.setProfile,\n      images = _ref10.images,\n      setImages = _ref10.setImages,\n      isUploading = _ref10.isUploading,\n      setIsUploading = _ref10.setIsUploading;\n\n  var _useState9 = useState([]),\n      img_names = _useState9[0],\n      setNames = _useState9[1];\n\n  var _useState10 = useState(false),\n      loaded = _useState10[0],\n      setLoaded = _useState10[1];\n\n  var uploadProfile = function uploadProfile(e) {\n    var files, data, res, file;\n    return _regeneratorRuntime.async(function uploadProfile$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setIsUploading(true);\n            files = e.target.files;\n            setNames([].concat(_toConsumableArray(img_names), [files[0].name]));\n            data = new FormData();\n            data.append(\"file\", files[0]);\n            data.append(\"upload_preset\", \"house_assist\");\n            _context5.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.cloudinary.com/v1_1/dsubmyluz/image/upload/\", {\n              method: \"POST\",\n              body: data\n            }));\n\n          case 8:\n            res = _context5.sent;\n            _context5.next = 11;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 11:\n            file = _context5.sent;\n\n            if (file) {\n              setProfile(file.secure_url);\n              setLoaded(true);\n              setIsUploading(false);\n            }\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    flex: 0,\n    row: true,\n    center: true,\n    color: \"transparent\",\n    customStyles: {\n      paddingTop: 10,\n      paddingBottom: 5\n    }\n  }, __jsx(Container, {\n    row: true,\n    center: true,\n    middle: true,\n    flex: 0,\n    customStyles: {\n      padding: 3,\n      marginRight: 5\n    }\n  }, __jsx(UploadIcon, {\n    style: {\n      fontSize: 25\n    }\n  })), __jsx(Container, {\n    flex: 1,\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, img_names.map(function (img, i) {\n    return __jsx(CaptionText, {\n      key: i,\n      customStyles: {\n        marginRight: 4,\n        color: \"black\",\n        fontSize: 13\n      }\n    }, img);\n  }))), __jsx(Container, {\n    flex: 0.5,\n    row: true,\n    customStyles: {\n      pointerEvents: loaded === 0 ? \"none\" : \"auto\"\n    }\n  }, __jsx(UploadBtn, {\n    type: \"button\"\n  }, __jsx(Input, {\n    accept: \"image/*\",\n    id: \"text-button-file\" // multiple\n    ,\n    type: \"file\",\n    onChange: uploadProfile,\n    style: {\n      marginLeft: 10,\n      width: 200\n    }\n  }))));\n};\n\nvar CreateTenant = function CreateTenant() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useState11 = useState(false),\n      open = _useState11[0],\n      setOpen = _useState11[1];\n\n  var _useState12 = useState(false),\n      isUploading = _useState12[0],\n      setIsUploading = _useState12[1];\n\n  var _useState13 = useState(\"paper\"),\n      scroll = _useState13[0],\n      setScroll = _useState13[1];\n\n  var fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  var _useState14 = useState(null),\n      firstName = _useState14[0],\n      setFirstName = _useState14[1];\n\n  var _useState15 = useState(null),\n      lastName = _useState15[0],\n      setLastName = _useState15[1];\n\n  var _useState16 = useState(null),\n      no_people = _useState16[0],\n      setNoPeople = _useState16[1];\n\n  var _useState17 = useState(null),\n      comm_email = _useState17[0],\n      setCommEmail = _useState17[1];\n\n  var _useState18 = useState(null),\n      tel_no = _useState18[0],\n      setTelNo = _useState18[1];\n\n  var _useState19 = useState(null),\n      sex = _useState19[0],\n      setSex = _useState19[1];\n\n  var _useState20 = useState(false),\n      isActive = _useState20[0],\n      setIsActive = _useState20[1];\n\n  var _useState21 = useState(null),\n      tenantType = _useState21[0],\n      setTenantType = _useState21[1];\n\n  var _useState22 = useState(null),\n      from_date = _useState22[0],\n      setFromDate = _useState22[1];\n\n  var _useState23 = useState(null),\n      to_date = _useState23[0],\n      setToDate = _useState23[1];\n\n  var _useState24 = useState(null),\n      stay_duration = _useState24[0],\n      setStayDuration = _useState24[1];\n\n  var _useState25 = useState([]),\n      country = _useState25[0],\n      setCountry = _useState25[1];\n\n  var _useState26 = useState([]),\n      district = _useState26[0],\n      setDistrict = _useState26[1];\n\n  var _useState27 = useState([]),\n      province = _useState27[0],\n      setProvince = _useState27[1];\n\n  var _useState28 = useState(null),\n      profileImage = _useState28[0],\n      setProfile = _useState28[1];\n\n  var _useState29 = useState([]),\n      images = _useState29[0],\n      setImages = _useState29[1];\n\n  var _useState30 = useState([]),\n      house = _useState30[0],\n      setHouse = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      street = _useState31[0],\n      setStreet = _useState31[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var curr = new Date();\n  curr.setDate(curr.getDate() + 3);\n  var date = curr.toISOString().substr(0, 10);\n  return __jsx(Mutation, {\n    mutation: CREATE_TENANT_MUTATION,\n    refetchQueries: [{\n      query: GET_LANDLORD_TENANTS\n    }],\n    variables: {\n      firstName: firstName,\n      lastName: lastName,\n      no_people: parseInt(no_people),\n      tenantType: tenantType,\n      isActive: house.length > 0 ? true : false,\n      tel_no: tel_no,\n      sex: sex,\n      stay_duration: stay_duration,\n      comm_email: comm_email,\n      profileImage: profileImage,\n      houseId: house.length > 0 ? house[0].id : \"\",\n      from_date: from_date,\n      to_date: to_date,\n      countryId: country.length > 0 ? country[0].id : \"\",\n      provinceId: province.length > 0 ? province[0].id : \"\",\n      districtId: district.length > 0 ? district[0].id : \"\",\n      street: street\n    }\n  }, function (createTenant, _ref11) {\n    var loading = _ref11.loading,\n        error = _ref11.error;\n    return __jsx(\"div\", null, __jsx(ActionBtn, {\n      onClick: handleClickOpen\n    }, __jsx(AddIcon, {\n      style: {\n        fontSize: 23,\n        marginRight: 5\n      }\n    }), \"Add Tenant\"), __jsx(Dialog, {\n      fullScreen: fullScreen,\n      onClose: handleClose,\n      classes: {\n        paper: classes.dialogPaper\n      },\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      scroll: scroll\n    }, __jsx(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      classes: {\n        root: classes.dialogActionStyle\n      }\n    }, __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\",\n      space: \"space-between\",\n      customStyles: {\n        paddingTop: 15,\n        paddingBottom: 7,\n        paddingRight: 10,\n        paddingLeft: 20\n      }\n    }, __jsx(SubHeader, null, \" Add Tenant\"), __jsx(CancelBtn, {\n      onClick: handleClose\n    }, \"Cancel\"))), __jsx(\"form\", {\n      method: \"post\",\n      onSubmit: function _callee(e) {\n        return _regeneratorRuntime.async(function _callee$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                e.preventDefault();\n                _context6.next = 3;\n                return _regeneratorRuntime.awrap(createTenant().then(function (res) {\n                  handleClose();\n                })[\"catch\"](function (err) {\n                  alert(err);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 10,\n        paddingBottom: 10\n      }\n    }, __jsx(DialogContent, {\n      dividers: scroll === \"body\",\n      style: {\n        flex: 1\n      },\n      classes: {\n        root: classes.dialogContentStyle\n      }\n    }, __jsx(\"div\", null, __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"Profile Information\")), __jsx(Container, {\n      color: \"transparent\",\n      row: true,\n      space: \"space-between\"\n    }, __jsx(Container, {\n      flex: 1,\n      customStyles: {\n        paddingRight: 10\n      },\n      color: \"transparent\"\n    }, __jsx(Input, {\n      placeholder: \"First Name\",\n      type: \"text\",\n      value: firstName,\n      onChange: function onChange(e) {\n        return setFirstName(e.target.value);\n      }\n    })), __jsx(Container, {\n      color: \"transparent\",\n      flex: 1,\n      customStyles: {\n        paddingLeft: 10\n      }\n    }, __jsx(Input, {\n      placeholder: \"Last Name\",\n      type: \"text\",\n      value: lastName,\n      onChange: function onChange(e) {\n        return setLastName(e.target.value);\n      }\n    }))), __jsx(Container, {\n      color: \"transparent\",\n      row: true,\n      space: \"space-between\"\n    }, __jsx(Container, {\n      flex: 1,\n      customStyles: {\n        paddingRight: 10\n      },\n      color: \"transparent\"\n    }, __jsx(Input, {\n      placeholder: \"E-mail\",\n      type: \"email\",\n      value: comm_email,\n      onChange: function onChange(e) {\n        return setCommEmail(e.target.value);\n      }\n    })), __jsx(Container, {\n      color: \"transparent\",\n      flex: 1,\n      customStyles: {\n        paddingLeft: 10\n      }\n    }, __jsx(Input, {\n      placeholder: \"Tel no\",\n      type: \"phone\",\n      value: tel_no,\n      onChange: function onChange(e) {\n        return setTelNo(e.target.value);\n      }\n    }))), __jsx(Container, {\n      color: \"transparent\",\n      row: true,\n      space: \"space-between\"\n    }, __jsx(Container, {\n      flex: 1,\n      customStyles: {\n        paddingRight: 10\n      },\n      color: \"transparent\"\n    }, __jsx(Input, {\n      placeholder: \"No. of family\",\n      type: \"number\",\n      value: no_people,\n      onChange: function onChange(e) {\n        return setNoPeople(e.target.value);\n      }\n    })), __jsx(Container, {\n      color: \"transparent\",\n      flex: 1,\n      customStyles: {\n        paddingLeft: 10\n      }\n    }, __jsx(Input, {\n      placeholder: \"Sex\",\n      type: \"text\",\n      value: sex,\n      onChange: function onChange(e) {\n        return setSex(e.target.value);\n      }\n    }))), __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginTop: 10,\n        marginBottom: 10\n      }\n    }, \"Duration of stay\")), __jsx(Container, {\n      row: true,\n      color: \"transparent\"\n    }, __jsx(Input, {\n      type: \"date\",\n      label: \"From\",\n      defaultValue: date,\n      value: from_date,\n      onChange: function onChange(e) {\n        return setFromDate(e.target.value);\n      },\n      style: {\n        marginRight: 20\n      }\n    }), __jsx(Input, {\n      type: \"date\",\n      label: \"To..\",\n      defaultValue: date,\n      value: to_date,\n      onChange: function onChange(e) {\n        return setToDate(e.target.value);\n      }\n    })), __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\",\n      customStyles: {\n        marginBottom: 10\n      }\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginTop: 10\n      }\n    }, \"Location\")), __jsx(Container, {\n      row: true,\n      color: \"transparent\",\n      customStyles: {\n        marginBottom: 15\n      }\n    }, __jsx(Countries, {\n      country: country,\n      setCountry: setCountry\n    }), __jsx(Provinces, {\n      country: country,\n      province: province,\n      setProvince: setProvince\n    }), __jsx(Districts, {\n      district: district,\n      province: province,\n      setDistrict: setDistrict\n    })), __jsx(Container, {\n      flex: 0,\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"Add House Tenant\")), __jsx(Container, {\n      flex: 0,\n      row: true,\n      center: true // space=\"space-between\"\n      ,\n      color: \"transparent\"\n    }, __jsx(Container, {\n      flex: 0.3,\n      column: true,\n      color: \"transparent\"\n    }, __jsx(Houses, {\n      house: house,\n      setHouse: setHouse\n    })), __jsx(CaptionText, {\n      customStyles: {\n        color: \"#E74C3C\"\n      }\n    }, \"you need to atleast have one house\")), __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"Profile picture\")), __jsx(UploadImageContainer, {\n      isUploading: isUploading,\n      setIsUploading: setIsUploading,\n      profileImg: profileImage,\n      setProfile: setProfile,\n      images: images,\n      setImages: setImages\n    }), __jsx(Container, {\n      color: \"transparent\",\n      right: true,\n      center: true,\n      row: true,\n      flex: false,\n      customStyles: {\n        paddingTop: 30,\n        paddingBottom: 5\n      }\n    }, isUploading ? __jsx(PrimaryButton, {\n      type: \"submit\",\n      customStyles: {\n        pointerEvents: isUploading ? \"none\" : \"auto\",\n        opacity: isUploading ? 0.5 : 1\n      }\n    }, \"Uploading..\") : __jsx(PrimaryButton, {\n      type: \"submit\",\n      customStyles: {\n        pointerEvents: house.length <= 0 ? \"none\" : \"auto\",\n        opacity: house.length <= 0 ? 0.5 : 1\n      }\n    }, loading ? \"saving\" : \"Save Tenant\")))))));\n  });\n};\n\nexport default CreateTenant;","map":null,"metadata":{},"sourceType":"module"}