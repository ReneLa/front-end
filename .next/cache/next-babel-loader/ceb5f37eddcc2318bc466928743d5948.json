{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { withStyles, fade } from \"@material-ui/core/styles\";\nimport { Mutation } from \"react-apollo\"; // import styled, { css } from \"styled-components\";\n\nimport { GET_USER_HOUSES } from \"../../queryComponents/Houses\";\nimport gql from \"graphql-tag\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport Countries from \"../../queryComponents/Countries\";\nimport Provinces from \"../../queryComponents/Provinces\";\nimport Districts from \"../../queryComponents/Districts\"; // import Sectors from \"../../queryComponents/Sectors\";\n\nimport BackIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport HouseTypes from \"../../queryComponents/HouseTypes\";\nimport { Container, FlatButton, PrimaryButton, SubHeader, Text, Input, SubText, CaptionText } from \"../../styledComponents\";\nimport loadingImg from \"../../../public/static/126.gif\";\nconst UPDATE_HOUSE_MUTATION = gql`\n  mutation UPDATE_HOUSE_MUTATION(\n    $id: ID!\n    $house_heading: String\n    $house_description: String\n    $house_no: String\n    $no_bathrooms: Int\n    $no_bedrooms: Int\n    $no_annex: Int\n    $dinning_room: Int\n    $isActive: Boolean\n    $has_in_kitchen: Boolean\n    $has_balcony: Boolean\n    $has_garden: Boolean\n    $has_hotwater: Boolean\n    $has_carparking: Boolean\n    $house_type: ID\n    # $parent_houseId: ID\n    $countryId: ID\n    $provinceId: ID\n    $districtId: ID # $sectorId: ID\n  ) {\n    updateHouse(\n      id: $id\n      house_heading: $house_heading\n      house_description: $house_description\n      house_no: $house_no\n      no_bathrooms: $no_bathrooms\n      no_bedrooms: $no_bedrooms\n      no_annex: $no_annex\n      dinning_room: $dinning_room\n      isActive: $isActive\n      has_in_kitchen: $has_in_kitchen\n      has_balcony: $has_balcony\n      has_garden: $has_garden\n      has_hotwater: $has_hotwater\n      has_carparking: $has_carparking\n      house_type: $house_type\n      # parent_houseId: $parent_houseId\n      countryId: $countryId\n      provinceId: $provinceId\n      districtId: $districtId # sectorId: $sectorId\n    ) {\n      id\n      house_heading\n      house_description\n      house_no\n      no_annex\n      no_bathrooms\n      no_bedrooms\n      dinning_room\n      isActive\n      has_in_kitchen\n      has_balcony\n      has_garden\n      has_hotwater\n      has_carparking\n      house_type {\n        id\n      }\n      # parent_houseId {\n      #   id\n      # }\n      countryId {\n        id\n        name\n      }\n      provinceId {\n        id\n        name\n      }\n      districtId {\n        id\n        name\n      }\n      # sectorId {\n      #   id\n      #   name\n      # }\n    }\n  }\n`;\nconst styles = {\n  list: {\n    width: 340\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    marginBottom: 10,\n    borderRadius: 8,\n    padding: 5\n  },\n  inputStyle: {\n    border: 0,\n    borderRadius: 4,\n    paddingTop: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    backgroundColor: \"#F5F8FA\",\n    // lineHeight: 2,\n    fontSize: 12,\n    \"&:focus\": {\n      border: \"1px solid #4C3AF7\",\n      backgroundColor: \"#FEFEFF\"\n    }\n  }\n};\n\nclass UpdateHouse extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    this.state = {\n      house_heading: \"\",\n      house_description: \"\",\n      house_no: \"\",\n      no_annex: \"\",\n      no_bathrooms: \"\",\n      no_bedrooms: \"\",\n      dinning_room: \"\",\n      isActive: false,\n      has_in_kitchen: false,\n      has_balcony: false,\n      has_garden: false,\n      has_carparking: false,\n      house_type: \"\",\n      parent_houseId: \"\",\n      countryId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\"\n    };\n  }\n\n  render() {\n    const {\n      house_heading,\n      house_description,\n      house_no,\n      no_annex,\n      no_bathrooms,\n      no_bedrooms,\n      dinning_room,\n      isActive,\n      has_in_kitchen,\n      has_balcony,\n      has_garden,\n      has_hotwater,\n      has_carparking,\n      house_type,\n      parent_houseId,\n      countryId,\n      provinceId,\n      districtId,\n      sectorId\n    } = this.state;\n    const {\n      classes,\n      onClose,\n      house\n    } = this.props;\n    let type = house.house_type;\n    let c_name = house.countryId;\n    let p_name = house.provinceId;\n    let d_name = house.districtId;\n    return __jsx(Mutation, {\n      mutation: UPDATE_HOUSE_MUTATION,\n      refetchQueries: [{\n        query: GET_USER_HOUSES\n      }],\n      variables: {\n        id: this.props.house.id,\n        house_heading,\n        house_description,\n        house_no,\n        no_bathrooms: parseInt(no_bathrooms),\n        no_bedrooms: parseInt(no_bedrooms),\n        no_annex: parseInt(no_annex),\n        dinning_room: parseInt(dinning_room),\n        isActive,\n        has_in_kitchen,\n        has_balcony,\n        has_garden,\n        has_hotwater,\n        has_carparking,\n        house_type,\n        // parent_houseId,\n        countryId,\n        provinceId,\n        districtId // sectorId\n\n      }\n    }, (updateHouse, {\n      loading,\n      error\n    }) => {\n      return __jsx(Container, {\n        flex: 1,\n        color: \"inherit\",\n        role: \"presentation\",\n        customStyles: {\n          width: 350\n        }\n      }, __jsx(Container, {\n        row: true,\n        color: \"white\",\n        customStyles: {\n          borderBottom: `0.8px solid ${fade(\"#393939\", 0.1)}`,\n          padding: 7,\n          position: `-webkit-sticky`,\n          position: \"sticky\",\n          top: 0\n        }\n      }, __jsx(Container, {\n        flex: 1,\n        color: \"transparent\",\n        row: true,\n        center: true,\n        left: true\n      }, __jsx(IconButton, {\n        style: {\n          padding: 10\n        },\n        onClick: onClose\n      }, __jsx(BackIcon, {\n        style: {\n          fontSize: 20\n        }\n      }))), __jsx(Container, {\n        flex: 1,\n        color: \"transparent\",\n        row: true,\n        middle: true,\n        center: true\n      }, __jsx(Text, {\n        customStyles: {\n          fontWeight: \"600\"\n        }\n      }, house.house_heading)), __jsx(Container, {\n        flex: 1,\n        color: \"transparent\",\n        row: true,\n        center: true,\n        right: true\n      })), __jsx(\"form\", {\n        method: \"post\",\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          flex: 1\n        },\n        onSubmit: async e => {\n          e.preventDefault();\n          await updateHouse(); // onClose();\n\n          this.setState({\n            house_heading: \"\",\n            house_description: \"\",\n            house_no: \"\",\n            no_annex: 0,\n            no_bathrooms: 0,\n            no_bedrooms: 0,\n            dinning_room: 0,\n            isActive: false,\n            has_in_kitchen: false,\n            has_balcony: false,\n            has_garden: false,\n            has_hotwater: false,\n            has_carparking: false,\n            house_type: \"\",\n            parent_houseId: \"\",\n            countryId: \"\",\n            provinceId: \"\",\n            districtId: \"\",\n            sectorId: \"\"\n          });\n        }\n      }, __jsx(Container, {\n        flex: 1,\n        column: true,\n        color: \"transparent\",\n        customStyles: {\n          padding: 15\n        }\n      }, __jsx(Input, {\n        label: \"House heading\",\n        type: \"text\",\n        className: classes.inputStyle,\n        defaultValue: house.house_heading,\n        onChange: e => {\n          this.setState({\n            house_heading: e.target.value\n          });\n        }\n      }), __jsx(Container, {\n        column: true,\n        customStyles: {\n          marginBottom: 10\n        },\n        color: \"transparent\"\n      }, __jsx(CaptionText, {\n        customStyles: {\n          marginBottom: 5\n        }\n      }, \" Description\"), __jsx(\"textarea\", {\n        type: \"text\",\n        className: classes.inputStyle,\n        defaultValue: house.house_description,\n        onChange: e => {\n          this.setState({\n            house_description: e.target.value\n          });\n        }\n      })), __jsx(Input, {\n        label: \"House no.\",\n        type: \"text\",\n        size: \"small\",\n        className: classes.inputStyle,\n        defaultValue: house.house_no,\n        onChange: e => {\n          this.setState({\n            house_heading: e.target.value\n          });\n        }\n      }), __jsx(Container, {\n        column: true,\n        customStyles: {\n          marginBottom: 10\n        },\n        color: \"transparent\"\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"House type\"), __jsx(\"select\", {\n        className: classes.inputStyle,\n        value: house_type,\n        onChange: e => {\n          this.setState({\n            house_type: e.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        style: {\n          padding: 5\n        }\n      }, type && type.house_type), __jsx(HouseTypes, null, ({\n        data\n      }) => {\n        if (data) {\n          return __jsx(React.Fragment, null, data.houseTypes.map(type => __jsx(\"option\", {\n            key: type.id,\n            value: type.id\n          }, type.house_type)));\n        }\n\n        return null;\n      }))), __jsx(Container, {\n        row: true,\n        color: \"transparent\"\n      }, __jsx(Input, {\n        label: \" No. bedrooms\",\n        type: \"number\",\n        name: \"no_bedrooms\",\n        defaultValue: house.no_bedrooms,\n        className: classes.inputStyle,\n        onChange: e => {\n          this.setState({\n            no_bedrooms: e.target.value\n          });\n        }\n      }), __jsx(Input, {\n        label: \" No. bathrooms\",\n        type: \"number\",\n        name: \"no_bathrooms\",\n        defaultValue: house.no_bathrooms,\n        className: classes.inputStyle,\n        onChange: e => {\n          this.setState({\n            no_bathrooms: e.target.value\n          });\n        }\n      })), __jsx(Container, {\n        row: true,\n        color: \"transparent\"\n      }, __jsx(Input, {\n        label: \" No. Annex\",\n        type: \"number\",\n        name: \"no_annex\",\n        defaultValue: house.no_annex,\n        className: classes.inputStyle,\n        onChange: e => {\n          this.setState({\n            no_annex: e.target.value\n          });\n        }\n      }), __jsx(Input, {\n        label: \" No. dinning rooms\",\n        type: \"number\",\n        name: \"dinning_room\",\n        defaultValue: house.dinning_room,\n        className: classes.inputStyle,\n        onChange: e => {\n          this.setState({\n            dinning_room: e.target.value\n          });\n        }\n      })), __jsx(Container, {\n        row: true,\n        color: \"transparent\"\n      }, __jsx(Container, {\n        flex: 1,\n        row: true,\n        customStyles: {\n          marginBottom: 10,\n          marginRight: 10\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\" // checked={has_garden}\n        ,\n        defaultChecked: house.has_garden,\n        style: {\n          marginLeft: 10,\n          marginRight: 5\n        },\n        onChange: e => {\n          this.setState({\n            has_garden: !has_garden\n          });\n        }\n      }), __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"Has garden\")), __jsx(Container, {\n        flex: 1,\n        row: true,\n        customStyles: {\n          marginBottom: 10\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: house.has_hotwater,\n        style: {\n          marginLeft: 10,\n          marginRight: 5\n        },\n        onChange: e => {\n          this.setState({\n            has_hotwater: !has_hotwater\n          });\n        }\n      }), __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"has hot water\"))), __jsx(Container, {\n        row: true,\n        color: \"transparent\"\n      }, __jsx(Container, {\n        flex: 1,\n        row: true,\n        customStyles: {\n          marginBottom: 10,\n          marginRight: 10\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        style: {\n          marginLeft: 10,\n          marginRight: 5\n        },\n        defaultChecked: house.has_carparking,\n        onChange: e => {\n          this.setState({\n            has_carparking: !has_carparking\n          });\n        }\n      }), __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"Has carparking\")), __jsx(Container, {\n        flex: 1,\n        row: true,\n        customStyles: {\n          marginBottom: 10\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: house.has_balcony,\n        style: {\n          marginLeft: 10,\n          marginRight: 5\n        },\n        onChange: e => {\n          this.setState({\n            has_balcony: !has_balcony\n          });\n        }\n      }), __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"has balcony\"))), __jsx(Container, {\n        row: true,\n        color: \"transparent\"\n      }, __jsx(Container, {\n        flex: 1,\n        row: true,\n        customStyles: {\n          marginBottom: 10,\n          marginRight: 10\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: house.has_in_kitchen,\n        style: {\n          marginLeft: 10,\n          marginRight: 5\n        },\n        onChange: e => {\n          this.setState({\n            has_in_kitchen: !has_in_kitchen\n          });\n        }\n      }), __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"Has in kitchen\")), __jsx(Container, {\n        flex: 1,\n        row: true,\n        customStyles: {\n          marginBottom: 10\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        style: {\n          marginLeft: 10,\n          marginRight: 5\n        },\n        defaultChecked: house.isActive,\n        onChange: e => {\n          this.setState({\n            isActive: !isActive\n          });\n        }\n      }), __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"Has tenant\"))), __jsx(Container, {\n        row: true,\n        color: \"transparent\",\n        space: \"space-between\"\n      }, __jsx(Container, {\n        column: true,\n        customStyles: {\n          marginBottom: 10\n        },\n        color: \"transparent\"\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"Country\"), __jsx(\"select\", {\n        value: countryId,\n        className: classes.inputStyle,\n        onChange: e => {\n          this.setState({\n            countryId: e.target.value\n          });\n        }\n      }, __jsx(\"option\", null, \" \", c_name && c_name.name), __jsx(Countries, null, ({\n        data\n      }) => {\n        if (data) {\n          return __jsx(React.Fragment, null, data.countries.map(country => __jsx(\"option\", {\n            key: country.id,\n            value: country.id\n          }, country.name)));\n        }\n\n        return null;\n      }))), __jsx(Container, {\n        column: true,\n        customStyles: {\n          marginBottom: 10\n        },\n        color: \"transparent\"\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"Province\"), __jsx(\"select\", {\n        className: classes.inputStyle,\n        value: provinceId,\n        onChange: e => {\n          this.setState({\n            provinceId: e.target.value\n          });\n        }\n      }, __jsx(\"option\", null, p_name && p_name.name), __jsx(Provinces, {\n        id: countryId\n      }, ({\n        data\n      }) => {\n        if (data) {\n          return __jsx(React.Fragment, null, data.getProvincesByCountry.map(prov => __jsx(\"option\", {\n            key: prov.id,\n            value: prov.id\n          }, prov.name)));\n        }\n\n        return null;\n      }))), __jsx(Container, {\n        column: true,\n        customStyles: {\n          marginBottom: 10\n        },\n        color: \"transparent\"\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        noWrap: true\n      }, \"District\"), __jsx(\"select\", {\n        className: classes.inputStyle,\n        value: districtId,\n        onChange: e => {\n          this.setState({\n            districtId: e.target.value\n          });\n        }\n      }, __jsx(\"option\", null, d_name && d_name.name), __jsx(Districts, {\n        id: provinceId\n      }, ({\n        data\n      }) => {\n        if (data) {\n          return __jsx(React.Fragment, null, data.getDistrictsByProvince.map(dist => __jsx(\"option\", {\n            key: dist.id,\n            value: dist.id\n          }, dist.name)), \" \");\n        }\n\n        return null;\n      }))))), __jsx(Container, {\n        right: true,\n        center: true,\n        flex: 0,\n        row: true,\n        color: \"white\",\n        space: \"space-between\",\n        customStyles: {\n          position: `-webkit-sticky`,\n          position: \"sticky\",\n          bottom: 0,\n          marginTop: 15,\n          padding: 10,\n          borderTop: `0.8px solid ${fade(\"#393939\", 0.1)}`,\n          width: \"100%\"\n        }\n      }, __jsx(PrimaryButton, {\n        type: \"submit\"\n      }, loading ? __jsx(\"img\", {\n        src: loadingImg,\n        style: {\n          width: 20,\n          height: 20\n        }\n      }) : \"Save Changes\"))));\n    });\n  }\n\n}\n\nexport default withStyles(styles)(UpdateHouse);","map":null,"metadata":{},"sourceType":"module"}