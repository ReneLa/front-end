{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SubText, CaptionText } from \"./Text\";\nimport Container from \"./Container\";\nconst useStyles = makeStyles(theme => ({\n  inputStyle: {\n    border: \"1px solid #D7DBDD\",\n    borderRadius: 1,\n    padding: 8,\n    backgroundColor: \"#F5F8FA\",\n    // lineHeight: 2,\n    fontSize: 14,\n    \"&:focus\": {\n      border: \"1px solid #5B86C6\",\n      backgroundColor: \"#FEFEFF\"\n    }\n  }\n}));\n\nconst Input = (_ref) => {\n  let {\n    label,\n    wrapperStyles,\n    inputStyles,\n    type\n  } = _ref,\n      other = _objectWithoutProperties(_ref, [\"label\", \"wrapperStyles\", \"inputStyles\", \"type\"]);\n\n  const classes = useStyles();\n  return __jsx(Container, {\n    column: true,\n    customStyles: {\n      marginBottom: 20\n    },\n    color: \"transparent\"\n  }, __jsx(CaptionText, {\n    customStyles: {\n      marginBottom: 5,\n      color: \"#323130\"\n    }\n  }, label), __jsx(\"input\", _extends({\n    className: classes.inputStyle\n  }, other, {\n    type: type\n  })));\n};\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}