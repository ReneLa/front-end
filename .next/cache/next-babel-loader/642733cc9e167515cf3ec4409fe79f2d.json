{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { withStyles, fade } from \"@material-ui/core/styles\";\nimport { Mutation } from \"react-apollo\";\nimport { Select, FormControl, Typography } from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport { theme as customTheme } from \"../../../Page\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/Houses\";\nimport Houses from \"../../../queryComponents/Houses\";\nimport { Container, FlatButton, Input } from \"../../../styledComponents\";\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport loadingImg from \"../../../../public/static/126.gif\";\nconst ADD_IMAGE_MUTATION = gql`\n  mutation ADD_IMAGE_MUTATION($image: String!, $houseId: ID!) {\n    createHouseImage(image: $image, houseId: $houseId) {\n      id\n      image\n      houseId {\n        id\n        house_heading\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  list: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    // marginTop: theme.spacing(2),\n    maxWidth: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nclass AddHouseImage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      image: null,\n      houseId: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"uploadImage\", async e => {\n      const files = e.target.files;\n      const data = new FormData();\n      data.append(\"file\", files[0]);\n      data.append(\"upload_preset\", \"house_assist\");\n      const res = await fetch(\"https://api.cloudinary.com/v1_1/dsubmyluz/image/upload/\", {\n        method: \"POST\",\n        body: data\n      });\n      const file = await res.json();\n\n      if (file) {\n        this.setState({\n          image: file.secure_url\n        });\n      }\n    });\n\n    _defineProperty(this, \"addImageContainer\", data => {\n      const {\n        image,\n        houseId\n      } = this.state;\n      const {\n        classes\n      } = this.props;\n      return __jsx(Mutation, {\n        mutation: ADD_IMAGE_MUTATION,\n        variables: this.state,\n        refetchQueries: [{\n          query: GET_USER_HOUSES\n        }]\n      }, (addImage, {\n        loading,\n        error\n      }) => {\n        return __jsx(Container, {\n          flex: 1\n        }, __jsx(\"form\", {\n          method: \"post\",\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1\n          },\n          onSubmit: async e => {\n            e.preventDefault();\n            await addImage();\n            this.setState({\n              image: null,\n              houseId: \"\"\n            });\n          }\n        }, __jsx(Container, {\n          middle: true,\n          row: true,\n          center: true,\n          customStyles: {\n            paddingTop: 15,\n            marginTop: 30\n          }\n        }, __jsx(\"span\", null, \" Select House:\"), __jsx(FormControl, {\n          size: \"small\",\n          variant: \"outlined\",\n          className: classes.formControl\n        }, __jsx(Select, {\n          native: true,\n          size: \"normal\",\n          value: houseId,\n          style: {\n            marginLeft: 15\n          },\n          onChange: e => {\n            this.setState({\n              houseId: e.target.value\n            });\n          },\n          inputProps: {\n            name: \"house\",\n            id: \"outlined-house-image\"\n          }\n        }, __jsx(\"option\", {\n          value: \"\"\n        }, \"choose house\"), data.map(house => __jsx(\"option\", {\n          key: house.id,\n          value: house.id\n        }, house.house_heading))))), __jsx(Container, {\n          middle: true,\n          row: true,\n          center: true,\n          customStyles: {\n            paddingTop: 15,\n            marginTop: 30\n          }\n        }, __jsx(\"span\", null, \" Select photo:\"), __jsx(Input, {\n          accept: \"image/*\",\n          id: \"text-button-file\",\n          multiple: true,\n          type: \"file\",\n          onChange: this.uploadImage,\n          style: {\n            marginLeft: 10,\n            width: 200\n          }\n        }), image !== null && __jsx(\"img\", {\n          src: image,\n          style: {\n            width: 40,\n            height: 35,\n            objectFit: \"fit\"\n          }\n        })), __jsx(Container, {\n          right: true,\n          center: true,\n          row: true,\n          flex: 1,\n          space: \"space-between\",\n          customStyles: {\n            position: \"absolute\",\n            bottom: 0,\n            marginTop: 15,\n            padding: 10,\n            borderTop: `0.5px solid ${fade(\"#393939\", 0.2)}`,\n            width: \"100%\"\n          }\n        }, __jsx(FlatButton, {\n          type: \"submit\"\n        }, loading ? __jsx(\"img\", {\n          src: loadingImg,\n          style: {\n            width: 20,\n            height: 20\n          }\n        }) : \"Save\"))));\n      });\n    });\n  }\n\n  render() {\n    const {\n      image,\n      houseId\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return __jsx(Container, {\n      flex: 1,\n      column: true\n    }, __jsx(Houses, null, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (data) {\n        const houses = data.getUserHouses;\n\n        if (houses.length === 0) {\n          return __jsx(Container, {\n            flex: 1,\n            column: true,\n            middle: true,\n            center: true // customStyles={{ paddingTop: 64 }}\n\n          }, __jsx(AddPhotoIcon, {\n            style: {\n              fontSize: 60,\n              color: \"gray\"\n            }\n          }), __jsx(Typography, {\n            style: {\n              fontSize: 13,\n              fontWeight: 200,\n              marginTop: 20\n            }\n          }, \"Add at least one house\"));\n        }\n\n        if (houses.length !== 0) {\n          return __jsx(Container, {\n            color: \"pink\",\n            flex: 1\n          }, this.addImageContainer(houses));\n        }\n      }\n\n      if (loading) {\n        return __jsx(Container, {\n          flex: 1,\n          middle: true,\n          center: true\n        }, __jsx(\"img\", {\n          src: loadingImg,\n          style: {\n            width: 25,\n            height: 25\n          }\n        }));\n      }\n\n      return null;\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(AddHouseImage);","map":null,"metadata":{},"sourceType":"module"}