{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/SearchHouses.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_HOUSE_QUERY($searchTerm: String!) {\\n    houses(\\n      where: {\\n        OR: [\\n          { house_heading_contains: $searchTerm }\\n          { house_no_contains: $searchTerm }\\n        ]\\n      }\\n    ) {\\n      id\\n      house_heading\\n      house_no\\n      house_status\\n      parking\\n      no_bedrooms\\n      no_bathrooms\\n      appliances\\n      flooring\\n      live_space\\n      ext_ft\\n      utilities\\n      no_annex\\n      dinning_room\\n\\n      profileImage\\n      contact_no\\n      countryId {\\n        name\\n      }\\n      provinceId {\\n        name\\n      }\\n      districtId {\\n        name\\n      }\\n      street\\n      createdAt\\n      updatedAt\\n      images {\\n        id\\n        image\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Downshift from \"downshift\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { SearchInput, Container } from \"../styledComponents\";\nvar SearchBox = styled(Container).withConfig({\n  displayName: \"SearchHouses__SearchBox\",\n  componentId: \"sc-713g5w-0\"\n})([\"display:flex;flex-direction:row;align-items:center;padding-right:10px;background-color:white;height:32px;padding:0px 5px;min-width:150px;margin-left:7px;margin-right:10px;\"]);\nvar SEARCH_HOUSE_QUERY = gql(_templateObject());\n\nvar AutoComplete = function AutoComplete(_ref) {\n  var foundHouses = _ref.foundHouses,\n      setFound = _ref.setFound;\n\n  function _onChange(e, client) {\n    var res;\n    return _regeneratorRuntime.async(function onChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.query({\n              query: SEARCH_HOUSE_QUERY,\n              variables: {\n                searchTerm: e.target.value\n              }\n            }));\n\n          case 2:\n            res = _context.sent;\n            console.log(res);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return __jsx(SearchBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(ApolloConsumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, function (client) {\n    return __jsx(SearchInput, {\n      type: \"search\",\n      onChange: function onChange(e) {\n        e.persist();\n\n        _onChange(e, client);\n      },\n      customStyles: {\n        fontSize: 15,\n        height: \"100%\",\n        lineHeight: 1,\n        padding: 0,\n        width: \"100%\",\n        border: 0,\n        backgroundColor: \"white\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/SearchHouses.js"],"names":["React","styled","Downshift","ApolloConsumer","gql","debounce","SearchInput","Container","SearchBox","SEARCH_HOUSE_QUERY","AutoComplete","foundHouses","setFound","onChange","e","client","query","variables","searchTerm","target","value","res","console","log","persist","fontSize","height","lineHeight","padding","width","border","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,qBAAvC;AAEA,IAAMC,SAAS,GAAGP,MAAM,CAACM,SAAD,CAAT;AAAA;AAAA;AAAA,mLAAf;AAaA,IAAME,kBAAkB,GAAGL,GAAH,mBAAxB;;AA8CA,IAAMM,YAAY,GAAG,SAAfA,YAAe,OAA+B;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClD,WAAeC,SAAf,CAAwBC,CAAxB,EAA2BC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACoBA,MAAM,CAACC,KAAP,CAAa;AAC7BA,cAAAA,KAAK,EAAEP,kBADsB;AAE7BQ,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,UAAU,EAAEJ,CAAC,CAACK,MAAF,CAASC;AAAvB;AAFkB,aAAb,CADpB;;AAAA;AACQC,YAAAA,GADR;AAKEC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACN,MAAD;AAAA,WACC,MAAC,WAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,kBAACD,CAAD,EAAO;AACfA,QAAAA,CAAC,CAACU,OAAF;;AACAX,QAAAA,SAAQ,CAACC,CAAD,EAAIC,MAAJ,CAAR;AACD,OALH;AAME,MAAA,YAAY,EAAE;AACZU,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,MAAM,EAAE,MAFI;AAGZC,QAAAA,UAAU,EAAE,CAHA;AAIZC,QAAAA,OAAO,EAAE,CAJG;AAKZC,QAAAA,KAAK,EAAE,MALK;AAMZC,QAAAA,MAAM,EAAE,CANI;AAOZC,QAAAA,eAAe,EAAE;AAPL,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAAA,GADH,CADF,CADF;AAwBD,CAhCD;;AAkCA,eAAerB,YAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Downshift from \"downshift\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { SearchInput, Container } from \"../styledComponents\";\n\nconst SearchBox = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-right: 10px;\n  background-color: white;\n  height: 32px;\n  padding: 0px 5px;\n  min-width: 150px;\n  margin-left: 7px;\n  margin-right: 10px;\n`;\n\nconst SEARCH_HOUSE_QUERY = gql`\n  query SEARCH_HOUSE_QUERY($searchTerm: String!) {\n    houses(\n      where: {\n        OR: [\n          { house_heading_contains: $searchTerm }\n          { house_no_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      house_heading\n      house_no\n      house_status\n      parking\n      no_bedrooms\n      no_bathrooms\n      appliances\n      flooring\n      live_space\n      ext_ft\n      utilities\n      no_annex\n      dinning_room\n\n      profileImage\n      contact_no\n      countryId {\n        name\n      }\n      provinceId {\n        name\n      }\n      districtId {\n        name\n      }\n      street\n      createdAt\n      updatedAt\n      images {\n        id\n        image\n      }\n    }\n  }\n`;\nconst AutoComplete = ({ foundHouses, setFound }) => {\n  async function onChange(e, client) {\n    const res = await client.query({\n      query: SEARCH_HOUSE_QUERY,\n      variables: { searchTerm: e.target.value },\n    });\n    console.log(res);\n  }\n  return (\n    <SearchBox>\n      <ApolloConsumer>\n        {(client) => (\n          <SearchInput\n            type=\"search\"\n            onChange={(e) => {\n              e.persist();\n              onChange(e, client);\n            }}\n            customStyles={{\n              fontSize: 15,\n              height: \"100%\",\n              lineHeight: 1,\n              padding: 0,\n              width: \"100%\",\n              border: 0,\n              backgroundColor: \"white\",\n            }}\n          />\n        )}\n      </ApolloConsumer>\n    </SearchBox>\n  );\n};\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}