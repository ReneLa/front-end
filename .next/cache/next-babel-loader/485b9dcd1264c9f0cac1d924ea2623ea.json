{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_HOUSE_MUTATION(\\n    $house_heading: String!\\n    $house_description: String!\\n    $house_no: String!\\n    $no_bathrooms: Int\\n    $no_bedrooms: Int\\n    $no_annex: Int\\n    $dinning_room: Int\\n    $isActive: Boolean\\n    $has_in_kitchen: Boolean\\n    $has_balcony: Boolean\\n    $has_garden: Boolean\\n    $has_hotwater: Boolean\\n    $has_carparking: Boolean\\n    $house_type: ID\\n    # $parent_houseId: ID\\n    $countryId: ID\\n    $provinceId: ID\\n    $districtId: ID # $sectorId: ID\\n  ) {\\n    createHouse(\\n      house_heading: $house_heading\\n      house_description: $house_description\\n      house_no: $house_no\\n      no_bathrooms: $no_bathrooms\\n      no_bedrooms: $no_bedrooms\\n      no_annex: $no_annex\\n      dinning_room: $dinning_room\\n      isActive: $isActive\\n      has_in_kitchen: $has_in_kitchen\\n      has_balcony: $has_balcony\\n      has_garden: $has_garden\\n      has_hotwater: $has_hotwater\\n      has_carparking: $has_carparking\\n      house_type: $house_type\\n      # parent_houseId: $parent_houseId\\n      countryId: $countryId\\n      provinceId: $provinceId\\n      districtId: $districtId # sectorId: $sectorId\\n    ) {\\n      id\\n      house_heading\\n      house_description\\n      house_no\\n      no_annex\\n      no_bathrooms\\n      no_bedrooms\\n      dinning_room\\n      isActive\\n      has_in_kitchen\\n      has_balcony\\n      has_garden\\n      has_hotwater\\n      has_carparking\\n      house_type {\\n        id\\n      }\\n      # parent_houseId {\\n      #   id\\n      # }\\n      countryId {\\n        id\\n        name\\n      }\\n      provinceId {\\n        id\\n        name\\n      }\\n      districtId {\\n        id\\n        name\\n      }\\n      # sectorId {\\n      #   id\\n      #   name\\n      # }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Checkbox, Divider, FormControlLabel, FormGroup } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport TagIcon from \"@material-ui/icons/LocalOffer\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/Houses\";\nimport { ActionButton, CaptionText, Container, TextInput } from \"../../../styledComponents\";\nvar CREATE_HOUSE_MUTATION = gql(_templateObject());\nvar ActionBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateHouse__ActionBtn\",\n  componentId: \"r30vjh-0\"\n})([\"display:flex;justify-content:center;align-items:center;height:30px;width:30px;align-content:center;border-radius:2px;margin-right:5px;background-color:\", \";\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.lightGrey;\n});\n\nvar styles = function styles(theme) {\n  return {\n    list: {\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    formControl: {\n      marginTop: theme.spacing(2),\n      maxWidth: 120\n    },\n    inputStyle: {\n      border: 0,\n      borderRadius: 4,\n      paddingTop: 10,\n      paddingRight: 10,\n      paddingBottom: 10,\n      paddingLeft: 10,\n      backgroundColor: \"#F5F8FA\",\n      // lineHeight: 2,\n      minHeight: 60,\n      fontSize: 12,\n      \"&:focus\": {\n        border: \"1px solid #4C3AF7\",\n        backgroundColor: \"#FEFEFF\"\n      }\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2)\n    },\n    resetContainer: {\n      padding: theme.spacing(3)\n    },\n    headerStyle: {\n      fontWeight: \"500\",\n      fontSize: 14\n    },\n    checkStyle: {\n      fontWeight: \"400\",\n      fontSize: 12\n    }\n  };\n};\n\nvar GreenCheckbox = withStyles({\n  root: {\n    color: \"green\",\n    \"&$checked\": {\n      color: \"red\"\n    }\n  },\n  checked: {}\n})(function (props) {\n  return __jsx(Checkbox, _extends({\n    color: \"default\"\n  }, props));\n});\n\nvar CreateHouse = /*#__PURE__*/function (_React$Component) {\n  _inherits(CreateHouse, _React$Component);\n\n  var _super = _createSuper(CreateHouse);\n\n  function CreateHouse() {\n    var _this;\n\n    _classCallCheck(this, CreateHouse);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      createdHouses: [],\n      activeStep: 0,\n      house_heading: \"\",\n      house_description: \"\",\n      house_no: \"\",\n      no_annex: \"\",\n      no_bathrooms: \"\",\n      no_bedrooms: \"\",\n      dinning_room: \"\",\n      isActive: false,\n      has_in_kitchen: false,\n      has_balcony: false,\n      has_garden: false,\n      has_hotwater: false,\n      has_carparking: false,\n      house_type: \"\",\n      parent_houseId: \"\",\n      countryId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\",\n      success: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReset\", function () {\n      _this.setState({\n        activeStep: 0\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CreateHouse, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeStep = _this$state.activeStep,\n          house_heading = _this$state.house_heading,\n          house_description = _this$state.house_description,\n          house_no = _this$state.house_no,\n          no_annex = _this$state.no_annex,\n          no_bathrooms = _this$state.no_bathrooms,\n          no_bedrooms = _this$state.no_bedrooms,\n          dinning_room = _this$state.dinning_room,\n          isActive = _this$state.isActive,\n          has_in_kitchen = _this$state.has_in_kitchen,\n          has_balcony = _this$state.has_balcony,\n          has_garden = _this$state.has_garden,\n          has_hotwater = _this$state.has_hotwater,\n          has_carparking = _this$state.has_carparking,\n          house_type = _this$state.house_type,\n          parent_houseId = _this$state.parent_houseId,\n          countryId = _this$state.countryId,\n          provinceId = _this$state.provinceId,\n          districtId = _this$state.districtId,\n          sectorId = _this$state.sectorId,\n          createdHouses = _this$state.createdHouses,\n          success = _this$state.success;\n      var classes = this.props.classes;\n      return __jsx(Mutation, {\n        mutation: CREATE_HOUSE_MUTATION,\n        refetchQueries: [{\n          query: GET_USER_HOUSES\n        }],\n        variables: {\n          house_heading: house_heading,\n          house_description: house_description,\n          house_no: house_no,\n          no_bathrooms: parseInt(no_bathrooms),\n          no_bedrooms: parseInt(no_bedrooms),\n          no_annex: parseInt(no_annex),\n          dinning_room: parseInt(dinning_room),\n          isActive: isActive,\n          has_in_kitchen: has_in_kitchen,\n          has_balcony: has_balcony,\n          has_garden: has_garden,\n          has_hotwater: has_hotwater,\n          has_carparking: has_carparking,\n          house_type: house_type,\n          // parent_houseId,\n          countryId: countryId,\n          provinceId: provinceId,\n          districtId: districtId // sectorId\n\n        }\n      }, function (createHouse, _ref2) {\n        var loading = _ref2.loading,\n            error = _ref2.error;\n        return __jsx(Container, {\n          flex: 1\n        }, __jsx(\"form\", {\n          method: \"post\",\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n            padding: 15,\n            position: \"relative\"\n          },\n          onSubmit: function _callee(e) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    e.preventDefault();\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(createHouse().then(function (res) {\n                      _this2.setState({\n                        success: true\n                      });\n                    })[\"catch\"](function (err) {\n                      alert(err);\n                    }));\n\n                  case 3:\n                    _this2.setState({\n                      house_heading: \"\",\n                      house_description: \"\",\n                      house_no: \"\",\n                      no_annex: 0,\n                      no_bathrooms: 0,\n                      no_bedrooms: 0,\n                      dinning_room: 0,\n                      isActive: false,\n                      has_in_kitchen: false,\n                      has_balcony: false,\n                      has_garden: false,\n                      has_hotwater: false,\n                      has_carparking: false,\n                      house_type: \"\",\n                      parent_houseId: \"\",\n                      countryId: \"\",\n                      provinceId: \"\",\n                      districtId: \"\",\n                      sectorId: \"\"\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        }, __jsx(Container, {\n          flex: false,\n          row: true,\n          center: true,\n          customStyles: {\n            paddingTop: 20,\n            paddingBottom: 20\n          }\n        }, __jsx(Container, {\n          row: true,\n          center: true,\n          flex: 1\n        }, __jsx(ActionBtn, null, __jsx(AddIcon, {\n          style: {\n            fontSize: 20\n          }\n        })), __jsx(CaptionText, null, \"Assign to building\")), __jsx(Container, {\n          row: true,\n          center: true,\n          flex: 1\n        }, __jsx(ActionBtn, null, __jsx(AddIcon, {\n          style: {\n            fontSize: 20\n          }\n        })), __jsx(CaptionText, null, \"Assign to tenant\")), __jsx(Container, {\n          row: true,\n          center: true,\n          flex: 1\n        }, __jsx(ActionBtn, null, __jsx(TagIcon, {\n          style: {\n            fontSize: 18\n          }\n        })), __jsx(CaptionText, null, \"select tag\"))), __jsx(Divider, {\n          style: {\n            height: \"0.5px\"\n          }\n        }), __jsx(Container, {\n          row: true,\n          flex: false,\n          space: \"space-between\",\n          customStyles: {\n            width: \"100%\",\n            paddingTop: 20\n          }\n        }, __jsx(TextInput, {\n          label: \"House Heading\",\n          placeholder: \"start typing ...\",\n          type: \"text\",\n          value: house_heading,\n          onChange: function onChange(e) {\n            _this2.setState({\n              house_heading: e.target.value\n            });\n          },\n          customStyles: {\n            width: 200\n          }\n        }), __jsx(TextInput, {\n          label: \"House Number\",\n          type: \"text\",\n          value: house_no,\n          onChange: function onChange(e) {\n            _this2.setState({\n              house_no: e.target.value\n            });\n          },\n          customStyles: {\n            width: 200\n          }\n        })), __jsx(Container, {\n          column: true,\n          flex: false,\n          customStyles: {\n            width: \"100%\",\n            paddingTop: 20\n          }\n        }, __jsx(CaptionText, {\n          customStyles: {\n            marginBottom: 5\n          }\n        }, \"Description\"), __jsx(\"textarea\", {\n          type: \"text\",\n          placeholder: \"start typing here...\",\n          className: classes.inputStyle,\n          value: house_description,\n          onChange: function onChange(e) {\n            _this2.setState({\n              house_description: e.target.value\n            });\n          }\n        })), __jsx(Container, {\n          column: true,\n          flex: false,\n          customStyles: {\n            width: \"100%\",\n            paddingTop: 15,\n            paddingBottom: 5\n          }\n        }, __jsx(CaptionText, {\n          customStyles: {\n            color: \"#323130\",\n            fontWeight: \"600\"\n          }\n        }, \"House Features\"), __jsx(Divider, {\n          style: {\n            height: \"0.5px\"\n          }\n        })), __jsx(Container, {\n          row: true,\n          flex: false,\n          customStyles: {\n            width: \"100%\"\n          }\n        }, __jsx(Container, {\n          column: true,\n          flex: 1\n        }, __jsx(TextInput, {\n          row: true,\n          label: \"Bedrooms\",\n          type: \"number\",\n          placeholder: \"...\",\n          value: no_bedrooms,\n          onChange: function onChange(e) {\n            _this2.setState({\n              no_bedrooms: e.target.value\n            });\n          },\n          customStyles: {\n            width: 80\n          }\n        }), __jsx(TextInput, {\n          label: \"Bathrooms\",\n          type: \"number\",\n          placeholder: \"...\",\n          value: no_bathrooms,\n          onChange: function onChange(e) {\n            _this2.setState({\n              no_bathrooms: e.target.value\n            });\n          },\n          row: true,\n          customStyles: {\n            width: 80\n          }\n        }), __jsx(TextInput, {\n          label: \"Annex\",\n          type: \"number\",\n          placeholder: \"...\",\n          value: no_annex,\n          row: true,\n          onChange: function onChange(e) {\n            _this2.setState({\n              no_annex: e.target.value\n            });\n          },\n          customStyles: {\n            width: 80\n          }\n        }), __jsx(TextInput, {\n          label: \"Dinning rooms\",\n          type: \"number\",\n          placeholder: \"...\",\n          value: dinning_room,\n          onChange: function onChange(e) {\n            _this2.setState({\n              dinning_room: e.target.value\n            });\n          },\n          row: true,\n          customStyles: {\n            width: 80\n          }\n        })), __jsx(Container, {\n          flex: 1,\n          column: true,\n          center: true,\n          customStyles: {\n            width: \"100%\",\n            paddingTop: 10,\n            paddingBottom: 20\n          }\n        }, __jsx(FormGroup, {\n          column: true\n        }, __jsx(FormControlLabel, {\n          control: __jsx(GreenCheckbox, {\n            checked: has_hotwater,\n            onChange: function onChange(e) {\n              _this2.setState({\n                has_hotwater: !has_hotwater\n              });\n            },\n            name: \"hot_water\"\n          }),\n          label: \"Hot Water\"\n        }), __jsx(FormControlLabel, {\n          control: __jsx(GreenCheckbox, {\n            checked: has_carparking,\n            onChange: function onChange(e) {\n              _this2.setState({\n                has_carparking: !has_carparking\n              });\n            },\n            name: \"parking\"\n          }),\n          label: \"Has Parking\"\n        }), __jsx(FormControlLabel, {\n          control: __jsx(GreenCheckbox, {\n            checked: has_in_kitchen,\n            onChange: function onChange(e) {\n              _this2.setState({\n                has_in_kitchen: !has_in_kitchen\n              });\n            },\n            name: \"kitchen\"\n          }),\n          label: \"Inside Kitchen\"\n        }), __jsx(FormControlLabel, {\n          control: __jsx(GreenCheckbox, {\n            checked: has_balcony,\n            onChange: function onChange(e) {\n              _this2.setState({\n                has_balcony: !has_balcony\n              });\n            },\n            name: \"balcony\"\n          }),\n          label: \"Has balcony\"\n        }), __jsx(FormControlLabel, {\n          control: __jsx(GreenCheckbox, {\n            checked: has_garden,\n            onChange: function onChange(e) {\n              _this2.setState({\n                has_garden: !has_garden\n              });\n            },\n            name: \"garden\"\n          }),\n          label: \"Has garden\"\n        })))), __jsx(Container, {\n          flex: false,\n          column: true,\n          customStyles: {\n            width: \"100%\",\n            paddingTop: 10,\n            paddingBottom: 20\n          }\n        }, __jsx(CaptionText, {\n          customStyles: {\n            marginBottom: 5\n          }\n        }, \"House profile\"), __jsx(Container, {\n          row: true,\n          center: true\n        }, __jsx(UploadIcon, {\n          style: {}\n        }), __jsx(CaptionText, {\n          customStyles: {\n            marginLeft: 10\n          }\n        }, \"upload your house image\")))));\n      });\n    }\n  }]);\n\n  return CreateHouse;\n}(React.Component);\n\nexport default withStyles(styles)(CreateHouse);","map":null,"metadata":{},"sourceType":"module"}