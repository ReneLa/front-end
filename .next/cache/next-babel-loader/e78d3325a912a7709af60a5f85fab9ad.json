{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/renela/Projects/React js/House /HouseAssist/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport Page from \"../components/Page\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport withData from \"../lib/withData\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   // Remove the server-side injected CSS.\n    //   const jssStyles = document.querySelector(\"#jss-server-side\");\n    //   if (jssStyles) {\n    //     jssStyles.parentElement.removeChild(jssStyles);\n    //   }\n    // }\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apollo = _this$props.apollo;\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              //this exposes the query to the user\n              pageProps.query = ctx.query;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/renela/Projects/React js/House /HouseAssist/frontend/pages/_app.js"],"names":["React","App","Page","ApolloProvider","ThemeProvider","withData","CssBaseline","MyApp","props","Component","pageProps","apollo","ctx","getInitialProps","query"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;IAEMC,K;;;;;;;;;;;;;AAWJ;AACA;AACA;AACA;AACA;AACA;AACA;6BACS;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,MADvB,eACuBA,MADvB;AAGP,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF;AAOD;;;;;;;;;AA3B8BD,cAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACpCF,cAAAA,S,GAAY,E;;mBACZD,SAAS,CAACI,e;;;;;;+CACMJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBF,cAAAA,S;;;AAGF;AACAA,cAAAA,SAAS,CAACI,KAAV,GAAkBF,GAAG,CAACE,KAAtB;+CACO;AAAEJ,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EATST,G;;AA+BpB,eAAeI,QAAQ,CAACE,KAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Page from \"../components/Page\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport withData from \"../lib/withData\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    //this exposes the query to the user\n    pageProps.query = ctx.query;\n    return { pageProps };\n  }\n  // componentDidMount() {\n  //   // Remove the server-side injected CSS.\n  //   const jssStyles = document.querySelector(\"#jss-server-side\");\n  //   if (jssStyles) {\n  //     jssStyles.parentElement.removeChild(jssStyles);\n  //   }\n  // }\n  render() {\n    const { Component, pageProps, apollo } = this.props;\n\n    return (\n      <ApolloProvider client={apollo}>\n        <Page>\n          <Component {...pageProps} />\n        </Page>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default withData(MyApp);\n"]},"metadata":{},"sourceType":"module"}