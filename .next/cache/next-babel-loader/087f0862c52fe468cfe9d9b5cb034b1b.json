{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport NextDocument from \"next/document\";\nimport { ServerStyleSheet as StyledComponentSheets } from \"styled-components\";\nimport { ServerStyleSheets as MaterialUiServerStyleSheets } from \"@material-ui/styles\";\nexport default class Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    const styledComponentSheet = new StyledComponentSheets();\n    const materialUiSheets = new MaterialUiServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => materialUiSheets.collect(styledComponentSheet.collectStyles(__jsx(App, props)))\n      });\n\n      const initialProps = await NextDocument.getInitialProps(ctx);\n      return _objectSpread({}, initialProps, {\n        styles: [__jsx(React.Fragment, {\n          key: \"styles\"\n        }, initialProps.styles, materialUiSheets.getStyleElement(), styledComponentSheet.getStyleElement())]\n      });\n    } finally {\n      styledComponentSheet.seal();\n    }\n  }\n\n} // import Document, { Head, Main, NextScript } from \"next/document\";\n// import { ServerStyleSheet } from \"styled-components\";\n// import { Stylesheet, InjectionMode, resetIds } from \"office-ui-fabric-react\";\n// export default class MyDocument extends Document {\n//   static getInitialProps({ renderPage }) {\n//     const sheet = new ServerStyleSheet();\n//     const stylesheet = Stylesheet.getInstance();\n//     stylesheet.setConfig({\n//       injectionMode: InjectionMode.none,\n//       namespace: \"server\"\n//     });\n//     stylesheet.reset();\n//     resetIds();\n//     const page = renderPage(App => props =>\n//       sheet.collectStyles(<App {...props} />)\n//     );\n//     const styleTags = sheet.getStyleElement();\n//     const style_tags = stylesheet.getRules(true);\n//     return { ...page, styleTags, style_tags };\n//   }\n//   render() {\n//     return (\n//       <html>\n//         <Head>\n//           <style\n//             type=\"text/css\"\n//             dangerouslySetInnerHTML={{ __html: this.props.style_tags }}\n//           />\n//           {this.props.styleTags}\n//         </Head>\n//         <body>\n//           <Main />\n//           <NextScript />\n//         </body>\n//       </html>\n//     );\n//   }\n// }","map":null,"metadata":{},"sourceType":"module"}