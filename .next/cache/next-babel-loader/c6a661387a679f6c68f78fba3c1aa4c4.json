{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/landlord/house/DeleteHouse.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { GET_USER_HOUSES } from \"../../queryComponents/Houses\";\nimport gql from \"graphql-tag\";\nimport { IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst DELETE_HOUSE = gql`\n  mutation DELETE_HOUSE($id: ID!) {\n    deleteHouse(id: $id) {\n      id\n      house_heading\n    }\n  }\n`;\n\nclass DeleteHouse extends React.Component {\n  // update = (cache, payload) => {\n  //   // manually update the cache on the client, so it matches the server\n  //   // 1. Read the cache for the items we want\n  //   const data = cache.readQuery({ query: GET_USER_HOUSES });\n  //   // console.log(data, payload);\n  //   // 2. Filter the deleted itemout of the page\n  //   // data.items = data.items.filter(\n  //   //   item => item.id !== payload.data.deleteItem.id\n  //   // );\n  //   // 3. Put the items back!\n  //   cache.writeQuery({ query: GET_USER_HOUSES, data });\n  // };\n  render() {\n    return __jsx(Mutation, {\n      mutation: DELETE_HOUSE,\n      variables: {\n        id: this.props.id\n      } // update={this.update}\n      ,\n      refetchQueries: [{\n        query: GET_USER_HOUSES\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, (deleteHouse, {\n      error\n    }) => __jsx(IconButton, {\n      style: {\n        padding: 5\n      },\n      onClick: () => {\n        if (confirm(\"Are you sure you want to delete this house?\")) {\n          deleteHouse().then(res => {\n            this.props.onClose();\n          }).catch(err => {\n            alert(err.message);\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(DeleteIcon, {\n      style: {\n        fontSize: 17\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DeleteHouse;","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/landlord/house/DeleteHouse.js"],"names":["React","Mutation","GET_USER_HOUSES","gql","IconButton","DeleteIcon","DELETE_HOUSE","DeleteHouse","Component","render","id","props","query","deleteHouse","error","padding","confirm","then","res","onClose","catch","err","alert","message","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;CAAzB;;AASA,MAAMI,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,QAAD;AACE,MAAA,QAAQ,EAAEH,YADZ;AAEE,MAAA,SAAS,EAAE;AAAEI,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWD;AAAjB,OAFb,CAGE;AAHF;AAIE,MAAA,cAAc,EAAE,CAAC;AAAEE,QAAAA,KAAK,EAAEV;AAAT,OAAD,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,CAACW,WAAD,EAAc;AAAEC,MAAAA;AAAF,KAAd,KACC,MAAC,UAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIC,OAAO,CAAC,6CAAD,CAAX,EAA4D;AAC1DH,UAAAA,WAAW,GACRI,IADH,CACQC,GAAG,IAAI;AACX,iBAAKP,KAAL,CAAWQ,OAAX;AACD,WAHH,EAIGC,KAJH,CAISC,GAAG,IAAI;AACZC,YAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD,WANH;AAOD;AACF,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAPJ,CADF;AA2BD;;AAzCuC;;AA4C1C,eAAejB,WAAf","sourcesContent":["import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { GET_USER_HOUSES } from \"../../queryComponents/Houses\";\nimport gql from \"graphql-tag\";\nimport { IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst DELETE_HOUSE = gql`\n  mutation DELETE_HOUSE($id: ID!) {\n    deleteHouse(id: $id) {\n      id\n      house_heading\n    }\n  }\n`;\n\nclass DeleteHouse extends React.Component {\n  // update = (cache, payload) => {\n  //   // manually update the cache on the client, so it matches the server\n  //   // 1. Read the cache for the items we want\n  //   const data = cache.readQuery({ query: GET_USER_HOUSES });\n  //   // console.log(data, payload);\n  //   // 2. Filter the deleted itemout of the page\n  //   // data.items = data.items.filter(\n  //   //   item => item.id !== payload.data.deleteItem.id\n  //   // );\n  //   // 3. Put the items back!\n  //   cache.writeQuery({ query: GET_USER_HOUSES, data });\n  // };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_HOUSE}\n        variables={{ id: this.props.id }}\n        // update={this.update}\n        refetchQueries={[{ query: GET_USER_HOUSES }]}\n      >\n        {(deleteHouse, { error }) => (\n          <IconButton\n            style={{ padding: 5 }}\n            onClick={() => {\n              if (confirm(\"Are you sure you want to delete this house?\")) {\n                deleteHouse()\n                  .then(res => {\n                    this.props.onClose();\n                  })\n                  .catch(err => {\n                    alert(err.message);\n                  });\n              }\n            }}\n          >\n            <DeleteIcon style={{ fontSize: 17 }} />\n          </IconButton>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteHouse;\n"]},"metadata":{},"sourceType":"module"}