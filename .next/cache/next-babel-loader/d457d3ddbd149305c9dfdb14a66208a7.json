{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/House.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst GET_HOUSE = gql`\n  query GET_HOUSE($id: ID!) {\n    getHouse(id: $id) {\n      id\n      house_heading\n      house_description\n      house_no\n      no_bathrooms\n      no_bedrooms\n      no_annex\n      dinning_room\n      isActive\n      has_in_kitchen\n      has_balcony\n      has_garden\n      has_hotwater\n      has_carparking\n      house_type {\n        id\n        house_type\n      }\n      countryId {\n        id\n        name\n      }\n      provinceId {\n        id\n        name\n      }\n      districtId {\n        id\n        name\n      }\n      sectorId {\n        id\n        name\n      }\n      images {\n        id\n        image\n      }\n    }\n  }\n`;\n\nconst SingleHouse = props => __jsx(Query, _extends({}, props, {\n  query: GET_HOUSE,\n  variables: {\n    id: props.id\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }\n}), payload => props.children(payload));\n\nSingleHouse.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default SingleHouse;\nexport { GET_HOUSE };","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/House.js"],"names":["React","PropTypes","Query","gql","GET_HOUSE","SingleHouse","props","id","payload","children","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;;AA6CA,MAAME,WAAW,GAAIC,KAAD,IAClB,MAAC,KAAD,eAAWA,KAAX;AAAkB,EAAA,KAAK,EAAEF,SAAzB;AAAoC,EAAA,SAAS,EAAE;AAAEG,IAAAA,EAAE,EAAED,KAAK,CAACC;AAAZ,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACIC,OAAD,IAAaF,KAAK,CAACG,QAAN,CAAeD,OAAf,CADhB,CADF;;AAMAH,WAAW,CAACK,SAAZ,GAAwB;AACtBD,EAAAA,QAAQ,EAAER,SAAS,CAACU,IAAV,CAAeC;AADH,CAAxB;AAGA,eAAeP,WAAf;AACA,SAASD,SAAT","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst GET_HOUSE = gql`\n  query GET_HOUSE($id: ID!) {\n    getHouse(id: $id) {\n      id\n      house_heading\n      house_description\n      house_no\n      no_bathrooms\n      no_bedrooms\n      no_annex\n      dinning_room\n      isActive\n      has_in_kitchen\n      has_balcony\n      has_garden\n      has_hotwater\n      has_carparking\n      house_type {\n        id\n        house_type\n      }\n      countryId {\n        id\n        name\n      }\n      provinceId {\n        id\n        name\n      }\n      districtId {\n        id\n        name\n      }\n      sectorId {\n        id\n        name\n      }\n      images {\n        id\n        image\n      }\n    }\n  }\n`;\n\nconst SingleHouse = (props) => (\n  <Query {...props} query={GET_HOUSE} variables={{ id: props.id }}>\n    {(payload) => props.children(payload)}\n  </Query>\n);\n\nSingleHouse.propTypes = {\n  children: PropTypes.func.isRequired,\n};\nexport default SingleHouse;\nexport { GET_HOUSE };\n"]},"metadata":{},"sourceType":"module"}