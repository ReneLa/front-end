{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { Avatar, Button, Divider, GridList, GridListTile, IconButton, InputBase, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckIcon from \"@material-ui/icons/CheckCircleOutline\"; // import BathroomIcon from \"@material-ui/icons/Bathtub\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport loadingImg from \"../../../public/static/126.gif\";\nimport Tenants from \"../../queryComponents/Tenants\";\nimport { Container } from \"../../styledComponents\";\nimport CustomDrawer from \"../Drawer\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flex: 1,\n      height: 500,\n      flexDirection: \"column\",\n      padding: theme.spacing(1)\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      marginBottom: theme.spacing(2) // padding: theme.spacing(0)\n      // ...theme.mixins.toolbar\n\n    },\n    searchRoot: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      width: 300\n    },\n    input: {\n      marginLeft: 10,\n      flex: 1\n    },\n    iconButton: {\n      padding: 10\n    },\n    divider: {\n      height: 28,\n      margin: 4\n    },\n    dividerLine: {\n      width: \"100%\" // marginTop: 3\n\n    },\n    gridList: {\n      display: \"flex\",\n      flex: 1,\n      // backgroundColor: \"blue\",\n      // width: \"100%\",\n      height: \"100%\",\n      overflowY: \"hidden\"\n    },\n    icon: {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    tenantTileStyle: {\n      // display: \"flex\",\n      // flex: 1,\n      // width: 150,\n      borderRadius: 5,\n      margin: 5,\n      transition: \"transform 600ms\",\n      \"&:hover\": {\n        // zIndex: 1,\n        // backgroundColor: \"#0B1B21\",\n        transform: \"scale(1.03) translate(0.2px, 0px)\"\n      }\n    },\n    tileWrapper: {\n      width: \"100%\",\n      height: \"100%\" // backgroundColor: \"pink\"\n\n    },\n    imageWrapper: {\n      // display: \"flex\",\n      // flex: 1,\n      // width: 150,\n      padding: 2,\n      borderRadius: 4,\n      transition: \"transform 600ms\" // \"&:hover\": {\n      //   border: \"1px solid red\"\n      // }\n\n    },\n    imageStyle: {\n      width: \"100%\",\n      height: 90,\n      objectFit: \"fit\"\n    }\n  };\n});\n\nvar Index = function Index(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleDrawerOpen = function handleDrawerOpen() {\n    setOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setOpen(false);\n  };\n\n  var onViewHouse = function onViewHouse(house) {\n    setHouse(house);\n  };\n\n  var _tileCard = function _tileCard(tenant) {\n    var _jsx;\n\n    var userId = tenant.userId,\n        houseId = tenant.houseId;\n    return __jsx(Link, {\n      href: \"tenant/[id]\",\n      as: \"tenant/\" + tenant.id\n    }, __jsx(\"a\", {\n      style: {\n        textDecoration: \"none\"\n      }\n    }, __jsx(Container, {\n      flex: 1,\n      column: true,\n      className: classes.tileWrapper,\n      color: \"white\"\n    }, __jsx(Container, {\n      middle: true,\n      center: true,\n      color: \"transparent\",\n      customStyles: {\n        position: \"absolute\",\n        top: 3,\n        right: 3\n      }\n    }, tenant.isActive && __jsx(CheckIcon, {\n      style: {\n        fontSize: 20,\n        color: \"green\"\n      }\n    })), __jsx(Container, {\n      flex: 0.6,\n      middle: true,\n      column: true,\n      center: true,\n      className: classes.imageWrapper,\n      color: \"transparent\"\n    }, __jsx(Avatar, null, tenant.firstName.charAt(0)), __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true\n    }, tenant.firstName + \" \" + tenant.lastName)), __jsx(Container, {\n      flex: 0.4,\n      row: true,\n      color: \"transparent\",\n      customStyles: {\n        paddingLeft: 5,\n        paddingRight: 5\n      }\n    }, __jsx(Container, {\n      row: true,\n      center: true,\n      middle: true,\n      flex: 1,\n      color: \"transparent\"\n    }), __jsx(Container, (_jsx = {\n      row: true,\n      middle: true,\n      center: true,\n      flex: 1\n    }, _defineProperty(_jsx, \"center\", true), _defineProperty(_jsx, \"color\", \"transparent\"), _jsx), __jsx(Button, {\n      color: \"primary\"\n    }, \"View Profile\"))))));\n  };\n\n  return __jsx(Container, {\n    flex: 1,\n    column: true,\n    customStyles: {\n      paddingLeft: 20,\n      height: \"100%\"\n    }\n  }, __jsx(Container, {\n    flex: 1,\n    id: \"page-container\",\n    customStyles: {\n      position: \"relative\"\n    }\n  }, __jsx(Container, {\n    id: \"command-header\",\n    row: true,\n    space: \"space-between\",\n    customStyles: {\n      marginTop: 10,\n      marginLeft: 5,\n      marginBottom: 10\n    }\n  }, __jsx(Paper, {\n    component: \"form\",\n    className: classes.searchRoot,\n    elevation: 0\n  }, __jsx(InputBase, {\n    className: classes.input,\n    placeholder: \"Search any tenant\" // inputProps={{ \"aria-label\": \"search google maps\" }}\n\n  }), __jsx(Divider, {\n    className: classes.divider,\n    orientation: \"vertical\"\n  }), __jsx(IconButton, {\n    type: \"submit\",\n    className: classes.iconButton,\n    \"aria-label\": \"search\"\n  }, __jsx(SearchIcon, null))), __jsx(Container, {\n    flex: 0.1,\n    row: true,\n    middle: true,\n    center: true\n  }, __jsx(\"button\", {\n    onClick: handleDrawerOpen\n  }, \" Add Tenant\"))), __jsx(Tenants, null, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading;\n\n    if (data) {\n      var tenants = data.getUserTenants;\n\n      if (tenants.length === 0) {\n        return __jsx(GridList, {\n          cellHeight: 150,\n          cols: 7,\n          spacing: 0,\n          className: classes.gridList\n        }, [{\n          id: 1,\n          isActive: true,\n          firstName: \"Rene\",\n          lastName: \"La\"\n        }, {\n          id: 2,\n          isActive: false,\n          firstName: \"Mehn\",\n          lastName: \"Soft\"\n        }, {\n          id: 3,\n          isActive: true,\n          firstName: \"Nein\",\n          lastName: \"gehts\"\n        }, {\n          id: 4,\n          isActive: true,\n          firstName: \"Rene\",\n          lastName: \"La\"\n        }, {\n          id: 5,\n          isActive: false,\n          firstName: \"Mehn\",\n          lastName: \"Soft\"\n        }, {\n          id: 6,\n          isActive: true,\n          firstName: \"Nein\",\n          lastName: \"gehts\"\n        }, {\n          id: 7,\n          isActive: true,\n          firstName: \"Rene\",\n          lastName: \"La\"\n        }, {\n          id: 8,\n          isActive: true,\n          firstName: \"Nein\",\n          lastName: \"gehts\"\n        }, {\n          id: 9,\n          isActive: true,\n          firstName: \"Rene\",\n          lastName: \"La\"\n        }, {\n          id: 10,\n          isActive: false,\n          firstName: \"Mehn\",\n          lastName: \"Soft\"\n        }, {\n          id: 11,\n          isActive: true,\n          firstName: \"Nein\",\n          lastName: \"gehts\"\n        }, {\n          id: 12,\n          isActive: true,\n          firstName: \"Rene\",\n          lastName: \"La\"\n        }, {\n          id: 13,\n          isActive: true,\n          firstName: \"Nein\",\n          lastName: \"gehts\"\n        }, {\n          id: 14,\n          isActive: true,\n          firstName: \"Rene\",\n          lastName: \"La\"\n        }, {\n          id: 15,\n          isActive: false,\n          firstName: \"Mehn\",\n          lastName: \"Soft\"\n        }, {\n          id: 16,\n          isActive: true,\n          firstName: \"Nein\",\n          lastName: \"gehts\"\n        }, {\n          id: 17,\n          isActive: true,\n          firstName: \"Rene\",\n          lastName: \"La\"\n        }].map(function (tenant) {\n          return __jsx(GridListTile, {\n            key: tenant.id,\n            cols: 1,\n            className: classes.tenantTileStyle\n          }, _tileCard(tenant));\n        }));\n      }\n\n      return null;\n    }\n\n    return __jsx(Container, {\n      flex: 1,\n      column: true,\n      middle: true,\n      center: true\n    }, loading && __jsx(\"img\", {\n      src: loadingImg,\n      style: {\n        width: 25,\n        height: 25\n      }\n    }));\n  })), __jsx(CustomDrawer, {\n    onOpen: handleDrawerOpen,\n    onClose: handleDrawerClose,\n    open: open\n  }));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}