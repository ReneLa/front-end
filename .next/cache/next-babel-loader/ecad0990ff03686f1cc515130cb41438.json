{"ast":null,"code":"var __jsx = React.createElement;\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport React, { useState } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport hasLogo from \"../../public/static/HAS.png\";\nimport { GET_COUNTRIES } from \"../queryComponents/Countries\";\nimport { GET_DISTRICTS_IN_PROVINCE } from \"../queryComponents/Districts\";\nimport { GET_PROVINCES_IN_COUNTRY } from \"../queryComponents/Provinces\";\nimport { CaptionText, Container, Dropdown, Header, Input, PrimaryButton, Text } from \"../styledComponents\";\nconst ImgWrapper = styled(Container).withConfig({\n  displayName: \"CompleteRegister__ImgWrapper\",\n  componentId: \"r6hcm3-0\"\n})([\"flex-direction:column;flex:0.3;padding-top:50px;padding-left:60px;padding-right:10px;background-color:\", \";min-height:100%;max-height:100%;\"], ({\n  theme\n}) => theme.btnPrimary);\nconst FormWrapper = styled(Container).withConfig({\n  displayName: \"CompleteRegister__FormWrapper\",\n  componentId: \"r6hcm3-1\"\n})([\"flex-direction:column;padding-top:40px;padding-left:60px;padding-right:60px;flex:0.7;min-height:100%;max-height:100%;\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"CompleteRegister__Form\",\n  componentId: \"r6hcm3-2\"\n})([\"display:flex;flex-direction:column;width:50%;flex:0.72;padding-top:30px;padding-bottom:20px;\"]);\n\nconst Countries = ({\n  country,\n  setCountry\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: countryList,\n    1: setCountryList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getCountries(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_COUNTRIES\n    });\n    const {\n      countries\n    } = res.data;\n    setCountryList(changeObj(countries));\n  }\n\n  const changeObj = arr => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, client => __jsx(Container, {\n    column: true,\n    color: \"transparent\",\n    customStyles: {\n      marginRight: 10\n    }\n  }, __jsx(Dropdown, {\n    title: country.length > 0 ? country[0].value : \"Country\",\n    anchorEl: anchorEl,\n    handleOpen: e => getCountries(e, client),\n    handleClose: handleClose,\n    selection: country,\n    setSelection: setCountry,\n    items: countryList,\n    wrapperStyles: {\n      width: 150,\n      marginBottom: 10,\n      backgroundColor: \"#fff\"\n    }\n  })));\n};\n\nconst Provinces = ({\n  country,\n  province,\n  setProvince\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: provinceList,\n    1: setProvinceList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getProvinces(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_PROVINCES_IN_COUNTRY,\n      variables: {\n        id: country[0].id\n      }\n    });\n    const provinces = res.data.getProvincesByCountry;\n    setProvinceList(changeObj(provinces));\n  }\n\n  const changeObj = arr => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, client => __jsx(Container, {\n    column: true,\n    color: \"transparent\",\n    customStyles: {\n      pointerEvents: country.length === 0 ? \"none\" : \"auto\",\n      marginRight: 10\n    }\n  }, __jsx(Dropdown, {\n    title: province.length > 0 ? province[0].value : \"Province\",\n    anchorEl: anchorEl,\n    handleOpen: e => getProvinces(e, client),\n    handleClose: handleClose,\n    selection: province,\n    setSelection: setProvince,\n    items: provinceList,\n    wrapperStyles: {\n      width: 150\n    }\n  })));\n};\n\nconst Districts = ({\n  province,\n  district,\n  setDistrict\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: districtList,\n    1: setDistrictList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getDistricts(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_DISTRICTS_IN_PROVINCE,\n      variables: {\n        id: province[0].id\n      }\n    });\n    const districts = res.data.getDistrictsByProvince;\n    setDistrictList(changeObj(districts));\n  }\n\n  const changeObj = arr => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, client => __jsx(Container, {\n    column: true,\n    color: \"transparent\",\n    customStyles: {\n      pointerEvents: province.length === 0 ? \"none\" : \"auto\"\n    }\n  }, __jsx(Dropdown, {\n    title: district.length > 0 ? district[0].value : \"District\",\n    anchorEl: anchorEl,\n    handleOpen: e => getDistricts(e, client),\n    handleClose: handleClose,\n    selection: district,\n    setSelection: setDistrict,\n    items: districtList,\n    wrapperStyles: {\n      width: 150\n    }\n  })));\n};\n\nconst CREATE_LANDLORD_MUTATION = gql`\n  mutation CREATE_LANDLORD_MUTATION(\n    $firstName: String!\n    $lastName: String!\n    $tel_no: String\n    $reason: String\n    $street: String\n  ) {\n    createLandlord(\n      firstName: $firstName\n      lastName: $lastName\n      tel_no: $tel_no\n      reason: $reason\n      street: $street\n    ) {\n      id\n      firstName\n    }\n  }\n`;\n\nconst CompleteRegister = () => {\n  const {\n    0: country,\n    1: setCountry\n  } = useState([]);\n  const {\n    0: district,\n    1: setDistrict\n  } = useState([]);\n  const {\n    0: province,\n    1: setProvince\n  } = useState([]);\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(null);\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(null);\n  const {\n    0: tel_no,\n    1: setTelNo\n  } = useState(null);\n  const {\n    0: reason,\n    1: setReason\n  } = useState(null);\n  const {\n    0: street,\n    1: setStreet\n  } = useState(null);\n\n  const onCompletion = () => {\n    Router.replace(\"/Landlord/dashboard\");\n    setFirstName(null);\n    setLastName(null);\n    setTelNo(null);\n    setReason(null);\n    setStreet(null);\n  };\n\n  const [createLandlord, {\n    data,\n    loading\n  }] = useMutation(CREATE_LANDLORD_MUTATION, {\n    variables: {\n      firstName,\n      lastName,\n      tel_no,\n      reason,\n      street\n    }\n  });\n  console.log(data);\n  return __jsx(Container, {\n    flex: 1,\n    row: true,\n    customStyles: {\n      minHeight: \"100vh\",\n      maxHeight: \"100vh\"\n    }\n  }, __jsx(FormWrapper, null, __jsx(Container, {\n    flex: false,\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, __jsx(\"img\", {\n    src: hasLogo,\n    style: {\n      width: \"50px\",\n      height: \"50px\",\n      marginRight: \"10px\"\n    }\n  }), __jsx(Text, null, \"House-Assist Space\")), __jsx(Container, {\n    flex: 1,\n    column: true,\n    center: true\n  }, __jsx(Form, {\n    method: \"post\",\n    onSubmit: e => {\n      e.preventDefault();\n      createLandlord();\n      Router.replace(\"/Landlrd/dashboard\");\n      setFirstName(null);\n      setLastName(null);\n      setTelNo(null);\n      setReason(null);\n      setStreet(null);\n    }\n  }, __jsx(Header, {\n    customStyles: {\n      fontWeight: \"400\",\n      marginBottom: 5\n    }\n  }, \"Provide more information\"), __jsx(\"fieldset\", {\n    disabled: loading,\n    style: {\n      display: \"flex\",\n      paddingTop: \"30px\",\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      border: \"none\",\n      flexDirection: \"column\",\n      marginBottom: 10\n    }\n  }, __jsx(CaptionText, {\n    customStyles: {\n      marginBottom: 10\n    }\n  }, \"Tell us a little more about yourself\"), __jsx(Input, {\n    label: \"FIRST NAME\",\n    placeholder: \"First Name\",\n    type: \"text\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value)\n  }), __jsx(Input, {\n    label: \"LAST NAME\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value)\n  }), __jsx(Input, {\n    label: \"PHONE NUMBER\",\n    placeholder: \"Phone Number\",\n    type: \"tel\",\n    value: tel_no,\n    onChange: e => setTelNo(e.target.value)\n  }), __jsx(Input, {\n    label: \"LOCATION\",\n    placeholder: \"Country/ city / street\",\n    type: \"tel\",\n    value: street,\n    onChange: e => setStreet(e.target.value)\n  }), __jsx(CaptionText, {\n    customStyles: {\n      marginBottom: 10,\n      fontSize: 11,\n      color: \"#323130\"\n    }\n  }, \"WHY ARE YOU JOINING HOUSE-ASSIST SPACE\"), __jsx(Input, {\n    placeholder: \"provide reason\",\n    type: \"text\",\n    value: reason,\n    onChange: e => setReason(e.target.value)\n  })), __jsx(Container, {\n    row: true,\n    center: true,\n    space: \"space-between\"\n  }, __jsx(Link, {\n    href: \"/Landlrd/dashboard\",\n    as: \"/Landlrd/dashboard\"\n  }, __jsx(\"a\", null, __jsx(PrimaryButton, {\n    type: \"button\",\n    customStyles: {\n      paddingTop: 8,\n      paddingBottom: 8,\n      marginTop: 10,\n      width: 100\n    }\n  }, \"Skip\"))), loading ? __jsx(PrimaryButton, {\n    type: \"submit\",\n    customStyles: {\n      paddingTop: 8,\n      paddingBottom: 8,\n      marginTop: 10,\n      width: 100\n    }\n  }, \"Saving\") : __jsx(PrimaryButton, {\n    disabled: firstName === null,\n    type: \"submit\",\n    customStyles: {\n      paddingTop: 8,\n      paddingBottom: 8,\n      marginTop: 10,\n      width: 100\n    }\n  }, \"Save\"))))), __jsx(ImgWrapper, null));\n};\n\nexport default CompleteRegister;","map":null,"metadata":{},"sourceType":"module"}