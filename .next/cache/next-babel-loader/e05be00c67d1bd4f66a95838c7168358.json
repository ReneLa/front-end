{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/styledComponents/DropDown.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport onClickOutside from \"react-onclickoutside\";\nimport Container from \"./Container\";\nimport { OutlinedButton, CommandButton } from \"./Button\";\nimport { CaptionText } from \"./Text\";\nimport DownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { Button, Typography, Popover } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2)\n  },\n  popoverPaper: {\n    display: \"flex\",\n    padding: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    borderRadius: 0\n  }\n}));\nconst DropWrapper = styled(Container).withConfig({\n  displayName: \"DropDown__DropWrapper\",\n  componentId: \"sc-1atbjfe-0\"\n})([\"flex:0;background-color:transparent;position:relative;\", \";\"], props => props.customStyles);\nconst DropHeader = styled(OutlinedButton).withConfig({\n  displayName: \"DropDown__DropHeader\",\n  componentId: \"sc-1atbjfe-1\"\n})([\"display:flex;flex-direction:row;flex:0;align-items:center;justify-content:space-between;padding:8px 8px;border:1px solid #d7dbdd;border-radius:1px;background-color:#f5f8fa;outline:transparent;\", \" \", \";\"], open => open && css([\" border:1px solid #5B86C6,background-color:#FEFEFF\"]), props => props.headerStyles);\nconst DropHeaderTitle = styled(Container).withConfig({\n  displayName: \"DropDown__DropHeaderTitle\",\n  componentId: \"sc-1atbjfe-2\"\n})([\"display:flex;background-color:transparent;flex:1;flex-direction:row;align-items:center;\"]);\nconst DropListContainer = styled(Container).withConfig({\n  displayName: \"DropDown__DropListContainer\",\n  componentId: \"sc-1atbjfe-3\"\n})([\"display:flex;flex:1;border-radius:1px;box-shadow:0 1.6px 3.6px 0 rgba(0,0,0,0.132),0 0.3px 0.9px 0 rgba(0,0,0,0.108);\", \"\"], props => props.customStyles);\nconst DropListItem = styled(CommandButton).withConfig({\n  displayName: \"DropDown__DropListItem\",\n  componentId: \"sc-1atbjfe-4\"\n})([\"display:flex;flex-direction:row;align-items:center;justify-content:flex-start;padding:8px 10px;\"]);\n\nconst Dropdown = ({\n  title,\n  items,\n  wrapperStyles,\n  selection,\n  setSelection,\n  headerStyles,\n  multiSelect = false\n}) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  Dropdown.handleClickOutside = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClickOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClick = item => {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(current => current.id !== item.id);\n      setSelection([...selectionAfterRemoval]);\n    }\n  };\n\n  const isItemSelected = item => {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return __jsx(DropWrapper, {\n    customStyles: wrapperStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(DropHeader, {\n    onClick: handleClickOpen,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(DropHeaderTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(CaptionText, {\n    customStyles: {\n      fontSize: 14,\n      color: \"#1c2833\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, title)), __jsx(Container, {\n    flex: 0,\n    column: true,\n    middle: true,\n    center: true,\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(DownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }))), __jsx(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl // onClose={handleClose}\n    ,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    elevation: 0,\n    classes: {\n      paper: classes.popoverPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, __jsx(DropListContainer, {\n    customStyles: wrapperStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, items.map(item => {\n    return __jsx(DropListItem, {\n      key: item.id,\n      type: \"button\",\n      onClick: () => handleClick(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, item.value), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, isItemSelected(item) && \"selected\", \" \"));\n  }))));\n};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside\n}; // export { DropDown, DropDownItem, SearchStyles };\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);\n/*\n <DropWrapper>\n      <DropHeader\n        tabIndex={0}\n        role=\"button\"\n        // onKeyPress={() => handleClickOpen}\n        onClick={() => handleClickOpen}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <DropHeaderTitle open={open}>\n          <CaptionText customStyles={{ fontSize: 14, color: \"#1c2833\" }}>\n            {title}\n          </CaptionText>\n        </DropHeaderTitle>\n        <Container column center middle>\n          <DownIcon />\n        </Container>\n      </DropHeader>\n      <Popover\n        id={id}\n        open={true}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <ul className=\"dd-list\">\n          {items.map((item) => {\n            return (\n              <li className=\"dd-list-item\" key={item.id}>\n                <button type=\"button\" onClick={() => handleClick(item)}>\n                  <span>{item.value}</span>\n                  <span>{isItemSelected(item) && \"selected\"} </span>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </Popover>\n    </DropWrapper>\n*/","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/styledComponents/DropDown.js"],"names":["React","useState","makeStyles","styled","keyframes","css","onClickOutside","Container","OutlinedButton","CommandButton","CaptionText","DownIcon","Button","Typography","Popover","useStyles","theme","typography","padding","spacing","popoverPaper","display","marginLeft","marginRight","borderRadius","DropWrapper","props","customStyles","DropHeader","open","headerStyles","DropHeaderTitle","DropListContainer","DropListItem","Dropdown","title","items","wrapperStyles","selection","setSelection","multiSelect","classes","anchorEl","setAnchorEl","Boolean","id","undefined","handleClickOutside","handleClickOpen","event","currentTarget","handleClose","handleClick","item","some","current","selectionAfterRemoval","filter","isItemSelected","fontSize","color","vertical","horizontal","paper","map","value","clickOutsideConfig"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport onClickOutside from \"react-onclickoutside\";\nimport Container from \"./Container\";\nimport { OutlinedButton, CommandButton } from \"./Button\";\nimport { CaptionText } from \"./Text\";\nimport DownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { Button, Typography, Popover } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  popoverPaper: {\n    display: \"flex\",\n    padding: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    borderRadius: 0,\n  },\n}));\n\nconst DropWrapper = styled(Container)`\n  flex: 0;\n  background-color: transparent;\n  position: relative;\n  ${(props) => props.customStyles};\n`;\n\nconst DropHeader = styled(OutlinedButton)`\n  display: flex;\n  flex-direction: row;\n  flex: 0;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 8px;\n  border: 1px solid #d7dbdd;\n  border-radius: 1px;\n  background-color: #f5f8fa;\n  outline: transparent;\n  ${(open) =>\n    open &&\n    css` border: 1px solid #5B86C6,\n    background-color: #FEFEFF`}\n\n  ${(props) => props.headerStyles};\n`;\nconst DropHeaderTitle = styled(Container)`\n  display: flex;\n  background-color: transparent;\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst DropListContainer = styled(Container)`\n  display: flex;\n  flex: 1;\n  border-radius: 1px;\n  box-shadow: 0 1.6px 3.6px 0 rgba(0, 0, 0, 0.132),\n    0 0.3px 0.9px 0 rgba(0, 0, 0, 0.108);\n\n  ${(props) => props.customStyles}\n`;\n\nconst DropListItem = styled(CommandButton)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 8px 10px;\n`;\n\nconst Dropdown = ({\n  title,\n  items,\n  wrapperStyles,\n  selection,\n  setSelection,\n  headerStyles,\n  multiSelect = false,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  Dropdown.handleClickOutside = () => {\n    setAnchorEl(null);\n  };\n  const handleClickOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleClick = (item) => {\n    if (!selection.some((current) => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        (current) => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  };\n  const isItemSelected = (item) => {\n    if (selection.some((current) => current.id === item.id)) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <DropWrapper customStyles={wrapperStyles}>\n      <DropHeader onClick={handleClickOpen} type=\"button\">\n        <DropHeaderTitle>\n          <CaptionText customStyles={{ fontSize: 14, color: \"#1c2833\" }}>\n            {title}\n          </CaptionText>\n        </DropHeaderTitle>\n        <Container flex={0} column middle center color=\"transparent\">\n          <DownIcon />\n        </Container>\n      </DropHeader>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        // onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        elevation={0}\n        classes={{\n          paper: classes.popoverPaper,\n        }}\n      >\n        <DropListContainer customStyles={wrapperStyles}>\n          {items.map((item) => {\n            return (\n              <DropListItem\n                key={item.id}\n                type=\"button\"\n                onClick={() => handleClick(item)}\n              >\n                <span>{item.value}</span>\n                <span>{isItemSelected(item) && \"selected\"} </span>\n              </DropListItem>\n            );\n          })}\n        </DropListContainer>\n      </Popover>\n    </DropWrapper>\n  );\n};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside,\n};\n// export { DropDown, DropDownItem, SearchStyles };\nexport default onClickOutside(Dropdown, clickOutsideConfig);\n\n/*\n <DropWrapper>\n      <DropHeader\n        tabIndex={0}\n        role=\"button\"\n        // onKeyPress={() => handleClickOpen}\n        onClick={() => handleClickOpen}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <DropHeaderTitle open={open}>\n          <CaptionText customStyles={{ fontSize: 14, color: \"#1c2833\" }}>\n            {title}\n          </CaptionText>\n        </DropHeaderTitle>\n        <Container column center middle>\n          <DownIcon />\n        </Container>\n      </DropHeader>\n      <Popover\n        id={id}\n        open={true}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <ul className=\"dd-list\">\n          {items.map((item) => {\n            return (\n              <li className=\"dd-list-item\" key={item.id}>\n                <button type=\"button\" onClick={() => handleClick(item)}>\n                  <span>{item.value}</span>\n                  <span>{isItemSelected(item) && \"selected\"} </span>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </Popover>\n    </DropWrapper>\n*/\n"]},"metadata":{},"sourceType":"module"}