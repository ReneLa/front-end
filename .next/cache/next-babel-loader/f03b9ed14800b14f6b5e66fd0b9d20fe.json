{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { Container, ActionButton, Text, Input, TextInput, SubText, OutlinedButton, SubHeader, CaptionText, PrimaryButton, Dropdown } from \"../../../styledComponents\";\nimport UploadIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport HouseIcon from \"@material-ui/icons/Home\";\nimport { withStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Button, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Avatar } from \"@material-ui/core\";\nimport { GET_LANDLORD_TICKETS } from \"../../../queryComponents/landlord/LandlordTickets\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/landlord/LandlordHouses\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nconst useStyles = makeStyles(theme => ({\n  dialogPaper: {\n    height: 700,\n    width: 550,\n    borderRadius: 2,\n    // position: \"relative\",\n    backgroundColor: \"#F2F3F4\"\n  },\n  dialogActionStyle: {\n    padding: 0,\n    margin: 0,\n    border: \"none\",\n    backgroundColor: \"#F2F3F4\"\n  },\n  inputStyle: {\n    border: 0,\n    borderRadius: 1,\n    paddingTop: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    backgroundColor: \"#F5F8FA\",\n    // lineHeight: 2,\n    minHeight: 60,\n    fontSize: 12,\n    \"&:focus\": {\n      border: \"1px solid #4C3AF7\",\n      backgroundColor: \"#FEFEFF\"\n    }\n  },\n  dialogActions: {\n    // position: \"absolute\",\n    width: \"100%\",\n    // bottom: 0,\n    padding: 0,\n    margin: 0,\n    border: \"none\" // backgroundColor: \"white\"\n\n  },\n  dialogContentStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginRight: 10,\n    height: \"100%\",\n    backgroundColor: \"white\",\n    border: \"none\" // backgroundColor: \"#F2F3F4\",\n\n  },\n  avatarStyle: {\n    position: \"relative\",\n    width: theme.spacing(12),\n    height: theme.spacing(10),\n    borderRadius: 5,\n    backgroundColor: \"#F3F2F1\"\n  },\n  inputStyle: {\n    border: 0,\n    borderRadius: 1,\n    paddingTop: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    backgroundColor: \"#F5F8FA\",\n    // lineHeight: 2,\n    minHeight: 60,\n    fontSize: 12,\n    \"&:focus\": {\n      border: \"1px solid #4C3AF7\",\n      backgroundColor: \"#FEFEFF\"\n    }\n  }\n}));\nconst ActionBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateTicket__ActionBtn\",\n  componentId: \"sc-1d91g92-0\"\n})([\"display:flex;justify-content:center;align-items:center;align-content:center;padding-right:10px;padding-left:10px;border-radius:2px;background-color:\", \";\"], ({\n  theme\n}) => theme.lightGrey);\nconst CloseBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateTicket__CloseBtn\",\n  componentId: \"sc-1d91g92-1\"\n})([\"position:absolute;top:0;right:0;z-index:1304;display:flex;justify-content:center;align-items:center;align-content:center;padding-right:6px;padding-left:6px;border-radius:2px;background-color:\", \";\"], ({\n  theme\n}) => theme.bgPrimary);\nconst CancelBtn = styled(PrimaryButton).withConfig({\n  displayName: \"CreateTicket__CancelBtn\",\n  componentId: \"sc-1d91g92-2\"\n})([\"border:none;color:\", \";background-color:transparent;&:hover{background-color:\", \";}\"], ({\n  theme\n}) => theme.primaryDark, ({\n  theme\n}) => theme.lightGrey);\nconst CREATE_TICKET_MUTATION = gql`\n  mutation CREATE_TICKET_MUTATION(\n    $title: String!\n    $description: String!\n    $reported_way: String\n    $owner_review: String\n    $houseId: ID\n  ) {\n    createTicket(\n      title: $title\n      description: $description\n      reported_way: $reported_way\n      owner_review: $owner_review\n      houseId: $houseId\n    ) {\n      id\n    }\n  }\n`;\n\nconst Reported = ({\n  reportWay,\n  setReportWay\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([{\n    id: 1,\n    value: \"System\"\n  }, {\n    id: 2,\n    value: \"Phone\"\n  }, {\n    id: 3,\n    value: \"Email\"\n  }, {\n    id: 4,\n    value: \"In person\"\n  }]);\n\n  const handleClickOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const valuesList = () => {\n    return __jsx(\"div\", null, reportWay.map(lst => __jsx(\"span\", {\n      key: lst.id\n    }, lst.value + \", \")));\n  };\n\n  return __jsx(Dropdown, {\n    title: reportWay.length > 0 ? valuesList() : \"choose\",\n    anchorEl: anchorEl,\n    handleOpen: handleClickOpen,\n    handleClose: handleClose,\n    selection: reportWay,\n    setSelection: setReportWay,\n    items: options,\n    wrapperStyles: {\n      width: 120\n    }\n  });\n};\n\nconst Houses = ({\n  house,\n  setHouse\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: housesList,\n    1: setHousesList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getTenants(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_USER_HOUSES\n    });\n    const houses = res.data.getUserHouses;\n    setHousesList(changeObj(houses));\n    console.log(houses);\n  }\n\n  const changeObj = arr => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.house_heading\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, client => __jsx(Container, {\n    column: true,\n    color: \"transparent\",\n    customStyles: {\n      marginRight: 10,\n      marginBottom: 10\n    }\n  }, __jsx(Dropdown, {\n    title: house.length > 0 ? house[0].value : \"Add House\",\n    anchorEl: anchorEl,\n    handleOpen: e => getTenants(e, client),\n    handleClose: handleClose,\n    selection: house,\n    setSelection: setHouse,\n    items: housesList,\n    wrapperStyles: {\n      width: 100\n    }\n  })));\n};\n\nconst CreateTenant = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: reportWay,\n    1: setReportWay\n  } = useState([]);\n  const {\n    0: scroll,\n    1: setScroll\n  } = useState(\"paper\");\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const {\n    0: title,\n    1: setTitle\n  } = useState(null);\n  const {\n    0: description,\n    1: setDesc\n  } = useState(null);\n  const {\n    0: owner_review,\n    1: setOwnerReview\n  } = useState(null);\n  const {\n    0: house,\n    1: setHouse\n  } = useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  var curr = new Date();\n  curr.setDate(curr.getDate() + 3);\n  var date = curr.toISOString().substr(0, 10);\n  return __jsx(Mutation, {\n    mutation: CREATE_TICKET_MUTATION,\n    refetchQueries: [{\n      query: GET_LANDLORD_TICKETS\n    }],\n    variables: {\n      title,\n      description,\n      reported_way: reportWay.length > 0 ? reportWay[0].value : \"\",\n      owner_review,\n      houseId: house.length > 0 ? house[0].id : \"\"\n    }\n  }, (createTicket, {\n    loading,\n    error\n  }) => __jsx(\"div\", null, __jsx(ActionBtn, {\n    onClick: handleClickOpen\n  }, \"Create Ticket\"), __jsx(Dialog, {\n    fullScreen: fullScreen,\n    onClose: handleClose,\n    classes: {\n      paper: classes.dialogPaper\n    },\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    scroll: scroll\n  }, __jsx(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    classes: {\n      root: classes.dialogActionStyle\n    }\n  }, __jsx(Container, {\n    row: true,\n    center: true,\n    color: \"transparent\",\n    space: \"space-between\",\n    customStyles: {\n      paddingTop: 15,\n      paddingBottom: 7,\n      paddingRight: 10,\n      paddingLeft: 20\n    }\n  }, __jsx(SubHeader, null, \" Create Ticket\"), __jsx(CancelBtn, {\n    onClick: handleClose\n  }, \"Cancel\"))), __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await createTicket().then(res => {\n        handleClose(); // console.log(res);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      paddingLeft: 20,\n      paddingRight: 20,\n      paddingTop: 10,\n      paddingBottom: 10\n    }\n  }, __jsx(DialogContent, {\n    dividers: scroll === \"body\",\n    style: {\n      flex: 1\n    },\n    classes: {\n      root: classes.dialogContentStyle\n    }\n  }, __jsx(\"div\", {\n    style: {\n      flex: 1,\n      width: \"100%\"\n    }\n  }, __jsx(Container, {\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, __jsx(CaptionText, {\n    customStyles: {\n      color: \"#323130\",\n      fontWeight: \"600\",\n      marginBottom: 10\n    }\n  }, \"Ticket Information\")), __jsx(Container, {\n    color: \"transparent\",\n    row: true,\n    space: \"space-between\"\n  }, __jsx(Container, {\n    flex: 0.7,\n    customStyles: {\n      paddingRight: 10\n    },\n    color: \"transparent\"\n  }, __jsx(Input, {\n    placeholder: \"Ticket title..\",\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value)\n  })), __jsx(Container, {\n    color: \"transparent\",\n    flex: 0.3,\n    customStyles: {\n      paddingLeft: 10\n    }\n  })), __jsx(Container, {\n    color: \"transparent\",\n    column: true,\n    flex: false,\n    customStyles: {\n      width: \"100%\"\n    }\n  }, __jsx(CaptionText, {\n    customStyles: {\n      marginBottom: 5,\n      color: \"#323130\"\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    type: \"text\",\n    placeholder: \"start typing here...\",\n    className: classes.inputStyle,\n    value: description,\n    onChange: e => setDesc(e.target.value)\n  })), __jsx(Container, {\n    row: true,\n    flex: 1,\n    customStyles: {\n      marginTop: 10\n    },\n    color: \"transparent\"\n  }, __jsx(Container, {\n    column: true,\n    flex: 0.5,\n    color: \"transparent\",\n    customStyles: {\n      paddingRight: 5\n    }\n  }, __jsx(Container, {\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, __jsx(CaptionText, {\n    customStyles: {\n      color: \"#323130\",\n      fontWeight: \"600\",\n      marginBottom: 8,\n      marginTop: 15\n    }\n  }, \"Landlord Review\")), __jsx(Container, {\n    color: \"transparent\",\n    column: true,\n    flex: false,\n    customStyles: {\n      width: \"100%\"\n    }\n  }, __jsx(\"textarea\", {\n    type: \"text\",\n    placeholder: \"start typing here...\",\n    className: classes.inputStyle,\n    value: owner_review,\n    onChange: e => setOwnerReview(e.target.value)\n  }))), __jsx(Container, {\n    column: true,\n    flex: 0.5,\n    color: \"transparent\",\n    customStyles: {\n      paddingLeft: 5\n    }\n  }, __jsx(Container, {\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, __jsx(CaptionText, {\n    customStyles: {\n      color: \"#323130\",\n      fontWeight: \"600\",\n      marginBottom: 8,\n      marginTop: 15\n    }\n  }, \"Agent Review\")), __jsx(Container, {\n    color: \"transparent\",\n    column: true,\n    flex: false,\n    customStyles: {\n      width: \"100%\"\n    }\n  }, __jsx(\"textarea\", {\n    type: \"text\",\n    disabled: true,\n    placeholder: \"start typing here...\",\n    className: classes.inputStyle //   value={house_description}\n    //   onChange={(e) => setHouseDesc(e.target.value)}\n\n  })))), __jsx(Container, {\n    color: \"transparent\",\n    row: true,\n    flex: 0\n  }, __jsx(Container, {\n    color: \"transparent\",\n    customStyles: {\n      paddingRight: 5\n    },\n    flex: 0.3\n  }, __jsx(Container, {\n    flex: 0,\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, __jsx(CaptionText, {\n    customStyles: {\n      color: \"#323130\",\n      fontWeight: \"600\",\n      marginBottom: 8,\n      marginTop: 15\n    }\n  }, \"Add House\")), __jsx(Container, {\n    flex: 0,\n    row: true,\n    center: true // space=\"space-between\"\n    ,\n    color: \"transparent\"\n  }, __jsx(Houses, {\n    house: house,\n    setHouse: setHouse\n  }))), __jsx(Container, {\n    color: \"transparent\",\n    customStyles: {\n      paddingRight: 5\n    },\n    flex: 0.3\n  }, __jsx(Container, {\n    flex: 0,\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, __jsx(CaptionText, {\n    customStyles: {\n      color: \"#323130\",\n      fontWeight: \"600\",\n      marginBottom: 8,\n      marginTop: 15\n    }\n  }, \"Reported way\")), __jsx(Container, {\n    flex: 0,\n    row: true,\n    center: true // space=\"space-between\"\n    ,\n    color: \"transparent\"\n  }, __jsx(Reported, {\n    reportWay: reportWay,\n    setReportWay: setReportWay\n  })))), __jsx(Container, {\n    color: \"transparent\",\n    right: true,\n    center: true,\n    row: true,\n    flex: false,\n    customStyles: {\n      paddingTop: 30,\n      paddingBottom: 5\n    }\n  }, __jsx(PrimaryButton, {\n    type: \"submit\",\n    customStyles: {\n      pointerEvents: house.length <= 0 ? \"none\" : \"auto\",\n      opacity: house.length <= 0 ? 0.5 : 1\n    }\n  }, loading ? \"saving\" : \"Save Ticket\"))))))));\n};\n\nexport default CreateTenant;","map":null,"metadata":{},"sourceType":"module"}