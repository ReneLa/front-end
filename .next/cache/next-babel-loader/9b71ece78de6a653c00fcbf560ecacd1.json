{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/landlord/house/DeleteHouse.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_HOUSE($id: ID!) {\\n    deleteHouse(id: $id) {\\n      id\\n      house_heading\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { GET_USER_HOUSES } from \"../../queryComponents/Houses\";\nimport gql from \"graphql-tag\";\nimport { IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nvar DELETE_HOUSE = gql(_templateObject());\n\nvar DeleteHouse = /*#__PURE__*/function (_React$Component) {\n  _inherits(DeleteHouse, _React$Component);\n\n  var _super = _createSuper(DeleteHouse);\n\n  function DeleteHouse() {\n    _classCallCheck(this, DeleteHouse);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DeleteHouse, [{\n    key: \"render\",\n    // update = (cache, payload) => {\n    //   // manually update the cache on the client, so it matches the server\n    //   // 1. Read the cache for the items we want\n    //   const data = cache.readQuery({ query: GET_USER_HOUSES });\n    //   // console.log(data, payload);\n    //   // 2. Filter the deleted itemout of the page\n    //   // data.items = data.items.filter(\n    //   //   item => item.id !== payload.data.deleteItem.id\n    //   // );\n    //   // 3. Put the items back!\n    //   cache.writeQuery({ query: GET_USER_HOUSES, data });\n    // };\n    value: function render() {\n      var _this = this;\n\n      return __jsx(Mutation, {\n        mutation: DELETE_HOUSE,\n        variables: {\n          id: this.props.id\n        } // update={this.update}\n        ,\n        refetchQueries: [{\n          query: GET_USER_HOUSES\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, function (deleteHouse, _ref) {\n        var error = _ref.error;\n        return __jsx(IconButton, {\n          style: {\n            padding: 5\n          },\n          onClick: function onClick() {\n            if (confirm(\"Are you sure you want to delete this house?\")) {\n              deleteHouse().then(function (res) {\n                _this.props.onClose();\n              })[\"catch\"](function (err) {\n                alert(err.message);\n              });\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }\n        }, __jsx(DeleteIcon, {\n          style: {\n            fontSize: 17\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }));\n      });\n    }\n  }]);\n\n  return DeleteHouse;\n}(React.Component);\n\nexport default DeleteHouse;","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/landlord/house/DeleteHouse.js"],"names":["React","Mutation","GET_USER_HOUSES","gql","IconButton","DeleteIcon","DELETE_HOUSE","DeleteHouse","id","props","query","deleteHouse","error","padding","confirm","then","res","onClose","err","alert","message","fontSize","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,IAAMC,YAAY,GAAGH,GAAH,mBAAlB;;IASMI,W;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BACS;AAAA;;AACP,aACE,MAAC,QAAD;AACE,QAAA,QAAQ,EAAED,YADZ;AAEE,QAAA,SAAS,EAAE;AAAEE,UAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWD;AAAjB,SAFb,CAGE;AAHF;AAIE,QAAA,cAAc,EAAE,CAAC;AAAEE,UAAAA,KAAK,EAAER;AAAT,SAAD,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,UAACS,WAAD;AAAA,YAAgBC,KAAhB,QAAgBA,KAAhB;AAAA,eACC,MAAC,UAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WADT;AAEE,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAIC,OAAO,CAAC,6CAAD,CAAX,EAA4D;AAC1DH,cAAAA,WAAW,GACRI,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,gBAAA,KAAI,CAACP,KAAL,CAAWQ,OAAX;AACD,eAHH,WAIS,UAAAC,GAAG,EAAI;AACZC,gBAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD,eANH;AAOD;AACF,WAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAcE,MAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF,CADD;AAAA,OANH,CADF;AA2BD;;;;EAzCuBrB,KAAK,CAACsB,S;;AA4ChC,eAAef,WAAf","sourcesContent":["import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { GET_USER_HOUSES } from \"../../queryComponents/Houses\";\nimport gql from \"graphql-tag\";\nimport { IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst DELETE_HOUSE = gql`\n  mutation DELETE_HOUSE($id: ID!) {\n    deleteHouse(id: $id) {\n      id\n      house_heading\n    }\n  }\n`;\n\nclass DeleteHouse extends React.Component {\n  // update = (cache, payload) => {\n  //   // manually update the cache on the client, so it matches the server\n  //   // 1. Read the cache for the items we want\n  //   const data = cache.readQuery({ query: GET_USER_HOUSES });\n  //   // console.log(data, payload);\n  //   // 2. Filter the deleted itemout of the page\n  //   // data.items = data.items.filter(\n  //   //   item => item.id !== payload.data.deleteItem.id\n  //   // );\n  //   // 3. Put the items back!\n  //   cache.writeQuery({ query: GET_USER_HOUSES, data });\n  // };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_HOUSE}\n        variables={{ id: this.props.id }}\n        // update={this.update}\n        refetchQueries={[{ query: GET_USER_HOUSES }]}\n      >\n        {(deleteHouse, { error }) => (\n          <IconButton\n            style={{ padding: 5 }}\n            onClick={() => {\n              if (confirm(\"Are you sure you want to delete this house?\")) {\n                deleteHouse()\n                  .then(res => {\n                    this.props.onClose();\n                  })\n                  .catch(err => {\n                    alert(err.message);\n                  });\n              }\n            }}\n          >\n            <DeleteIcon style={{ fontSize: 17 }} />\n          </IconButton>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteHouse;\n"]},"metadata":{},"sourceType":"module"}