{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation AddHouseToBuilding($houseId: ID!, $buildingId: ID!) {\\n    addHouseToBuilding(houseId: $houseId, buildingId: $buildingId) {\\n      id\\n      house_heading\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_PARENT_HOUSE_MUTATION($building_name: String!) {\\n    createParentHouse(building_name: $building_name) {\\n      id\\n      building_name\\n      address\\n      image\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, ActionButton, IconButton, Text, Input, TextInput, SubText, CaptionText, PrimaryButton, Header, SubHeader } from \"../../../styledComponents\";\nimport gql from \"graphql-tag\";\nimport { ApolloConsumer, Mutation } from \"react-apollo\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport userPhoto from \"../../../../public/static/sandy.jpeg\";\nimport CheckIcon from \"@material-ui/icons/Done\";\nimport HouseIcon from \"@material-ui/icons/Home\";\nimport { withStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Button, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Avatar, Divider } from \"@material-ui/core\";\nimport ParentHouses, { GET_USER_PARENT_HOUSES } from \"../../../queryComponents/ParentHouses\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Add from \"@material-ui/icons/Add\";\nimport loadingImg from \"../../../../public/static/126.gif\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    dialogPaper: {\n      height: 700,\n      width: 525,\n      borderRadius: 2,\n      backgroundColor: \"white\",\n      position: \"relative\"\n    },\n    dialogActionStyle: {\n      padding: 0,\n      margin: 0,\n      border: \"none\",\n      backgroundColor: \"white\"\n    },\n    dialogActions: {\n      position: \"absolute\",\n      width: \"100%\",\n      bottom: 0,\n      padding: 10,\n      margin: 0,\n      border: \"none\" // backgroundColor: \"red\",\n\n    },\n    dialogContentStyle: {\n      display: \"flex\",\n      padding: 0,\n      border: \"none\",\n      backgroundColor: \"white\"\n    },\n    avatarStyle: {\n      width: theme.spacing(5),\n      height: theme.spacing(5),\n      borderRadius: 1,\n      backgroundColor: \"#F3F2F1\"\n    },\n    buildingImageStyle: {\n      width: theme.spacing(5),\n      height: theme.spacing(5),\n      borderRadius: 2,\n      marginRight: 20,\n      border: \"1.5px dashed #F3F2F1\",\n      backgroundColor: \"#F3F2F1\"\n    },\n    inputStyle: {\n      border: 0,\n      borderRadius: 4,\n      paddingTop: 10,\n      paddingRight: 10,\n      paddingBottom: 10,\n      paddingLeft: 10,\n      backgroundColor: \"#F5F8FA\",\n      // lineHeight: 2,\n      minHeight: 60,\n      fontSize: 12,\n      \"&:focus\": {\n        border: \"1px solid #4C3AF7\",\n        backgroundColor: \"#FEFEFF\"\n      }\n    }\n  };\n});\nvar ActionBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateBuilding__ActionBtn\",\n  componentId: \"sc-1f2konc-0\"\n})([\"display:flex;justify-content:center;align-items:center;align-content:center;padding-right:10px;padding-left:10px;border-radius:2px;background-color:\", \";\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.lightGrey;\n});\nvar CloseBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateBuilding__CloseBtn\",\n  componentId: \"sc-1f2konc-1\"\n})([\"z-index:1304;display:flex;justify-content:center;align-items:center;align-content:center;padding-right:6px;padding-left:6px;border-radius:2px;background-color:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.bgPrimary;\n});\nvar AddBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateBuilding__AddBtn\",\n  componentId: \"sc-1f2konc-2\"\n})([\"display:flex;justify-content:center;align-items:center;align-content:center;padding-right:10px;padding-left:10px;border-radius:2px;background-color:\", \";\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.lightGrey;\n});\nvar CancelBtn = styled(PrimaryButton).withConfig({\n  displayName: \"CreateBuilding__CancelBtn\",\n  componentId: \"sc-1f2konc-3\"\n})([\"border:none;color:\", \";background-color:transparent;&:hover{background-color:\", \";}\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.primaryDark;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.lightGrey;\n});\nvar Tag = styled.div.withConfig({\n  displayName: \"CreateBuilding__Tag\",\n  componentId: \"sc-1f2konc-4\"\n})([\"display:flex;flex-direction:row;justify-content:center;align-items:center;border-radius:20px;background-color:#e1e1e1;padding:4px 15px;margin:0px 2px;\"]);\nvar Form = styled.form.withConfig({\n  displayName: \"CreateBuilding__Form\",\n  componentId: \"sc-1f2konc-5\"\n})([\"display:flex;flex-direction:row;padding:0px 40px;\"]);\nvar CREATE_PARENT_HOUSE_MUTATION = gql(_templateObject());\nvar ADD_HOUSE_TO_BUILDING = gql(_templateObject2());\n\nvar BuildingsContainer = function BuildingsContainer(_ref6) {\n  var addTo = _ref6.addTo,\n      buildings = _ref6.buildings,\n      buildingList = _ref6.buildingList,\n      loading = _ref6.loading;\n  var classes = useStyles();\n\n  var handleClick = function handleClick(building) {\n    if (!buildings.some(function (current) {\n      return current.id === building.id;\n    })) {\n      addTo([building]);\n    } else {\n      var buildingAfterRemoval = buildings;\n      buildingAfterRemoval = buildingAfterRemoval.filter(function (current) {\n        return current.id !== building.id;\n      });\n      addTo(_toConsumableArray(buildingAfterRemoval));\n    }\n  };\n\n  var isBuildingSelected = function isBuildingSelected(building) {\n    if (buildings.some(function (current) {\n      return current.id === building.id;\n    })) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return __jsx(Container, {\n    column: true,\n    customStyles: {\n      padding: \"10px 40px\"\n    },\n    color: \"transparent\"\n  }, loading && __jsx(Container, {\n    flex: 1,\n    middle: true,\n    center: true,\n    column: true,\n    color: \"transparent\"\n  }, __jsx(\"img\", {\n    src: loadingImg,\n    style: {\n      width: 20,\n      height: 20\n    }\n  })), !loading && buildingList && buildingList.map(function (build) {\n    return __jsx(Container, {\n      flex: false,\n      key: build.id,\n      column: true,\n      color: \"transparent\"\n    }, __jsx(Container, {\n      color: \"transparent\",\n      row: true,\n      center: true,\n      flex: 1,\n      customStyles: {\n        paddingTop: 15,\n        paddingBottom: 5,\n        paddingLeft: 0,\n        paddingRight: 5\n      }\n    }, __jsx(Container, {\n      row: true,\n      flex: 1,\n      center: true,\n      color: \"transparent\"\n    }, build.image === null ? __jsx(Avatar, {\n      src: build.image,\n      className: classes.avatarStyle\n    }, __jsx(SubHeader, null, build.building_name.charAt(0))) : __jsx(Avatar, {\n      src: build.image,\n      className: classes.avatarStyle\n    }), __jsx(Container, {\n      column: true,\n      flex: 1,\n      color: \"transparent\"\n    }, __jsx(SubHeader, {\n      customStyles: {\n        fontSize: 13,\n        fontWeight: \"600\",\n        marginBottom: 0,\n        marginLeft: 10\n      }\n    }, build.building_name))), __jsx(AddBtn, {\n      onClick: function onClick() {\n        return handleClick(build);\n      }\n    }, isBuildingSelected(build) ? __jsx(CheckIcon, {\n      style: {\n        fontSize: 18,\n        color: \"green\"\n      }\n    }) : __jsx(Add, {\n      style: {\n        fontSize: 18\n      }\n    }))), __jsx(Divider, {\n      style: {\n        height: \"1px\"\n      }\n    }));\n  }));\n};\n\nvar CreateBuilding = function CreateBuilding(_ref7) {\n  var house = _ref7.house;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useState = useState(null),\n      building_name = _useState[0],\n      setBuildingName = _useState[1];\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(\"paper\"),\n      scroll = _useState3[0],\n      setScroll = _useState3[1];\n\n  var fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  var _useState4 = useState(false),\n      isloading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      addToBuilding = _useState5[0],\n      setAddToBuilding = _useState5[1];\n\n  var _useState6 = useState(null),\n      buildingList = _useState6[0],\n      setBuildingList = _useState6[1];\n\n  var onCompletion = function onCompletion() {\n    setOpen(false);\n  };\n\n  var _useMutation = useMutation(ADD_HOUSE_TO_BUILDING),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addTo = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading;\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  function getBuildings(client) {\n    var res, buildings;\n    return _regeneratorRuntime.async(function getBuildings$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_USER_PARENT_HOUSES\n            }));\n\n          case 3:\n            res = _context.sent;\n            buildings = res.data.getUserParentHouses;\n            console.log(buildings);\n            setBuildingList(buildings);\n            setLoading(false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var isAdded = function isAdded(buildings) {\n    var parent_houseId = house.parent_houseId;\n\n    if (parent_houseId !== null && buildings.some(function (current) {\n      return current.id === parent_houseId.id;\n    })) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return __jsx(ParentHouses, null, function (_ref8) {\n    var data = _ref8.data;\n\n    if (data) {\n      var parentBuildings = data.getUserParentHouses;\n      return __jsx(\"div\", null, isAdded(parentBuildings) ? __jsx(SubHeader, null, \"Added\") : __jsx(IconButton, {\n        onClick: function onClick(e) {\n          handleClickOpen();\n        },\n        customStyles: {\n          backgroundColor: \"#0078D4\",\n          height: 33,\n          width: 33\n        }\n      }, __jsx(Add, {\n        style: {\n          fontSize: 18,\n          color: \"white\"\n        }\n      })), __jsx(Dialog, {\n        fullScreen: fullScreen,\n        onClose: function onClose(e) {\n          handleClose();\n        },\n        classes: {\n          paper: classes.dialogPaper\n        },\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: open,\n        scroll: scroll\n      }, __jsx(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        classes: {\n          root: classes.dialogActionStyle\n        }\n      }, __jsx(Container, {\n        row: true,\n        center: true,\n        right: true,\n        color: \"transparent\",\n        space: \"space-between\",\n        customStyles: {\n          paddingTop: 15,\n          paddingBottom: 7,\n          paddingRight: 10,\n          paddingLeft: 20\n        }\n      }, __jsx(Container, {\n        color: \"transparent\",\n        column: true,\n        row: true,\n        center: true,\n        left: true,\n        flex: 1\n      }, __jsx(SubHeader, null, \"Add House\")), __jsx(CloseBtn, {\n        onClick: handleClose\n      }, __jsx(CloseIcon, {\n        style: {\n          fontSize: 23\n        }\n      })))), __jsx(DialogContent, {\n        classes: {\n          root: classes.dialogContentStyle\n        }\n      }, __jsx(Container, {\n        flex: 1,\n        column: true,\n        color: \"transparent\",\n        customStyles: {\n          paddingTop: 10,\n          paddingBottom: 10\n        }\n      }, __jsx(Container, {\n        customStyles: {\n          paddingLeft: \"40px\"\n        },\n        row: true,\n        center: true,\n        color: \"transparent\"\n      }, house.profileImage === null ? __jsx(Avatar, {\n        src: house.profileImage,\n        className: classes.avatarStyle\n      }, __jsx(Header, null, house.house_heading.charAt(0))) : __jsx(Avatar, {\n        src: house.profileImage,\n        className: classes.avatarStyle\n      }), __jsx(CaptionText, {\n        customStyles: {\n          marginLeft: 20\n        }\n      }, \"You are adding Barcelona\")), __jsx(Mutation, {\n        mutation: CREATE_PARENT_HOUSE_MUTATION,\n        variables: {\n          building_name: building_name\n        }\n      }, function (createParentHouse, _ref9) {\n        var loading = _ref9.loading,\n            error = _ref9.error;\n        return __jsx(Form, {\n          method: \"post\",\n          onSubmit: function _callee(e) {\n            return _regeneratorRuntime.async(function _callee$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    e.preventDefault();\n                    _context2.next = 3;\n                    return _regeneratorRuntime.awrap(createParentHouse().then(function (res) {\n                      var newBuilding = res.data.createParentHouse;\n                      setBuildingList([].concat(_toConsumableArray(buildingList), [newBuilding]));\n                      setBuildingName(null);\n                    }));\n\n                  case 3:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        }, __jsx(\"fieldset\", {\n          style: {\n            display: \"flex\",\n            paddingRight: 0,\n            paddingLeft: 0,\n            paddingBottom: 10,\n            paddingTop: 30,\n            border: \"none\",\n            flex: 1\n          }\n        }, __jsx(Container, {\n          row: true,\n          color: \"transparent\",\n          flex: 1\n        }, __jsx(Container, {\n          flex: 1,\n          column: true,\n          middle: true,\n          color: \"transparent\",\n          customStyles: {\n            paddingRight: 10\n          }\n        }, __jsx(Input, {\n          placeholder: \"Create a new building\",\n          type: \"text\",\n          value: building_name,\n          onChange: function onChange(e) {\n            return setBuildingName(e.target.value);\n          }\n        })), __jsx(Container, {\n          flex: false,\n          column: true,\n          color: \"transparent\",\n          customStyles: {\n            paddingTop: 5\n          }\n        }, __jsx(PrimaryButton, {\n          type: \"submit\",\n          customStyles: {\n            pointerEvents: building_name === null ? \"none\" : \"auto\",\n            opacity: building_name === null ? 0.3 : 1.0\n          }\n        }, loading ? \"CREATING\" : \"CREATE\")))));\n      }), __jsx(BuildingsContainer, {\n        loading: isloading,\n        addTo: setAddToBuilding,\n        buildings: addToBuilding,\n        buildingList: parentBuildings\n      }))), __jsx(DialogActions, {\n        className: classes.dialogActions\n      }, __jsx(PrimaryButton, {\n        customStyles: {\n          pointerEvents: addToBuilding.length <= 0 ? \"none\" : \"auto\",\n          opacity: addToBuilding.length <= 0 ? 0.4 : 1.0\n        },\n        onClick: function onClick() {\n          addTo({\n            variables: {\n              houseId: house.id,\n              buildingId: addToBuilding[0].id\n            },\n            onCompleted: onCompletion\n          });\n        }\n      }, loading ? \"SAVING\" : \"SAVE\"))));\n    }\n\n    return null;\n  });\n};\n\nexport default CreateBuilding;","map":null,"metadata":{},"sourceType":"module"}