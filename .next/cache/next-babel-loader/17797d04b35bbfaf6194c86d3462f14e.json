{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Divider, Fade, IconButton, InputBase, Paper, Typography } from \"@material-ui/core\";\nimport { fade, withStyles } from \"@material-ui/core/styles\";\nimport BuildingIcon from \"@material-ui/icons/Apartment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport loadingImg from \"../../../../public/static/126.gif\";\nimport ParentHouses, { GET_USER_PARENT_HOUSES } from \"../../../queryComponents/ParentHouses\";\nimport { Container, FlatButton, Input } from \"../../../styledComponents\";\nimport DeleteParentHouse from \"../DeleteParentHouse\";\nconst CREATE_PARENT_HOUSE_MUTATION = gql`\n  mutation CREATE_PARENT_HOUSE_MUTATION(\n    $building_name: String!\n    $address: String\n    $image: String\n  ) {\n    createParentHouse(\n      building_name: $building_name\n      address: $address\n      image: $image\n    ) {\n      id\n      building_name\n      address\n      image\n    }\n  }\n`;\n\nconst styles = theme => ({\n  list: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    maxWidth: 120\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  }\n});\n\nclass Buildings extends React.Component {\n  render() {\n    const {\n      classes,\n      buildings,\n      create,\n      showForm\n    } = this.props;\n    return __jsx(Container, {\n      column: true,\n      flex: 1\n    }, __jsx(Container, {\n      row: true,\n      space: \"space-between\",\n      customStyles: {\n        padding: 10\n      }\n    }, __jsx(Paper, {\n      component: \"form\",\n      className: classes.root,\n      elevation: 0\n    }, __jsx(InputBase, {\n      className: classes.input,\n      placeholder: \"Search buildings\" // inputProps={{ \"aria-label\": \"search google maps\" }}\n\n    }), __jsx(Divider, {\n      className: classes.divider,\n      orientation: \"vertical\"\n    }), __jsx(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\"\n    }, __jsx(SearchIcon, null))), __jsx(FlatButton, {\n      onClick: () => {\n        create();\n      }\n    }, \"New Building\")), __jsx(Container, {\n      flex: 1,\n      column: true\n    }, __jsx(Container, {\n      column: true,\n      customStyles: {\n        width: \"100%\",\n        borderRadius: 2,\n        border: `1px solid ${fade(\"#393939\", 0.1)}`\n      }\n    }, __jsx(Container, {\n      row: true,\n      space: \"space-between\",\n      customStyles: {\n        padding: 10\n      }\n    }, __jsx(\"span\", null, \"Name\"), __jsx(\"span\", null, \"address\"), __jsx(\"span\", null, \"action\")), buildings.map(building => {\n      return __jsx(Container, {\n        key: building.id,\n        row: true // color=\"#FEFEFF\"\n        ,\n        space: \"space-between\",\n        customStyles: {\n          padding: 10,\n          cursor: \"pointer\",\n          borderTop: `1px solid ${fade(\"#393939\", 0.1)}`,\n          \"&:hover\": {\n            backgroundColor: ` ${fade(\"#FEFEFF\", 1)}`\n          }\n        }\n      }, __jsx(\"span\", null, building.building_name), __jsx(\"span\", null, building.address), __jsx(Container, {\n        row: true,\n        right: true,\n        center: true\n      }, __jsx(DeleteParentHouse, {\n        id: building.id\n      })));\n    }), __jsx(Container, {\n      row: true,\n      center: true,\n      customStyles: {\n        padding: 10,\n        borderTop: `1px solid ${fade(\"#393939\", 0.1)}`\n      },\n      middle: true\n    }, __jsx(Typography, null, \"showing \" + buildings.length + \" result(s)\")))));\n  }\n\n}\n\nconst BuildingsList = withStyles({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 200\n  },\n  input: {\n    marginLeft: 10,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n})(Buildings);\n\nclass CreateParentHouse extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      building_name: \"\",\n      address: \"\",\n      image: null,\n      showForm: false\n    });\n\n    _defineProperty(this, \"createForm\", () => {\n      this.setState({\n        showForm: true\n      });\n    });\n\n    _defineProperty(this, \"closeCreateForm\", () => {\n      this.setState({\n        showForm: false\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"uploadImage\", async e => {\n      const files = e.target.files;\n      const data = new FormData();\n      data.append(\"file\", files[0]);\n      data.append(\"upload_preset\", \"house_assist\");\n      const res = await fetch(\"https://api.cloudinary.com/v1_1/dsubmyluz/image/upload/\", {\n        method: \"POST\",\n        body: data\n      });\n      const file = await res.json();\n\n      if (file) {\n        this.setState({\n          image: file.secure_url\n        });\n      }\n    });\n\n    _defineProperty(this, \"CreateFormWrapper\", () => {\n      const {\n        building_name,\n        address,\n        image,\n        showForm\n      } = this.state;\n      const {\n        classes\n      } = this.props;\n      return __jsx(Fade, {\n        in: showForm\n      }, __jsx(Container, {\n        flex: 1,\n        column: true,\n        customStyles: {\n          zIndex: 1305,\n          paddingTop: 64\n        }\n      }, __jsx(Container, {\n        row: true,\n        center: true,\n        space: \"space-between\",\n        customStyles: {\n          position: \"absolute\",\n          top: 0,\n          width: \"100%\",\n          paddingLeft: 10,\n          paddingRight: 15,\n          height: 64,\n          border: `0.5px solid ${fade(\"#393939\", 0.2)}`\n        }\n      }, __jsx(\"div\", null), __jsx(Typography, {\n        variant: \"button\",\n        style: {\n          fontSize: 13,\n          fontFamily: 400\n        }\n      }, \"Create Building\"), __jsx(\"span\", {\n        onClick: this.closeCreateForm,\n        style: {\n          fontSize: 30,\n          fontWeight: 200,\n          cursor: \"pointer\"\n        }\n      }, \"\\xD7\")), __jsx(Container, {\n        flex: 1,\n        column: true\n      }, __jsx(Mutation, {\n        mutation: CREATE_PARENT_HOUSE_MUTATION,\n        refetchQueries: [{\n          query: GET_USER_PARENT_HOUSES\n        }],\n        variables: this.state\n      }, (createParentHouse, {\n        loading,\n        error\n      }) => {\n        return __jsx(Container, {\n          flex: 1,\n          color: \"inherit\",\n          role: \"presentation\"\n        }, __jsx(\"form\", {\n          method: \"post\",\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            // alignItems: \"center\",\n            flex: 1\n          },\n          onSubmit: async e => {\n            e.preventDefault();\n            await createParentHouse().then(res => {\n              this.closeCreateForm();\n            });\n            this.setState({\n              building_name: \"\",\n              address: \"\",\n              image: null // showForm: false\n\n            });\n          }\n        }, error && error.graphQLErrors.map(({\n          message\n        }, i) => __jsx(\"p\", {\n          key: i,\n          style: {\n            color: \"red\"\n          }\n        }, message)), __jsx(Container, {\n          column: true,\n          center: true\n        }, __jsx(Input, {\n          type: \"text\",\n          name: \"building\",\n          label: \"building name\",\n          value: building_name,\n          style: {\n            width: \"50%\",\n            marginTop: 40,\n            marginBottom: 20\n          },\n          onChange: e => {\n            this.setState({\n              building_name: e.target.value\n            });\n          }\n        }), __jsx(Container, {\n          row: true\n        }, __jsx(Input, {\n          accept: \"image/*\",\n          id: \"text-button-file\",\n          multiple: true,\n          type: \"file\" // value={image}\n          ,\n          onChange: this.uploadImage\n        }), image !== null && __jsx(\"img\", {\n          src: image,\n          style: {\n            width: 40,\n            height: 35,\n            objectFit: \"fit\"\n          }\n        }))), __jsx(Container, {\n          right: true,\n          center: true,\n          row: true,\n          flex: 1,\n          space: \"space-between\",\n          customStyles: {\n            position: \"absolute\",\n            bottom: 0,\n            marginTop: 15,\n            padding: 10,\n            borderTop: `0.5px solid ${fade(\"#393939\", 0.2)}`,\n            width: \"100%\"\n          }\n        }, __jsx(FlatButton, {\n          type: \"submit\"\n        }, loading ? __jsx(\"img\", {\n          src: loadingImg,\n          style: {\n            width: 20,\n            height: 20\n          }\n        }) : \"Save\"))));\n      }))));\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      showForm\n    } = this.state;\n    return __jsx(Container, {\n      flex: 1\n    }, !showForm && __jsx(ParentHouses, null, ({\n      data,\n      loading\n    }) => {\n      if (data) {\n        const buildings = data.getUserParentHouses;\n\n        if (buildings.length !== 0) {\n          return __jsx(BuildingsList, {\n            buildings: buildings,\n            create: this.createForm,\n            showForm: showForm\n          });\n        }\n\n        if (buildings.length === 0) {\n          return __jsx(Container, {\n            flex: 1\n          }, __jsx(Container, {\n            flex: 1,\n            column: true,\n            middle: true,\n            center: true,\n            customStyles: {\n              paddingTop: 64\n            }\n          }, __jsx(BuildingIcon, {\n            style: {\n              fontSize: 60,\n              color: \"gray\"\n            }\n          }), __jsx(Typography, {\n            variant: \"button\",\n            style: {\n              fontSize: 18,\n              color: \"black\",\n              fontWeight: 600,\n              marginTop: 15\n            }\n          }, \"Add New Building\"), __jsx(Typography, {\n            style: {\n              fontSize: 13,\n              fontWeight: 200,\n              marginTop: 10\n            }\n          }, \"You have more than one house with in a\"), __jsx(Typography, {\n            style: {\n              fontSize: 13,\n              fontWeight: 200,\n              marginBottom: 15\n            }\n          }, \"single building, add them in to a building\"), __jsx(FlatButton, {\n            onClick: this.createForm\n          }, \"Add Building\")));\n        }\n      }\n\n      if (loading) {\n        return __jsx(Container, {\n          flex: 1,\n          middle: true,\n          center: true\n        }, __jsx(\"img\", {\n          src: loadingImg,\n          style: {\n            width: 25,\n            height: 25\n          }\n        }));\n      }\n\n      return null;\n    }), this.CreateFormWrapper());\n  }\n\n}\n\nexport default withStyles(styles)(CreateParentHouse);","map":null,"metadata":{},"sourceType":"module"}