{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/landlord/house/create/AddHouseImage.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { withStyles, fade } from \"@material-ui/core/styles\";\nimport { Mutation } from \"react-apollo\";\nimport { Select, FormControl, Typography } from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport { theme as customTheme } from \"../../../Page\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/Houses\";\nimport Houses from \"../../../queryComponents/Houses\";\nimport { Container, FlatButton, Input } from \"../../../styledComponents\";\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport loadingImg from \"../../../../public/static/126.gif\";\nconst ADD_IMAGE_MUTATION = gql`\n  mutation ADD_IMAGE_MUTATION($image: String!, $houseId: ID!) {\n    createHouseImage(image: $image, houseId: $houseId) {\n      id\n      image\n      houseId {\n        id\n        house_heading\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  list: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    // marginTop: theme.spacing(2),\n    maxWidth: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nclass AddHouseImage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      image: null,\n      houseId: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"uploadImage\", async e => {\n      const files = e.target.files;\n      const data = new FormData();\n      data.append(\"file\", files[0]);\n      data.append(\"upload_preset\", \"house_assist\");\n      const res = await fetch(\"https://api.cloudinary.com/v1_1/dsubmyluz/image/upload/\", {\n        method: \"POST\",\n        body: data\n      });\n      const file = await res.json();\n\n      if (file) {\n        this.setState({\n          image: file.secure_url\n        });\n      }\n    });\n\n    _defineProperty(this, \"addImageContainer\", data => {\n      const {\n        image,\n        houseId\n      } = this.state;\n      const {\n        classes\n      } = this.props;\n      return __jsx(Mutation, {\n        mutation: ADD_IMAGE_MUTATION,\n        variables: this.state,\n        refetchQueries: [{\n          query: GET_USER_HOUSES\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, (addImage, {\n        loading,\n        error\n      }) => {\n        return __jsx(Container, {\n          flex: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, __jsx(\"form\", {\n          method: \"post\",\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1\n          },\n          onSubmit: async e => {\n            e.preventDefault();\n            await addImage();\n            this.setState({\n              image: null,\n              houseId: \"\"\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }, __jsx(Container, {\n          middle: true,\n          row: true,\n          center: true,\n          customStyles: {\n            paddingTop: 15,\n            marginTop: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }\n        }, \" Select House:\"), __jsx(FormControl, {\n          size: \"small\",\n          variant: \"outlined\",\n          className: classes.formControl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }, __jsx(Select, {\n          native: true,\n          size: \"normal\",\n          value: houseId,\n          style: {\n            marginLeft: 15\n          },\n          onChange: e => {\n            this.setState({\n              houseId: e.target.value\n            });\n          },\n          inputProps: {\n            name: \"house\",\n            id: \"outlined-house-image\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }\n        }, __jsx(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 23\n          }\n        }, \"choose house\"), data.map(house => __jsx(\"option\", {\n          key: house.id,\n          value: house.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }\n        }, house.house_heading))))), __jsx(Container, {\n          middle: true,\n          row: true,\n          center: true,\n          customStyles: {\n            paddingTop: 15,\n            marginTop: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }\n        }, \" Select photo:\"), __jsx(Input, {\n          accept: \"image/*\",\n          id: \"text-button-file\",\n          multiple: true,\n          type: \"file\",\n          onChange: this.uploadImage,\n          style: {\n            marginLeft: 10,\n            width: 200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        }), image !== null && __jsx(\"img\", {\n          src: image,\n          style: {\n            width: 40,\n            height: 35,\n            objectFit: \"fit\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        })), __jsx(Container, {\n          right: true,\n          center: true,\n          row: true,\n          flex: 1,\n          space: \"space-between\",\n          customStyles: {\n            position: \"absolute\",\n            bottom: 0,\n            marginTop: 15,\n            padding: 10,\n            borderTop: `0.5px solid ${fade(\"#393939\", 0.2)}`,\n            width: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }\n        }, __jsx(FlatButton, {\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }\n        }, loading ? __jsx(\"img\", {\n          src: loadingImg,\n          style: {\n            width: 20,\n            height: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 23\n          }\n        }) : \"Save\"))));\n      });\n    });\n  }\n\n  render() {\n    const {\n      image,\n      houseId\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return __jsx(Container, {\n      flex: 1,\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, __jsx(Houses, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (data) {\n        const houses = data.getUserHouses;\n\n        if (houses.length === 0) {\n          return __jsx(Container, {\n            flex: 1,\n            column: true,\n            middle: true,\n            center: true // customStyles={{ paddingTop: 64 }}\n            ,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }\n          }, __jsx(AddPhotoIcon, {\n            style: {\n              fontSize: 60,\n              color: \"gray\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }\n          }), __jsx(Typography, {\n            style: {\n              fontSize: 13,\n              fontWeight: 200,\n              marginTop: 20\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }\n          }, \"Add at least one house\"));\n        }\n\n        if (houses.length !== 0) {\n          return __jsx(Container, {\n            color: \"pink\",\n            flex: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }\n          }, this.addImageContainer(houses));\n        }\n      }\n\n      if (loading) {\n        return __jsx(Container, {\n          flex: 1,\n          middle: true,\n          center: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }\n        }, __jsx(\"img\", {\n          src: loadingImg,\n          style: {\n            width: 25,\n            height: 25\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 19\n          }\n        }));\n      }\n\n      return null;\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(AddHouseImage);","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/landlord/house/create/AddHouseImage.js"],"names":["React","withStyles","fade","Mutation","Select","FormControl","Typography","gql","theme","customTheme","GET_USER_HOUSES","Houses","Container","FlatButton","Input","AddPhotoIcon","loadingImg","ADD_IMAGE_MUTATION","styles","list","width","alignItems","formControl","maxWidth","button","margin","spacing","input","display","AddHouseImage","Component","image","houseId","e","setState","target","name","value","files","data","FormData","append","res","fetch","method","body","file","json","secure_url","state","classes","props","query","addImage","loading","error","flexDirection","flex","preventDefault","paddingTop","marginTop","marginLeft","id","map","house","house_heading","uploadImage","height","objectFit","position","bottom","padding","borderTop","render","houses","getUserHouses","length","fontSize","color","fontWeight","addImageContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles, fade } from \"@material-ui/core/styles\";\nimport { Mutation } from \"react-apollo\";\nimport { Select, FormControl, Typography } from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport { theme as customTheme } from \"../../../Page\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/Houses\";\nimport Houses from \"../../../queryComponents/Houses\";\nimport { Container, FlatButton, Input } from \"../../../styledComponents\";\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport loadingImg from \"../../../../public/static/126.gif\";\n\nconst ADD_IMAGE_MUTATION = gql`\n  mutation ADD_IMAGE_MUTATION($image: String!, $houseId: ID!) {\n    createHouseImage(image: $image, houseId: $houseId) {\n      id\n      image\n      houseId {\n        id\n        house_heading\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  list: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    // marginTop: theme.spacing(2),\n    maxWidth: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nclass AddHouseImage extends React.Component {\n  state = {\n    image: null,\n    houseId: \"\"\n  };\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  uploadImage = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"house_assist\");\n\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/dsubmyluz/image/upload/\",\n      {\n        method: \"POST\",\n        body: data\n      }\n    );\n    const file = await res.json();\n\n    if (file) {\n      this.setState({\n        image: file.secure_url\n      });\n    }\n  };\n\n  addImageContainer = data => {\n    const { image, houseId } = this.state;\n    const { classes } = this.props;\n    return (\n      <Mutation\n        mutation={ADD_IMAGE_MUTATION}\n        variables={this.state}\n        refetchQueries={[{ query: GET_USER_HOUSES }]}\n      >\n        {(addImage, { loading, error }) => {\n          return (\n            <Container flex={1}>\n              <form\n                method=\"post\"\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1\n                }}\n                onSubmit={async e => {\n                  e.preventDefault();\n                  await addImage();\n                  this.setState({ image: null, houseId: \"\" });\n                }}\n              >\n                <Container\n                  middle\n                  row\n                  center\n                  customStyles={{ paddingTop: 15, marginTop: 30 }}\n                >\n                  <span> Select House:</span>\n                  <FormControl\n                    size=\"small\"\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                  >\n                    <Select\n                      native\n                      size=\"normal\"\n                      value={houseId}\n                      style={{\n                        marginLeft: 15\n                      }}\n                      onChange={e => {\n                        this.setState({ houseId: e.target.value });\n                      }}\n                      inputProps={{\n                        name: \"house\",\n                        id: \"outlined-house-image\"\n                      }}\n                    >\n                      <option value=\"\">choose house</option>\n                      {data.map(house => (\n                        <option key={house.id} value={house.id}>\n                          {house.house_heading}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Container>\n\n                <Container\n                  middle\n                  row\n                  center\n                  customStyles={{ paddingTop: 15, marginTop: 30 }}\n                >\n                  <span> Select photo:</span>\n                  <Input\n                    accept=\"image/*\"\n                    id=\"text-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={this.uploadImage}\n                    style={{ marginLeft: 10, width: 200 }}\n                  />\n                  {image !== null && (\n                    <img\n                      src={image}\n                      style={{\n                        width: 40,\n                        height: 35,\n                        objectFit: \"fit\"\n                      }}\n                    />\n                  )}\n                </Container>\n\n                {/* action footer */}\n\n                <Container\n                  right\n                  center\n                  row\n                  flex={1}\n                  space=\"space-between\"\n                  customStyles={{\n                    position: \"absolute\",\n                    bottom: 0,\n                    marginTop: 15,\n                    padding: 10,\n                    borderTop: `0.5px solid ${fade(\"#393939\", 0.2)}`,\n                    width: \"100%\"\n                  }}\n                >\n                  <FlatButton type=\"submit\">\n                    {loading ? (\n                      <img src={loadingImg} style={{ width: 20, height: 20 }} />\n                    ) : (\n                      \"Save\"\n                    )}\n                  </FlatButton>\n                </Container>\n              </form>\n            </Container>\n          );\n        }}\n      </Mutation>\n    );\n  };\n  render() {\n    const { image, houseId } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Container flex={1} column>\n        <Houses>\n          {({ data, loading, error }) => {\n            if (data) {\n              const houses = data.getUserHouses;\n              if (houses.length === 0) {\n                return (\n                  <Container\n                    flex={1}\n                    column\n                    middle\n                    center\n                    // customStyles={{ paddingTop: 64 }}\n                  >\n                    <AddPhotoIcon style={{ fontSize: 60, color: \"gray\" }} />\n\n                    <Typography\n                      style={{\n                        fontSize: 13,\n                        fontWeight: 200,\n                        marginTop: 20\n                      }}\n                    >\n                      Add at least one house\n                    </Typography>\n                  </Container>\n                );\n              }\n              if (houses.length !== 0) {\n                return (\n                  <Container color=\"pink\" flex={1}>\n                    {this.addImageContainer(houses)}\n                  </Container>\n                );\n              }\n            }\n            if (loading) {\n              return (\n                <Container flex={1} middle center>\n                  <img src={loadingImg} style={{ width: 25, height: 25 }} />\n                </Container>\n              );\n            }\n            return null;\n          }}\n        </Houses>\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddHouseImage);\n"]},"metadata":{},"sourceType":"module"}