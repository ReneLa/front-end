{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/LandlordTickets.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { perPage } from \"../../../config\";\nconst GET_LANDLORD_TICKETS = gql`\n  query GET_LANDLORD_TICKETS($skip:Int=0,$first:Int=${perPage}) {\n    getLandlordTickets(skip:$skip, first:$first,orderBy:createdAt_DESC) {\n      id\n      title\n      description\n      isClosed\n      reported_way\n      reported_date\n      assignedDate\n      reported_by {\n        id\n        user_name\n      }\n      houseId {\n        id\n      }\n    }\n  }\n`;\n\nconst LandlordTickets = props => {\n  const [skipItems, setSkip] = React.useState(1);\n  return __jsx(Query, _extends({}, props, {\n    query: GET_LANDLORD_TICKETS,\n    variables: {\n      id: props.id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), payload => props.children(payload));\n};\n\nLandlordTickets.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default LandlordTickets;\nexport { GET_LANDLORD_TICKETS };","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/LandlordTickets.js"],"names":["React","PropTypes","Query","gql","perPage","GET_LANDLORD_TICKETS","LandlordTickets","props","skipItems","setSkip","useState","id","payload","children","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,oBAAoB,GAAGF,GAAI;sDACqBC,OAAQ;;;;;;;;;;;;;;;;;;CAD9D;;AAqBA,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBT,KAAK,CAACU,QAAN,CAAe,CAAf,CAA7B;AACA,SACE,MAAC,KAAD,eAAWH,KAAX;AAAkB,IAAA,KAAK,EAAEF,oBAAzB;AAA+C,IAAA,SAAS,EAAE;AAAEM,MAAAA,EAAE,EAAEJ,KAAK,CAACI;AAAZ,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACIC,OAAD,IAAaL,KAAK,CAACM,QAAN,CAAeD,OAAf,CADhB,CADF;AAKD,CAPD;;AASAN,eAAe,CAACQ,SAAhB,GAA4B;AAC1BD,EAAAA,QAAQ,EAAEZ,SAAS,CAACc,IAAV,CAAeC;AADC,CAA5B;AAGA,eAAeV,eAAf;AACA,SAASD,oBAAT","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { perPage } from \"../../../config\";\n\nconst GET_LANDLORD_TICKETS = gql`\n  query GET_LANDLORD_TICKETS($skip:Int=0,$first:Int=${perPage}) {\n    getLandlordTickets(skip:$skip, first:$first,orderBy:createdAt_DESC) {\n      id\n      title\n      description\n      isClosed\n      reported_way\n      reported_date\n      assignedDate\n      reported_by {\n        id\n        user_name\n      }\n      houseId {\n        id\n      }\n    }\n  }\n`;\n\nconst LandlordTickets = (props) => {\n  const [skipItems, setSkip] = React.useState(1);\n  return (\n    <Query {...props} query={GET_LANDLORD_TICKETS} variables={{ id: props.id }}>\n      {(payload) => props.children(payload)}\n    </Query>\n  );\n};\n\nLandlordTickets.propTypes = {\n  children: PropTypes.func.isRequired,\n};\nexport default LandlordTickets;\nexport { GET_LANDLORD_TICKETS };\n"]},"metadata":{},"sourceType":"module"}