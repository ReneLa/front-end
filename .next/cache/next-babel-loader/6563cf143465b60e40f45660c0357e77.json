{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { perPage } from \"../../../config\";\nconst GET_LANDLORD_TICKETS = gql`\n  query GET_LANDLORD_TICKETS($skip:Int=0,$first:Int=${perPage}) {\n    getLandlordTickets(skip:$skip, first:$first,orderBy:createdAt_DESC) {\n      id\n      title\n      description\n      isClosed\n      reported_way\n      reported_date\n      assignedDate\n      reported_by {\n        id\n        user_name\n        userType\n      }\n      houseId {\n        id\n        house_heading\n      }\n      createdAt\n    }\n  }\n`;\n\nconst LandlordTickets = props => {\n  const [skipItems, setSkip] = React.useState(1);\n  return __jsx(Query, _extends({}, props, {\n    query: GET_LANDLORD_TICKETS,\n    variables: {\n      skip: skipItems * perPage - perPage\n    }\n  }), payload => props.children(payload, setSkip));\n};\n\nexport default LandlordTickets;\nexport { GET_LANDLORD_TICKETS };","map":null,"metadata":{},"sourceType":"module"}