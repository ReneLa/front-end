{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/LandlordTenants.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GET_LANDLORD_TENANTS($skip: Int, $first: Int) {\\n    getLandlordTenants(($skip:Int=0,$first:Int=\", \")) {\\n      id\\n      firstName\\n      lastName\\n      isActive\\n      sex\\n      comm_email\\n      tel_no\\n      profileImage\\n      registeredBy {\\n        id\\n        userId {\\n          user_name\\n        }\\n      }\\n      houseId {\\n        id\\n        house_no\\n      }\\n      stay_duration\\n      from_date\\n      street\\n      updatedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nvar GET_LANDLORD_TENANTS = gql(_templateObject(), perPage);\n\nvar LandlordTenants = function LandlordTenants(props) {\n  return __jsx(Query, _extends({}, props, {\n    query: GET_LANDLORD_TENANTS,\n    variables: {\n      id: props.id\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }), function (payload) {\n    return props.children(payload);\n  });\n};\n\nLandlordTenants.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default LandlordTenants;\nexport { GET_LANDLORD_TENANTS };","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/LandlordTenants.js"],"names":["React","PropTypes","Query","gql","GET_LANDLORD_TENANTS","perPage","LandlordTenants","props","id","payload","children","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,oBAEuBE,OAFvB,CAA1B;;AA6BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SACtB,MAAC,KAAD,eAAWA,KAAX;AAAkB,IAAA,KAAK,EAAEH,oBAAzB;AAA+C,IAAA,SAAS,EAAE;AAAEI,MAAAA,EAAE,EAAED,KAAK,CAACC;AAAZ,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG,UAACC,OAAD;AAAA,WAAaF,KAAK,CAACG,QAAN,CAAeD,OAAf,CAAb;AAAA,GADH,CADsB;AAAA,CAAxB;;AAMAH,eAAe,CAACK,SAAhB,GAA4B;AAC1BD,EAAAA,QAAQ,EAAET,SAAS,CAACW,IAAV,CAAeC;AADC,CAA5B;AAGA,eAAeP,eAAf;AACA,SAASF,oBAAT","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst GET_LANDLORD_TENANTS = gql`\n  query GET_LANDLORD_TENANTS($skip: Int, $first: Int) {\n    getLandlordTenants(($skip:Int=0,$first:Int=${perPage})) {\n      id\n      firstName\n      lastName\n      isActive\n      sex\n      comm_email\n      tel_no\n      profileImage\n      registeredBy {\n        id\n        userId {\n          user_name\n        }\n      }\n      houseId {\n        id\n        house_no\n      }\n      stay_duration\n      from_date\n      street\n      updatedAt\n    }\n  }\n`;\n\nconst LandlordTenants = (props) => (\n  <Query {...props} query={GET_LANDLORD_TENANTS} variables={{ id: props.id }}>\n    {(payload) => props.children(payload)}\n  </Query>\n);\n\nLandlordTenants.propTypes = {\n  children: PropTypes.func.isRequired,\n};\nexport default LandlordTenants;\nexport { GET_LANDLORD_TENANTS };\n"]},"metadata":{},"sourceType":"module"}