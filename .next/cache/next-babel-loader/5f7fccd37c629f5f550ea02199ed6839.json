{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_HOUSE_MUTATION(\\n    $house_heading: String!\\n    $house_no: String!\\n    $house_description: String!\\n    $house_type: ID\\n    $parking: Int\\n    $no_bedrooms: Int\\n    $no_bathrooms: Int\\n    $flooring: String\\n    $appliances: [Appliances]\\n    $utilities: [Utilities]\\n    $ext_ft: [Ext_features]\\n    $profileImage: String\\n    $countryId: ID\\n    $provinceId: ID\\n    $districtId: ID\\n  ) {\\n    createHouse(\\n      house_heading: $house_heading\\n      house_no: $house_no\\n      house_description: $house_description\\n      house_type: $house_type\\n      parking: $parking\\n      no_bedrooms: $no_bedrooms\\n      no_bathrooms: $no_bathrooms\\n      flooring: $flooring\\n      appliances: $appliances\\n      utilities: $utilities\\n      ext_ft: $ext_ft\\n      profileImage: $profileImage\\n      countryId: $countryId\\n      provinceId: $provinceId\\n      districtId: $districtId\\n    ) {\\n      id\\n      house_heading\\n      house_description\\n      house_no\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { Container, ActionButton, Text, Input, TextInput, SubText, OutlinedButton, SubHeader, CaptionText, PrimaryButton, Dropdown } from \"../../../styledComponents\";\nimport UploadIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport HouseIcon from \"@material-ui/icons/Home\";\nimport { withStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Button, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Avatar } from \"@material-ui/core\";\nimport { GET_HOUSE_TYPES } from \"../../../queryComponents/HouseTypes\";\nimport { GET_COUNTRIES } from \"../../../queryComponents/Countries\";\nimport { GET_PROVINCES_IN_COUNTRY } from \"../../../queryComponents/Provinces\";\nimport { GET_DISTRICTS_IN_PROVINCE } from \"../../../queryComponents/Districts\";\nimport { GET_LANDLORD_TENANTS } from \"../../../queryComponents/landlord/LandlordTenants\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/landlord/LandlordHouses\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { PAGINATION_QUERY } from \"..\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    dialogPaper: {\n      height: 700,\n      minWidth: 900,\n      borderRadius: 2,\n      // position: \"relative\",\n      backgroundColor: \"#F2F3F4\"\n    },\n    dialogActionStyle: {\n      padding: 0,\n      margin: 0,\n      border: \"none\",\n      backgroundColor: \"#F2F3F4\"\n    },\n    dialogActions: {\n      // position: \"absolute\",\n      width: \"100%\",\n      // bottom: 0,\n      padding: 0,\n      margin: 0,\n      border: \"none\" // backgroundColor: \"white\"\n\n    },\n    dialogContentStyle: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginRight: 10,\n      height: \"100%\",\n      backgroundColor: \"white\",\n      border: \"none\" // backgroundColor: \"#F2F3F4\",\n\n    },\n    avatarStyle: {\n      position: \"relative\",\n      width: theme.spacing(12),\n      height: theme.spacing(10),\n      borderRadius: 5,\n      backgroundColor: \"#F3F2F1\"\n    },\n    inputStyle: {\n      border: 0,\n      borderRadius: 1,\n      paddingTop: 10,\n      paddingRight: 10,\n      paddingBottom: 10,\n      paddingLeft: 10,\n      backgroundColor: \"#F5F8FA\",\n      // lineHeight: 2,\n      minHeight: 60,\n      fontSize: 12,\n      \"&:focus\": {\n        border: \"1px solid #4C3AF7\",\n        backgroundColor: \"#FEFEFF\"\n      }\n    }\n  };\n});\nvar ActionBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateHouse__ActionBtn\",\n  componentId: \"e7caw8-0\"\n})([\"display:flex;justify-content:center;align-items:center;align-content:center;padding-right:10px;padding-left:10px;border-radius:2px;background-color:\", \";color:white;&:hover{color:#d1f2eb;}\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.btnPrimary;\n});\nvar CloseBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateHouse__CloseBtn\",\n  componentId: \"e7caw8-1\"\n})([\"position:absolute;top:0;right:0;z-index:1304;display:flex;justify-content:center;align-items:center;align-content:center;padding-right:6px;padding-left:6px;border-radius:2px;background-color:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.bgPrimary;\n});\nvar CancelBtn = styled(PrimaryButton).withConfig({\n  displayName: \"CreateHouse__CancelBtn\",\n  componentId: \"e7caw8-2\"\n})([\"border:none;color:\", \";background-color:transparent;&:hover{background-color:\", \";}\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.primaryDark;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.lightGrey;\n});\nvar UploadBtn = styled(OutlinedButton).withConfig({\n  displayName: \"CreateHouse__UploadBtn\",\n  componentId: \"e7caw8-3\"\n})([\"display:flex;height:60px;width:100%;border:\", \";\"], function (_ref5) {\n  var theme = _ref5.theme;\n  return \"1px dashed \".concat(theme.btnPrimary);\n});\nvar CREATE_HOUSE_MUTATION = gql(_templateObject());\n\nvar HouseTypesList = function HouseTypesList(_ref6) {\n  var house_type = _ref6.house_type,\n      setHouseType = _ref6.setHouseType;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _useState = useState([]),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function handleClickOpen(event, client) {\n    var res, houseTypes;\n    return _regeneratorRuntime.async(function handleClickOpen$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_HOUSE_TYPES\n            }));\n\n          case 4:\n            res = _context.sent;\n            houseTypes = res.data.houseTypes;\n            setOptions(changeObj(houseTypes));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.house_type\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Dropdown, {\n      title: house_type.length > 0 ? house_type[0].value : \"choose\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return handleClickOpen(e, client);\n      },\n      handleClose: handleClose,\n      selection: house_type,\n      setSelection: setHouseType,\n      items: options,\n      wrapperStyles: {\n        width: 150\n      }\n    });\n  });\n};\n\nvar ApplianceList = function ApplianceList(_ref7) {\n  var list = _ref7.list,\n      setList = _ref7.setList;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      anchorEl = _React$useState4[0],\n      setAnchorEl = _React$useState4[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    value: \"Dishwasher\"\n  }, {\n    id: 2,\n    value: \"Refrigrator\"\n  }, {\n    id: 3,\n    value: \"Microwave\"\n  }, {\n    id: 4,\n    value: \"Garbage_disposal\"\n  }, {\n    id: 5,\n    value: \"Oven\"\n  }]),\n      options = _useState3[0],\n      setOptions = _useState3[1];\n\n  var handleClickOpen = function handleClickOpen(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var valuesList = function valuesList() {\n    return __jsx(\"div\", null, list.map(function (lst) {\n      return __jsx(\"span\", {\n        key: lst.id\n      }, lst.value + \", \");\n    }));\n  };\n\n  return __jsx(Dropdown, {\n    title: list.length > 0 ? valuesList() : \"choose\",\n    anchorEl: anchorEl,\n    handleOpen: handleClickOpen,\n    multiSelect: true,\n    handleClose: handleClose,\n    selection: list,\n    setSelection: setList,\n    items: options,\n    wrapperStyles: {\n      width: 200\n    }\n  });\n};\n\nvar UtilitiesList = function UtilitiesList(_ref8) {\n  var utilities = _ref8.utilities,\n      setUtilities = _ref8.setUtilities;\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      anchorEl = _React$useState6[0],\n      setAnchorEl = _React$useState6[1];\n\n  var _useState4 = useState([{\n    id: 1,\n    value: \"Internet\"\n  }, {\n    id: 2,\n    value: \"TV\"\n  }, {\n    id: 3,\n    value: \"Heater\"\n  }]),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var handleClickOpen = function handleClickOpen(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var valuesList = function valuesList() {\n    return __jsx(\"div\", null, utilities.map(function (lst) {\n      return __jsx(\"span\", {\n        key: lst.id\n      }, lst.value + \", \");\n    }));\n  };\n\n  return __jsx(Dropdown, {\n    title: utilities.length > 0 ? valuesList() : \"choose\",\n    anchorEl: anchorEl,\n    handleOpen: handleClickOpen,\n    multiSelect: true,\n    handleClose: handleClose,\n    selection: utilities,\n    setSelection: setUtilities,\n    items: options,\n    wrapperStyles: {\n      width: 200\n    }\n  });\n};\n\nvar ExtDetails = function ExtDetails(_ref9) {\n  var ext_details = _ref9.ext_details,\n      setExtDetails = _ref9.setExtDetails;\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      anchorEl = _React$useState8[0],\n      setAnchorEl = _React$useState8[1];\n\n  var _useState5 = useState([{\n    id: 1,\n    value: \"Toilet\"\n  }, {\n    id: 2,\n    value: \"Garden\"\n  }, {\n    id: 3,\n    value: \"Fenced_yard\"\n  }, {\n    id: 4,\n    value: \"Balcony\"\n  }]),\n      options = _useState5[0],\n      setOptions = _useState5[1];\n\n  var handleClickOpen = function handleClickOpen(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var valuesList = function valuesList() {\n    return __jsx(\"div\", null, ext_details.map(function (lst) {\n      return __jsx(\"span\", {\n        key: lst.id\n      }, lst.value + \", \");\n    }));\n  };\n\n  return __jsx(Dropdown, {\n    title: ext_details.length > 0 ? valuesList() : \"choose\",\n    anchorEl: anchorEl,\n    handleOpen: handleClickOpen,\n    multiSelect: true,\n    handleClose: handleClose,\n    selection: ext_details,\n    setSelection: setExtDetails,\n    items: options,\n    wrapperStyles: {\n      width: 200\n    }\n  });\n};\n\nvar Countries = function Countries(_ref10) {\n  var country = _ref10.country,\n      setCountry = _ref10.setCountry;\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      anchorEl = _React$useState10[0],\n      setAnchorEl = _React$useState10[1];\n\n  var _useState6 = useState([]),\n      countryList = _useState6[0],\n      setCountryList = _useState6[1];\n\n  var _useState7 = useState(false),\n      loading = _useState7[0],\n      setLoading = _useState7[1];\n\n  function getCountries(event, client) {\n    var res, countries;\n    return _regeneratorRuntime.async(function getCountries$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_COUNTRIES\n            }));\n\n          case 4:\n            res = _context2.sent;\n            countries = res.data.countries;\n            setCountryList(changeObj(countries));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        marginRight: 10\n      }\n    }, __jsx(Dropdown, {\n      title: country.length > 0 ? country[0].value : \"Country\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getCountries(e, client);\n      },\n      handleClose: handleClose,\n      selection: country,\n      setSelection: setCountry,\n      items: countryList,\n      wrapperStyles: {\n        width: 150\n      }\n    }));\n  });\n};\n\nvar Provinces = function Provinces(_ref11) {\n  var country = _ref11.country,\n      province = _ref11.province,\n      setProvince = _ref11.setProvince;\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      anchorEl = _React$useState12[0],\n      setAnchorEl = _React$useState12[1];\n\n  var _useState8 = useState([]),\n      provinceList = _useState8[0],\n      setProvinceList = _useState8[1];\n\n  var _useState9 = useState(false),\n      loading = _useState9[0],\n      setLoading = _useState9[1];\n\n  function getProvinces(event, client) {\n    var res, provinces;\n    return _regeneratorRuntime.async(function getProvinces$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_PROVINCES_IN_COUNTRY,\n              variables: {\n                id: country[0].id\n              }\n            }));\n\n          case 4:\n            res = _context3.sent;\n            provinces = res.data.getProvincesByCountry;\n            setProvinceList(changeObj(provinces));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        pointerEvents: country.length === 0 ? \"none\" : \"auto\",\n        marginRight: 10\n      }\n    }, __jsx(Dropdown, {\n      title: province.length > 0 ? province[0].value : \"Province\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getProvinces(e, client);\n      },\n      handleClose: handleClose,\n      selection: province,\n      setSelection: setProvince,\n      items: provinceList,\n      wrapperStyles: {\n        width: 150\n      }\n    }));\n  });\n};\n\nvar Districts = function Districts(_ref12) {\n  var province = _ref12.province,\n      district = _ref12.district,\n      setDistrict = _ref12.setDistrict;\n\n  var _React$useState13 = React.useState(null),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      anchorEl = _React$useState14[0],\n      setAnchorEl = _React$useState14[1];\n\n  var _useState10 = useState([]),\n      districtList = _useState10[0],\n      setDistrictList = _useState10[1];\n\n  var _useState11 = useState(false),\n      loading = _useState11[0],\n      setLoading = _useState11[1];\n\n  function getDistricts(event, client) {\n    var res, districts;\n    return _regeneratorRuntime.async(function getDistricts$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_DISTRICTS_IN_PROVINCE,\n              variables: {\n                id: province[0].id\n              }\n            }));\n\n          case 4:\n            res = _context4.sent;\n            districts = res.data.getDistrictsByProvince;\n            setDistrictList(changeObj(districts));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        pointerEvents: province.length === 0 ? \"none\" : \"auto\"\n      }\n    }, __jsx(Dropdown, {\n      title: district.length > 0 ? district[0].value : \"District\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getDistricts(e, client);\n      },\n      handleClose: handleClose,\n      selection: district,\n      setSelection: setDistrict,\n      items: districtList,\n      wrapperStyles: {\n        width: 150\n      }\n    }));\n  });\n};\n\nvar Tenants = function Tenants(_ref13) {\n  var tenant = _ref13.tenant,\n      setTenant = _ref13.setTenant;\n\n  var _React$useState15 = React.useState(null),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      anchorEl = _React$useState16[0],\n      setAnchorEl = _React$useState16[1];\n\n  var _useState12 = useState([]),\n      tenantsList = _useState12[0],\n      setTenantsList = _useState12[1];\n\n  var _useState13 = useState(false),\n      loading = _useState13[0],\n      setLoading = _useState13[1];\n\n  function getTenants(event, client) {\n    var res, tenants;\n    return _regeneratorRuntime.async(function getTenants$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setLoading(true);\n            setAnchorEl(event.currentTarget);\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_LANDLORD_TENANTS\n            }));\n\n          case 4:\n            res = _context5.sent;\n            tenants = res.data.getLandlordTenants;\n            setTenantsList(changeObj(tenants));\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      var newItem = {\n        id: item.id,\n        value: item.firstName\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        marginRight: 10\n      }\n    }, __jsx(Dropdown, {\n      title: tenant.length > 0 ? tenant[0].value : \"Add Tenant\",\n      anchorEl: anchorEl,\n      handleOpen: function handleOpen(e) {\n        return getTenants(e, client);\n      },\n      handleClose: handleClose,\n      selection: tenant,\n      setSelection: setTenant,\n      items: tenantsList,\n      wrapperStyles: {\n        width: 100\n      }\n    }));\n  });\n};\n\nvar UploadImageContainer = function UploadImageContainer(_ref14) {\n  var profileImg = _ref14.profileImg,\n      setProfile = _ref14.setProfile,\n      images = _ref14.images,\n      setImages = _ref14.setImages,\n      isUploading = _ref14.isUploading,\n      setIsUploading = _ref14.setIsUploading;\n\n  var _useState14 = useState([]),\n      img_names = _useState14[0],\n      setNames = _useState14[1];\n\n  var _useState15 = useState(false),\n      loaded = _useState15[0],\n      setLoaded = _useState15[1];\n\n  var uploadProfile = function uploadProfile(e) {\n    var files, data, res, file;\n    return _regeneratorRuntime.async(function uploadProfile$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setIsUploading(true);\n            files = e.target.files;\n            setNames([].concat(_toConsumableArray(img_names), [files[0].name]));\n            data = new FormData();\n            data.append(\"file\", files[0]);\n            data.append(\"upload_preset\", \"house_assist\");\n            _context6.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.cloudinary.com/v1_1/dsubmyluz/image/upload/\", {\n              method: \"POST\",\n              body: data\n            }));\n\n          case 8:\n            res = _context6.sent;\n            _context6.next = 11;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 11:\n            file = _context6.sent;\n\n            if (file) {\n              setProfile(file.secure_url);\n              setLoaded(true);\n              setIsUploading(false);\n            }\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    flex: 0,\n    row: true,\n    center: true,\n    color: \"transparent\",\n    customStyles: {\n      paddingTop: 10,\n      paddingBottom: 5\n    }\n  }, __jsx(Container, {\n    row: true,\n    center: true,\n    middle: true,\n    flex: 0,\n    customStyles: {\n      padding: 3,\n      marginRight: 5\n    }\n  }, __jsx(UploadIcon, {\n    style: {\n      fontSize: 25\n    }\n  })), __jsx(Container, {\n    flex: 1,\n    row: true,\n    center: true,\n    color: \"transparent\"\n  }, img_names.map(function (img, i) {\n    return __jsx(CaptionText, {\n      key: i,\n      customStyles: {\n        marginRight: 4,\n        color: \"black\",\n        fontSize: 13\n      }\n    }, img);\n  }))), __jsx(Container, {\n    flex: 1,\n    row: true,\n    customStyles: {\n      pointerEvents: loaded === 0 ? \"none\" : \"auto\"\n    }\n  }, __jsx(UploadBtn, {\n    type: \"button\"\n  }, __jsx(Input, {\n    accept: \"image/*\",\n    id: \"text-button-file\" // multiple\n    ,\n    type: \"file\",\n    onChange: uploadProfile,\n    style: {\n      marginLeft: 10,\n      width: 200\n    }\n  }))));\n};\n\nvar CreateHouse = function CreateHouse() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useState16 = useState(false),\n      open = _useState16[0],\n      setOpen = _useState16[1];\n\n  var _useState17 = useState(\"paper\"),\n      scroll = _useState17[0],\n      setScroll = _useState17[1];\n\n  var _useState18 = useState(false),\n      isUploading = _useState18[0],\n      setIsUploading = _useState18[1];\n\n  var fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  var _useState19 = useState(null),\n      house_heading = _useState19[0],\n      setHouseHeading = _useState19[1];\n\n  var _useState20 = useState([]),\n      house_type = _useState20[0],\n      setHouseType = _useState20[1];\n\n  var _useState21 = useState(null),\n      house_no = _useState21[0],\n      setHouseNo = _useState21[1];\n\n  var _useState22 = useState(null),\n      house_description = _useState22[0],\n      setHouseDesc = _useState22[1];\n\n  var _useState23 = useState(null),\n      parking = _useState23[0],\n      setParking = _useState23[1];\n\n  var _useState24 = useState(null),\n      no_bathrooms = _useState24[0],\n      setNoBathrooms = _useState24[1];\n\n  var _useState25 = useState(null),\n      no_bedrooms = _useState25[0],\n      setNoBedrooms = _useState25[1];\n\n  var _useState26 = useState(null),\n      flooring = _useState26[0],\n      setFloor = _useState26[1];\n\n  var _useState27 = useState([]),\n      applianceList = _useState27[0],\n      setApplianceList = _useState27[1];\n\n  var _useState28 = useState([]),\n      utilities = _useState28[0],\n      setUtilities = _useState28[1];\n\n  var _useState29 = useState([]),\n      ext_details = _useState29[0],\n      setExtDetails = _useState29[1];\n\n  var _useState30 = useState([]),\n      tenant = _useState30[0],\n      setTenant = _useState30[1];\n\n  var _useState31 = useState([]),\n      country = _useState31[0],\n      setCountry = _useState31[1];\n\n  var _useState32 = useState([]),\n      district = _useState32[0],\n      setDistrict = _useState32[1];\n\n  var _useState33 = useState([]),\n      province = _useState33[0],\n      setProvince = _useState33[1];\n\n  var _useState34 = useState(\"\"),\n      street = _useState34[0],\n      setStreet = _useState34[1];\n\n  var _useState35 = useState(null),\n      profileImage = _useState35[0],\n      setProfile = _useState35[1];\n\n  var _useState36 = useState([]),\n      images = _useState36[0],\n      setImages = _useState36[1];\n\n  var changeObj = function changeObj(arr) {\n    var newArr = [];\n    arr.forEach(function (item, i) {\n      newArr.push(item.value);\n    });\n    return newArr;\n  };\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    setHouseHeading(null);\n    setHouseType([]);\n    setHouseNo(null);\n    setHouseDesc(null);\n    setParking(null);\n    setNoBathrooms(null);\n    setNoBedrooms(null);\n    setFloor(null);\n    setApplianceList([]);\n    setUtilities([]);\n    setExtDetails([]);\n    setTenant([]);\n    setCountry([]);\n    setDistrict([]);\n    setProvince([]);\n    setStreet(\"\");\n    setProfile(null);\n    setImages([]);\n  };\n\n  return __jsx(Mutation, {\n    mutation: CREATE_HOUSE_MUTATION,\n    refetchQueries: [{\n      query: GET_USER_HOUSES\n    }, {\n      query: PAGINATION_QUERY\n    }],\n    variables: {\n      house_heading: house_heading,\n      house_no: house_no,\n      house_description: house_description,\n      house_type: house_type.length > 0 ? house_type[0].id : \"\",\n      parking: parseInt(parking),\n      no_bedrooms: parseInt(no_bathrooms),\n      no_bathrooms: parseInt(no_bedrooms),\n      flooring: flooring,\n      appliances: changeObj(applianceList),\n      utilities: changeObj(utilities),\n      ext_ft: changeObj(ext_details),\n      profileImage: profileImage,\n      countryId: country.length > 0 ? country[0].id : \"\",\n      provinceId: province.length > 0 ? province[0].id : \"\",\n      districtId: district.length > 0 ? district[0].id : \"\"\n    }\n  }, function (createHouse, _ref15) {\n    var loading = _ref15.loading,\n        error = _ref15.error;\n    return __jsx(\"div\", null, __jsx(ActionBtn, {\n      onClick: handleClickOpen // customStyles={{ backgroundColor: \"blue\" }}\n\n    }, __jsx(AddIcon, {\n      style: {\n        fontSize: 23,\n        marginRight: 5\n      }\n    }), \"Create House\"), __jsx(Dialog, {\n      fullScreen: fullScreen,\n      onClose: handleClose,\n      classes: {\n        paper: classes.dialogPaper\n      },\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      scroll: scroll\n    }, __jsx(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      classes: {\n        root: classes.dialogActionStyle\n      }\n    }, __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\",\n      space: \"space-between\",\n      customStyles: {\n        paddingTop: 15,\n        paddingBottom: 7,\n        paddingRight: 10,\n        paddingLeft: 20\n      }\n    }, __jsx(SubHeader, null, \" Create House\"), __jsx(CancelBtn, {\n      onClick: handleClose\n    }, \"Cancel\"))), __jsx(\"form\", {\n      method: \"post\",\n      onSubmit: function _callee(e) {\n        return _regeneratorRuntime.async(function _callee$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                e.preventDefault();\n                _context7.next = 3;\n                return _regeneratorRuntime.awrap(createHouse().then(function (res) {\n                  handleClose();\n                })[\"catch\"](function (err) {\n                  alert(err);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 10,\n        paddingBottom: 10\n      }\n    }, __jsx(DialogContent, {\n      dividers: scroll === \"body\",\n      style: {\n        flex: 0.6\n      },\n      classes: {\n        root: classes.dialogContentStyle\n      }\n    }, __jsx(\"div\", null, __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"House Details\")), __jsx(Container, {\n      color: \"transparent\",\n      row: true,\n      space: \"space-between\"\n    }, __jsx(Container, {\n      flex: 1,\n      customStyles: {\n        paddingRight: 10\n      },\n      color: \"transparent\"\n    }, __jsx(Input, {\n      label: \"Title\",\n      placeholder: \"eg. desired name\",\n      type: \"text\",\n      value: house_heading,\n      onChange: function onChange(e) {\n        return setHouseHeading(e.target.value);\n      }\n    })), __jsx(Container, {\n      color: \"transparent\",\n      flex: 1,\n      customStyles: {\n        paddingLeft: 10\n      }\n    }, __jsx(Input, {\n      label: \"House number\",\n      placeholder: \"eg. #A457\",\n      type: \"text\",\n      value: house_no,\n      onChange: function onChange(e) {\n        return setHouseNo(e.target.value);\n      }\n    }))), __jsx(Container, {\n      color: \"transparent\",\n      column: true,\n      flex: false,\n      customStyles: {\n        width: \"100%\"\n      }\n    }, __jsx(CaptionText, {\n      customStyles: {\n        marginBottom: 5,\n        color: \"#323130\"\n      }\n    }, \"Description\"), __jsx(\"textarea\", {\n      type: \"text\",\n      placeholder: \"start typing here...\",\n      className: classes.inputStyle,\n      value: house_description,\n      onChange: function onChange(e) {\n        return setHouseDesc(e.target.value);\n      }\n    })), __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginTop: 20,\n        marginBottom: 10\n      }\n    }, \"Facts and Features\")), __jsx(Container, {\n      row: true,\n      space: \"space-between\",\n      color: \"transparent\"\n    }, __jsx(Container, {\n      flex: 0.3,\n      column: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        marginBottom: 5,\n        color: \"#323130\"\n      }\n    }, \"House type\"), __jsx(HouseTypesList, {\n      house_type: house_type,\n      setHouseType: setHouseType\n    })), __jsx(Input, {\n      label: \"year built\",\n      type: \"date\",\n      placeholder: \"eg.2011\",\n      style: {\n        width: 150\n      } // value={house_heading}\n      // onChange={e => {\n      //   this.setState({ house_heading: e.target.value });\n      // }}\n\n    }), __jsx(Input, {\n      label: \"Parking\",\n      placeholder: \"eg. 3 cars\",\n      type: \"number\",\n      style: {\n        width: 100\n      },\n      value: parking,\n      onChange: function onChange(e) {\n        return setParking(e.target.value);\n      }\n    })), __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"Interior details\")), __jsx(Container, {\n      row: true,\n      color: \"transparent\",\n      customStyles: {\n        marginBottom: 10\n      }\n    }, __jsx(Container, {\n      color: \"transparent\",\n      customStyles: {\n        marginRight: 15\n      }\n    }, __jsx(TextInput, {\n      label: \"no. bedrooms\",\n      placeholder: \"0\",\n      type: \"number\",\n      customStyles: {\n        textAlign: \"center\",\n        width: 50\n      },\n      row: true,\n      value: no_bedrooms,\n      onChange: function onChange(e) {\n        return setNoBedrooms(e.target.value);\n      }\n    })), __jsx(Container, {\n      color: \"transparent\",\n      customStyles: {\n        marginRight: 15\n      }\n    }, __jsx(TextInput, {\n      label: \"no. bathrooms\",\n      type: \"number\",\n      placeholder: \"0\",\n      row: true,\n      customStyles: {\n        textAlign: \"center\",\n        width: 50\n      },\n      value: no_bathrooms,\n      onChange: function onChange(e) {\n        return setNoBathrooms(e.target.value);\n      }\n    })), __jsx(Container, {\n      color: \"transparent\"\n    }, __jsx(TextInput, {\n      label: \"Flooring\",\n      placeholder: \"eg. wooden floor\",\n      type: \"text\",\n      row: true,\n      customStyles: {\n        width: 140\n      },\n      value: flooring,\n      onChange: function onChange(e) {\n        return setFloor(e.target.value);\n      }\n    }))), __jsx(Container, {\n      row: true,\n      color: \"transparent\",\n      customStyles: {\n        marginBottom: 15\n      }\n    }, __jsx(Container, {\n      column: true,\n      color: \"transparent\",\n      customStyles: {\n        marginRight: 10\n      }\n    }, __jsx(CaptionText, {\n      customStyles: {\n        marginBottom: 5,\n        color: \"#323130\"\n      }\n    }, \"Appliances\"), __jsx(ApplianceList, {\n      list: applianceList,\n      setList: setApplianceList\n    })), __jsx(Container, {\n      column: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        marginBottom: 5,\n        color: \"#323130\"\n      }\n    }, \"Utilities\"), __jsx(UtilitiesList, {\n      utilities: utilities,\n      setUtilities: setUtilities\n    }))), __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"Exterior details\")), __jsx(Container, {\n      row: true,\n      space: \"space-between\",\n      color: \"transparent\"\n    }, __jsx(Container, {\n      flex: 0.3,\n      column: true,\n      color: \"transparent\"\n    }, __jsx(ExtDetails, {\n      ext_details: ext_details,\n      setExtDetails: setExtDetails\n    }))), __jsx(Container, {\n      row: true,\n      center: true,\n      color: \"transparent\",\n      customStyles: {\n        marginBottom: 10\n      }\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginTop: 20\n      }\n    }, \"Location\")), __jsx(Container, {\n      row: true,\n      color: \"transparent\",\n      customStyles: {\n        marginBottom: 15\n      }\n    }, __jsx(Countries, {\n      country: country,\n      setCountry: setCountry\n    }), __jsx(Provinces, {\n      country: country,\n      province: province,\n      setProvince: setProvince\n    }), __jsx(Districts, {\n      district: district,\n      province: province,\n      setDistrict: setDistrict\n    })))), __jsx(\"div\", {\n      style: {\n        flex: 0.4,\n        paddingBottom: 10\n      }\n    }, __jsx(Container, {\n      flex: 0,\n      color: \"white\",\n      customStyles: {\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 10,\n        paddingBottom: 10\n      }\n    }, __jsx(Container, {\n      flex: 0,\n      row: true,\n      center: true,\n      color: \"transparent\"\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"Add House Tenant\")), __jsx(Container, {\n      flex: 0,\n      row: true,\n      space: \"space-between\",\n      color: \"transparent\"\n    }, __jsx(Container, {\n      flex: 0.3,\n      column: true,\n      color: \"transparent\"\n    }, __jsx(Tenants, {\n      tenant: tenant,\n      setTenant: setTenant\n    }))), __jsx(Container, {\n      flex: 0,\n      row: true,\n      center: true,\n      color: \"transparent\",\n      customStyles: {\n        marginTop: 20\n      }\n    }, __jsx(CaptionText, {\n      customStyles: {\n        color: \"#323130\",\n        fontWeight: \"600\",\n        marginBottom: 10\n      }\n    }, \"Upload house images\")), __jsx(UploadImageContainer, {\n      isUploading: isUploading,\n      setIsUploading: setIsUploading,\n      profileImg: profileImage,\n      setProfile: setProfile,\n      images: images,\n      setImages: setImages\n    }), __jsx(Container, {\n      color: \"transparent\",\n      right: true,\n      center: true,\n      row: true,\n      flex: false,\n      customStyles: {\n        paddingTop: 30,\n        paddingBottom: 5\n      }\n    }, isUploading ? __jsx(PrimaryButton, {\n      type: \"submit\",\n      customStyles: {\n        pointerEvents: isUploading ? \"none\" : \"auto\"\n      }\n    }, \"Uploading..\") : __jsx(PrimaryButton, {\n      type: \"submit\",\n      customStyles: {\n        pointerEvents: isUploading ? \"none\" : \"auto\"\n      }\n    }, loading ? \"saving\" : \"Save House\")))))));\n  });\n};\n\nexport default CreateHouse;","map":null,"metadata":{},"sourceType":"module"}