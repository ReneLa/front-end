{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/CustomLink.js\";\nvar __jsx = React.createElement;\n// import React from \"react\";\n// import Link from \"next/link\";\n// import { useRouter } from \"next/router\";\n// export default ({ href, children }) => {\n//   const router = useRouter();\n//   let className = children.props.className || \"\";\n//   if (router.pathname === href) {\n//     className = `${className} selected`;\n//   }\n//   return <Link href={href}>{React.cloneElement(children, { className })}</Link>;\n// };\nimport { withRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport React, { Children } from \"react\";\n\nconst ActiveLink = (_ref) => {\n  let {\n    router,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  const child = Children.only(children);\n  let className = child.props.className || \"\";\n\n  if (router.pathname === props.href && props.activeClassName) {\n    className = `${className}${props.activeClassName}`.trim();\n  }\n\n  delete props.activeClassName;\n  return __jsx(Link, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.cloneElement(child, {\n    className\n  }));\n};\n\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/CustomLink.js"],"names":["withRouter","Link","React","Children","ActiveLink","router","children","props","child","only","className","pathname","href","activeClassName","trim","cloneElement"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,UAAU,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAmC;AAAA,MAAZC,KAAY;;AACrD,QAAMC,KAAK,GAAGL,QAAQ,CAACM,IAAT,CAAcH,QAAd,CAAd;AAEA,MAAII,SAAS,GAAGF,KAAK,CAACD,KAAN,CAAYG,SAAZ,IAAyB,EAAzC;;AACA,MAAIL,MAAM,CAACM,QAAP,KAAoBJ,KAAK,CAACK,IAA1B,IAAkCL,KAAK,CAACM,eAA5C,EAA6D;AAC3DH,IAAAA,SAAS,GAAI,GAAEA,SAAU,GAAEH,KAAK,CAACM,eAAgB,EAArC,CAAuCC,IAAvC,EAAZ;AACD;;AAED,SAAOP,KAAK,CAACM,eAAb;AAEA,SAAO,MAAC,IAAD,eAAUN,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkBL,KAAK,CAACa,YAAN,CAAmBP,KAAnB,EAA0B;AAAEE,IAAAA;AAAF,GAA1B,CAAlB,CAAP;AACD,CAXD;;AAaA,eAAeV,UAAU,CAACI,UAAD,CAAzB","sourcesContent":["// import React from \"react\";\n// import Link from \"next/link\";\n// import { useRouter } from \"next/router\";\n\n// export default ({ href, children }) => {\n//   const router = useRouter();\n\n//   let className = children.props.className || \"\";\n//   if (router.pathname === href) {\n//     className = `${className} selected`;\n//   }\n\n//   return <Link href={href}>{React.cloneElement(children, { className })}</Link>;\n// };\n\nimport { withRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport React, { Children } from \"react\";\nconst ActiveLink = ({ router, children, ...props }) => {\n  const child = Children.only(children);\n\n  let className = child.props.className || \"\";\n  if (router.pathname === props.href && props.activeClassName) {\n    className = `${className}${props.activeClassName}`.trim();\n  }\n\n  delete props.activeClassName;\n\n  return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\n};\n\nexport default withRouter(ActiveLink);\n"]},"metadata":{},"sourceType":"module"}