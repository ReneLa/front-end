{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/styledComponents/DropDown.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport onClickOutside from \"react-onclickoutside\";\nimport Container from \"./Container\";\nimport { CaptionText } from \"./Text\";\nconst DropWrapper = styled(Container).withConfig({\n  displayName: \"DropDown__DropWrapper\",\n  componentId: \"sc-1atbjfe-0\"\n})([\"display:flex;\", \"\"], props => props.wrapperStyles);\nconst DropHeader = styled(Container).withConfig({\n  displayName: \"DropDown__DropHeader\",\n  componentId: \"sc-1atbjfe-1\"\n})([\"display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:5px 10px;border:1px solid #1c2833;outline:transparent;\", \";\"], props => props.headerStyles);\nconst DropHeaderTitle = styled(Container).withConfig({\n  displayName: \"DropDown__DropHeaderTitle\",\n  componentId: \"sc-1atbjfe-2\"\n})([\"display:flex;flex:1;flex-direction:row;align-items:center;\"]);\n\nconst Dropdown = ({\n  title,\n  items,\n  wrapperStyles,\n  headerStyles,\n  multiSelect = false\n}) => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: selection,\n    1: setSelection\n  } = useState([]);\n\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  const handleClick = item => {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(current => current.id !== item.id);\n      setSelection([...selectionAfterRemoval]);\n    }\n  };\n\n  const isItemSelected = item => {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  return __jsx(DropWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(DropHeader, {\n    tabIndex: 0,\n    role: \"button\",\n    onKeyPress: () => toggle(!open),\n    onClick: () => toggle(!open),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(DropHeaderTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(CaptionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, title)), __jsx(\"div\", {\n    className: \"dd-header_action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, open ? \"close\" : \"open\"))), open && __jsx(\"ul\", {\n    className: \"dd-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, items.map(item => {\n    return __jsx(\"li\", {\n      className: \"dd-list-item\",\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: () => handleClick(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, item.value), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, isItemSelected(item) && \"selected\", \" \")));\n  })));\n};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside\n}; // export { DropDown, DropDownItem, SearchStyles };\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/styledComponents/DropDown.js"],"names":["React","useState","styled","keyframes","onClickOutside","Container","CaptionText","DropWrapper","props","wrapperStyles","DropHeader","headerStyles","DropHeaderTitle","Dropdown","title","items","multiSelect","open","setOpen","selection","setSelection","handleClickOutside","handleClick","item","some","current","id","selectionAfterRemoval","filter","isItemSelected","toggle","display","flexDirection","justifyContent","map","value","clickOutsideConfig"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport onClickOutside from \"react-onclickoutside\";\nimport Container from \"./Container\";\nimport { CaptionText } from \"./Text\";\nconst DropWrapper = styled(Container)`\n  display: flex;\n  /* padding: 15px 10px; */\n  ${(props) => props.wrapperStyles}\n`;\n\nconst DropHeader = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px 10px;\n  border: 1px solid #1c2833;\n  outline: transparent;\n  ${(props) => props.headerStyles};\n`;\nconst DropHeaderTitle = styled(Container)`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Dropdown = ({\n  title,\n  items,\n  wrapperStyles,\n  headerStyles,\n  multiSelect = false,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  const handleClick = (item) => {\n    if (!selection.some((current) => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        (current) => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  };\n  const isItemSelected = (item) => {\n    if (selection.some((current) => current.id === item.id)) {\n      return true;\n    }\n    return false;\n  };\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <DropWrapper>\n      <DropHeader\n        tabIndex={0}\n        role=\"button\"\n        onKeyPress={() => toggle(!open)}\n        onClick={() => toggle(!open)}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <DropHeaderTitle>\n          <CaptionText>{title}</CaptionText>\n        </DropHeaderTitle>\n        <div className=\"dd-header_action\">\n          <p>{open ? \"close\" : \"open\"}</p>\n        </div>\n      </DropHeader>\n      {open && (\n        <ul className=\"dd-list\">\n          {items.map((item) => {\n            return (\n              <li className=\"dd-list-item\" key={item.id}>\n                <button type=\"button\" onClick={() => handleClick(item)}>\n                  <span>{item.value}</span>\n                  <span>{isItemSelected(item) && \"selected\"} </span>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </DropWrapper>\n  );\n};\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside,\n};\n// export { DropDown, DropDownItem, SearchStyles };\nexport default onClickOutside(Dropdown, clickOutsideConfig);\n"]},"metadata":{},"sourceType":"module"}