{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/Landlrd/CompleteRegister.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { Container, Text, SubHeader, Input, PrimaryButton, SubText, Header, ActionButton, CaptionText } from \"../styledComponents\";\nimport gql from \"graphql-tag\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { device } from \"../../lib/deviceSize\";\nimport hasLogo from \"../../public/static/HAS.png\";\nimport { Dropdown } from \"../styledComponents\";\nimport { GET_PROVINCES_IN_COUNTRY } from \"../queryComponents/Provinces\";\nimport { GET_DISTRICTS_IN_PROVINCE } from \"../queryComponents/Districts\";\nimport { GET_COUNTRIES } from \"../queryComponents/Countries\";\nconst ImgWrapper = styled(Container).withConfig({\n  displayName: \"CompleteRegister__ImgWrapper\",\n  componentId: \"r6hcm3-0\"\n})([\"flex-direction:column;flex:0.3;padding-top:50px;padding-left:60px;padding-right:10px;background-color:\", \";min-height:100%;max-height:100%;\"], ({\n  theme\n}) => theme.btnPrimary);\nconst FormWrapper = styled(Container).withConfig({\n  displayName: \"CompleteRegister__FormWrapper\",\n  componentId: \"r6hcm3-1\"\n})([\"flex-direction:column;padding-top:40px;padding-left:60px;padding-right:60px;flex:0.7;min-height:100%;max-height:100%;\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"CompleteRegister__Form\",\n  componentId: \"r6hcm3-2\"\n})([\"display:flex;flex-direction:column;width:50%;flex:0.72;padding-top:30px;padding-bottom:20px;\"]);\n\nconst Countries = ({\n  country,\n  setCountry\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: countryList,\n    1: setCountryList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getCountries(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_COUNTRIES\n    });\n    const {\n      countries\n    } = res.data;\n    setCountryList(changeObj(countries));\n  }\n\n  const changeObj = arr => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, client => __jsx(Container, {\n    column: true,\n    color: \"transparent\",\n    customStyles: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Dropdown, {\n    title: country.length > 0 ? country[0].value : \"Country\",\n    anchorEl: anchorEl,\n    handleOpen: e => getCountries(e, client),\n    handleClose: handleClose,\n    selection: country,\n    setSelection: setCountry,\n    items: countryList,\n    wrapperStyles: {\n      width: 150,\n      marginBottom: 10,\n      backgroundColor: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst Provinces = ({\n  country,\n  province,\n  setProvince\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: provinceList,\n    1: setProvinceList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getProvinces(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_PROVINCES_IN_COUNTRY,\n      variables: {\n        id: country[0].id\n      }\n    });\n    const provinces = res.data.getProvincesByCountry;\n    setProvinceList(changeObj(provinces));\n  }\n\n  const changeObj = arr => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, client => __jsx(Container, {\n    column: true,\n    color: \"transparent\",\n    customStyles: {\n      pointerEvents: country.length === 0 ? \"none\" : \"auto\",\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(Dropdown, {\n    title: province.length > 0 ? province[0].value : \"Province\",\n    anchorEl: anchorEl,\n    handleOpen: e => getProvinces(e, client),\n    handleClose: handleClose,\n    selection: province,\n    setSelection: setProvince,\n    items: provinceList,\n    wrapperStyles: {\n      width: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst Districts = ({\n  province,\n  district,\n  setDistrict\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: districtList,\n    1: setDistrictList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getDistricts(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_DISTRICTS_IN_PROVINCE,\n      variables: {\n        id: province[0].id\n      }\n    });\n    const districts = res.data.getDistrictsByProvince;\n    setDistrictList(changeObj(districts));\n  }\n\n  const changeObj = arr => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return __jsx(ApolloConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, client => __jsx(Container, {\n    column: true,\n    color: \"transparent\",\n    customStyles: {\n      pointerEvents: province.length === 0 ? \"none\" : \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, __jsx(Dropdown, {\n    title: district.length > 0 ? district[0].value : \"District\",\n    anchorEl: anchorEl,\n    handleOpen: e => getDistricts(e, client),\n    handleClose: handleClose,\n    selection: district,\n    setSelection: setDistrict,\n    items: districtList,\n    wrapperStyles: {\n      width: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst CREATE_LANDLORD_MUTATION = gql`\n  mutation CREATE_LANDLORD_MUTATION(\n    $firstName: String!\n    $lastName: String!\n    $tel_no: String\n    $reason: String\n    $street: String\n  ) {\n    createLandlord(\n      firstName: $firstName\n      lastName: $lastName\n      tel_no: $tel_no\n      reason: $reason\n      street: $street\n    ) {\n      id\n      firstName\n    }\n  }\n`;\n\nconst CompleteRegister = () => {\n  const {\n    0: country,\n    1: setCountry\n  } = useState([]);\n  const {\n    0: district,\n    1: setDistrict\n  } = useState([]);\n  const {\n    0: province,\n    1: setProvince\n  } = useState([]);\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(null);\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(null);\n  const {\n    0: tel_no,\n    1: setTelNo\n  } = useState(null);\n  const {\n    0: reason,\n    1: setReason\n  } = useState(null);\n  const {\n    0: street,\n    1: setStreet\n  } = useState(null);\n\n  const onCompletion = () => {\n    Router.replace(\"/Landlord/dashboard\");\n    setFirstName(null);\n    setLastName(null);\n    setTel(null);\n  };\n\n  const [signup, {\n    data,\n    loading\n  }] = useMutation(SIGNUP_MUTATION, {\n    onCompleted: onCompletion\n  });\n  return __jsx(Container, {\n    flex: 1,\n    row: true,\n    customStyles: {\n      minHeight: \"100vh\",\n      maxHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, __jsx(FormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    flex: false,\n    row: true,\n    center: true,\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: hasLogo,\n    style: {\n      width: \"50px\",\n      height: \"50px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, \"House-Assist Space\")), __jsx(Container, {\n    flex: 1,\n    column: true,\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, __jsx(Header, {\n    customStyles: {\n      fontWeight: \"400\",\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Provide more information\"), __jsx(\"fieldset\", {\n    style: {\n      display: \"flex\",\n      paddingTop: \"30px\",\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      border: \"none\",\n      flexDirection: \"column\",\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, __jsx(CaptionText, {\n    customStyles: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, \"Tell us a little more about yourself\"), __jsx(Input, {\n    label: \"FIRST NAME\",\n    placeholder: \"First Name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }), __jsx(Input, {\n    label: \"LAST NAME\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }), __jsx(Input, {\n    label: \"PHONE NUMBER\",\n    placeholder: \"Phone Number\",\n    type: \"tel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }), __jsx(CaptionText, {\n    customStyles: {\n      marginBottom: 10,\n      fontSize: 11,\n      color: \"#323130\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, \"WHY ARE YOU JOINING HOUSE-ASSIST SPACE\"), __jsx(Input, {\n    placeholder: \"provide reason\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  })), __jsx(Container, {\n    row: true,\n    center: true,\n    space: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/Landlrd/dashboard\",\n    as: \"/Landlrd/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, __jsx(PrimaryButton, {\n    type: \"submit\",\n    customStyles: {\n      paddingTop: 8,\n      paddingBottom: 8,\n      marginTop: 10,\n      width: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 19\n    }\n  }, \"Skip\"))), __jsx(PrimaryButton, {\n    type: \"submit\",\n    customStyles: {\n      paddingTop: 8,\n      paddingBottom: 8,\n      marginTop: 10,\n      width: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 15\n    }\n  }, \"Save\"))))), __jsx(ImgWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CompleteRegister;","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/Landlrd/CompleteRegister.js"],"names":["React","useState","Link","FormGroup","FormControlLabel","Checkbox","Container","Text","SubHeader","Input","PrimaryButton","SubText","Header","ActionButton","CaptionText","gql","ApolloConsumer","styled","device","hasLogo","Dropdown","GET_PROVINCES_IN_COUNTRY","GET_DISTRICTS_IN_PROVINCE","GET_COUNTRIES","ImgWrapper","theme","btnPrimary","FormWrapper","Form","form","Countries","country","setCountry","anchorEl","setAnchorEl","countryList","setCountryList","loading","setLoading","getCountries","event","client","currentTarget","res","query","countries","data","changeObj","arr","newArr","forEach","item","i","newItem","id","value","name","push","handleClose","marginRight","length","e","width","marginBottom","backgroundColor","Provinces","province","setProvince","provinceList","setProvinceList","getProvinces","variables","provinces","getProvincesByCountry","pointerEvents","Districts","district","setDistrict","districtList","setDistrictList","getDistricts","districts","getDistrictsByProvince","CREATE_LANDLORD_MUTATION","CompleteRegister","firstName","setFirstName","lastName","setLastName","tel_no","setTelNo","reason","setReason","street","setStreet","onCompletion","Router","replace","setTel","signup","useMutation","SIGNUP_MUTATION","onCompleted","minHeight","maxHeight","height","fontWeight","display","paddingTop","paddingLeft","paddingRight","paddingBottom","border","flexDirection","fontSize","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport {\n  Container,\n  Text,\n  SubHeader,\n  Input,\n  PrimaryButton,\n  SubText,\n  Header,\n  ActionButton,\n  CaptionText,\n} from \"../styledComponents\";\nimport gql from \"graphql-tag\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { device } from \"../../lib/deviceSize\";\nimport hasLogo from \"../../public/static/HAS.png\";\nimport { Dropdown } from \"../styledComponents\";\nimport { GET_PROVINCES_IN_COUNTRY } from \"../queryComponents/Provinces\";\nimport { GET_DISTRICTS_IN_PROVINCE } from \"../queryComponents/Districts\";\nimport { GET_COUNTRIES } from \"../queryComponents/Countries\";\n\nconst ImgWrapper = styled(Container)`\n  flex-direction: column;\n  flex: 0.3;\n  padding-top: 50px;\n  padding-left: 60px;\n  padding-right: 10px;\n\n  background-color: ${({ theme }) => theme.btnPrimary};\n  min-height: 100%;\n  max-height: 100%;\n`;\nconst FormWrapper = styled(Container)`\n  flex-direction: column;\n  padding-top: 40px;\n  padding-left: 60px;\n  padding-right: 60px;\n  flex: 0.7;\n  min-height: 100%;\n  max-height: 100%;\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  flex: 0.72;\n  padding-top: 30px;\n  padding-bottom: 20px;\n  /* background-color: red; */\n`;\n\nconst Countries = ({ country, setCountry }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [countryList, setCountryList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function getCountries(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({ query: GET_COUNTRIES });\n    const { countries } = res.data;\n    setCountryList(changeObj(countries));\n  }\n\n  const changeObj = (arr) => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name,\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <ApolloConsumer>\n      {(client) => (\n        <Container\n          column\n          color=\"transparent\"\n          customStyles={{ marginRight: 10 }}\n        >\n          <Dropdown\n            title={country.length > 0 ? country[0].value : \"Country\"}\n            anchorEl={anchorEl}\n            handleOpen={(e) => getCountries(e, client)}\n            handleClose={handleClose}\n            selection={country}\n            setSelection={setCountry}\n            items={countryList}\n            wrapperStyles={{\n              width: 150,\n              marginBottom: 10,\n              backgroundColor: \"#fff\",\n            }}\n          />\n        </Container>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nconst Provinces = ({ country, province, setProvince }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [provinceList, setProvinceList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function getProvinces(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_PROVINCES_IN_COUNTRY,\n      variables: { id: country[0].id },\n    });\n\n    const provinces = res.data.getProvincesByCountry;\n    setProvinceList(changeObj(provinces));\n  }\n  const changeObj = (arr) => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name,\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <ApolloConsumer>\n      {(client) => (\n        <Container\n          column\n          color=\"transparent\"\n          customStyles={{\n            pointerEvents: country.length === 0 ? \"none\" : \"auto\",\n            marginRight: 10,\n          }}\n        >\n          <Dropdown\n            title={province.length > 0 ? province[0].value : \"Province\"}\n            anchorEl={anchorEl}\n            handleOpen={(e) => getProvinces(e, client)}\n            handleClose={handleClose}\n            selection={province}\n            setSelection={setProvince}\n            items={provinceList}\n            wrapperStyles={{ width: 150 }}\n          />\n        </Container>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nconst Districts = ({ province, district, setDistrict }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [districtList, setDistrictList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function getDistricts(event, client) {\n    setLoading(true);\n    setAnchorEl(event.currentTarget);\n    const res = await client.query({\n      query: GET_DISTRICTS_IN_PROVINCE,\n      variables: { id: province[0].id },\n    });\n\n    const districts = res.data.getDistrictsByProvince;\n    setDistrictList(changeObj(districts));\n  }\n  const changeObj = (arr) => {\n    let newArr = [];\n    arr.forEach((item, i) => {\n      const newItem = {\n        id: item.id,\n        value: item.name,\n      };\n      newArr.push(newItem);\n    });\n    return newArr;\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <ApolloConsumer>\n      {(client) => (\n        <Container\n          column\n          color=\"transparent\"\n          customStyles={{\n            pointerEvents: province.length === 0 ? \"none\" : \"auto\",\n          }}\n        >\n          <Dropdown\n            title={district.length > 0 ? district[0].value : \"District\"}\n            anchorEl={anchorEl}\n            handleOpen={(e) => getDistricts(e, client)}\n            handleClose={handleClose}\n            selection={district}\n            setSelection={setDistrict}\n            items={districtList}\n            wrapperStyles={{ width: 150 }}\n          />\n        </Container>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nconst CREATE_LANDLORD_MUTATION = gql`\n  mutation CREATE_LANDLORD_MUTATION(\n    $firstName: String!\n    $lastName: String!\n    $tel_no: String\n    $reason: String\n    $street: String\n  ) {\n    createLandlord(\n      firstName: $firstName\n      lastName: $lastName\n      tel_no: $tel_no\n      reason: $reason\n      street: $street\n    ) {\n      id\n      firstName\n    }\n  }\n`;\nconst CompleteRegister = () => {\n  const [country, setCountry] = useState([]);\n  const [district, setDistrict] = useState([]);\n  const [province, setProvince] = useState([]);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [tel_no, setTelNo] = useState(null);\n  const [reason, setReason] = useState(null);\n  const [street, setStreet] = useState(null);\n\n  const onCompletion = () => {\n    Router.replace(\"/Landlord/dashboard\");\n    setFirstName(null);\n    setLastName(null);\n    setTel(null);\n  };\n  const [signup, { data, loading }] = useMutation(SIGNUP_MUTATION, {\n    onCompleted: onCompletion,\n  });\n\n  return (\n    <Container\n      flex={1}\n      row\n      customStyles={{ minHeight: \"100vh\", maxHeight: \"100vh\" }}\n    >\n      <FormWrapper>\n        <Container flex={false} row center color=\"transparent\">\n          <img\n            src={hasLogo}\n            style={{ width: \"50px\", height: \"50px\", marginRight: \"10px\" }}\n          />\n          <Text>House-Assist Space</Text>\n        </Container>\n        <Container flex={1} column center>\n          <Form>\n            <Header customStyles={{ fontWeight: \"400\", marginBottom: 5 }}>\n              Provide more information\n            </Header>\n\n            <fieldset\n              style={{\n                display: \"flex\",\n                paddingTop: \"30px\",\n                paddingLeft: 0,\n                paddingRight: 0,\n                paddingBottom: 0,\n                border: \"none\",\n                flexDirection: \"column\",\n                marginBottom: 10,\n              }}\n            >\n              <CaptionText customStyles={{ marginBottom: 10 }}>\n                Tell us a little more about yourself\n              </CaptionText>\n              <Input label=\"FIRST NAME\" placeholder=\"First Name\" type=\"text\" />\n              <Input label=\"LAST NAME\" placeholder=\"Last Name\" type=\"text\" />\n              <Input\n                label=\"PHONE NUMBER\"\n                placeholder=\"Phone Number\"\n                type=\"tel\"\n              />\n              {/*<Container\n                row\n                center\n                color=\"transparent\"\n                customStyles={{ marginBottom: 10 }}\n              >\n                <CaptionText\n                  customStyles={{\n                    color: \"#323130\",\n                    fontWeight: \"600\",\n                    marginTop: 20,\n                  }}\n                >\n                  Location\n                </CaptionText>\n              </Container>\n              <Container\n                row\n                color=\"transparent\"\n                customStyles={{ marginBottom: 15 }}\n              >\n                <Countries country={country} setCountry={setCountry} />\n                <Provinces\n                  country={country}\n                  province={province}\n                  setProvince={setProvince}\n                />\n                <Districts\n                  district={district}\n                  province={province}\n                  setDistrict={setDistrict}\n                />\n                </Container>*/}\n              <CaptionText\n                customStyles={{\n                  marginBottom: 10,\n                  fontSize: 11,\n                  color: \"#323130\",\n                }}\n              >\n                WHY ARE YOU JOINING HOUSE-ASSIST SPACE\n              </CaptionText>\n              <Input placeholder=\"provide reason\" type=\"text\" />\n            </fieldset>\n            <Container row center space=\"space-between\">\n              <Link href={\"/Landlrd/dashboard\"} as={\"/Landlrd/dashboard\"}>\n                <a>\n                  <PrimaryButton\n                    type=\"submit\"\n                    customStyles={{\n                      paddingTop: 8,\n                      paddingBottom: 8,\n                      marginTop: 10,\n                      width: 100,\n                    }}\n                  >\n                    Skip\n                  </PrimaryButton>\n                </a>\n              </Link>\n\n              <PrimaryButton\n                type=\"submit\"\n                customStyles={{\n                  paddingTop: 8,\n                  paddingBottom: 8,\n                  marginTop: 10,\n                  width: 100,\n                }}\n              >\n                Save\n              </PrimaryButton>\n            </Container>\n          </Form>\n        </Container>\n      </FormWrapper>\n      <ImgWrapper />\n    </Container>\n  );\n};\n\nexport default CompleteRegister;\n"]},"metadata":{},"sourceType":"module"}