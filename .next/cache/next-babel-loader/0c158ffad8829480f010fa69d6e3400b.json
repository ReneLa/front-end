{"ast":null,"code":"// import { withRouter } from \"next/router\";\n// import Link from \"next/link\";\n// import React, { Children } from \"react\";\n// const ActiveLink = ({ router, children, ...props }) => {\n//   const child = Children.only(children);\n//   let className = child.props.className || \"\";\n//   if (router.pathname === props.href && props.activeClassName) {\n//     className = `${className}${props.activeClassName}`.trim();\n//   }\n//   delete props.activeClassName;\n//   return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\n// };\n// export default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/CustomLink.js"],"names":[],"mappings":"AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA","sourcesContent":["\n\n\n// import { withRouter } from \"next/router\";\n// import Link from \"next/link\";\n// import React, { Children } from \"react\";\n// const ActiveLink = ({ router, children, ...props }) => {\n//   const child = Children.only(children);\n\n//   let className = child.props.className || \"\";\n//   if (router.pathname === props.href && props.activeClassName) {\n//     className = `${className}${props.activeClassName}`.trim();\n//   }\n\n//   delete props.activeClassName;\n\n//   return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\n// };\n\n// export default withRouter(ActiveLink);\n"]},"metadata":{},"sourceType":"script"}