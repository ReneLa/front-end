{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ADD_IMAGE_MUTATION($image: String!, $houseId: ID!) {\\n    createHouseImage(image: $image, houseId: $houseId) {\\n      id\\n      image\\n      houseId {\\n        id\\n        house_heading\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { withStyles, fade } from \"@material-ui/core/styles\";\nimport { Mutation } from \"react-apollo\";\nimport { Select, FormControl, Typography } from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport { theme as customTheme } from \"../../../Page\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/Houses\";\nimport Houses from \"../../../queryComponents/Houses\";\nimport { Container, FlatButton, Input } from \"../../../styledComponents\";\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport loadingImg from \"../../../../public/static/126.gif\";\nvar ADD_IMAGE_MUTATION = gql(_templateObject());\n\nvar styles = function styles(theme) {\n  return {\n    list: {\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    formControl: {\n      // marginTop: theme.spacing(2),\n      maxWidth: 200\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    input: {\n      display: \"none\"\n    }\n  };\n};\n\nvar AddHouseImage = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddHouseImage, _React$Component);\n\n  var _super = _createSuper(AddHouseImage);\n\n  function AddHouseImage() {\n    var _this;\n\n    _classCallCheck(this, AddHouseImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      image: null,\n      houseId: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadImage\", function _callee(e) {\n      var files, data, res, file;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              files = e.target.files;\n              data = new FormData();\n              data.append(\"file\", files[0]);\n              data.append(\"upload_preset\", \"house_assist\");\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.cloudinary.com/v1_1/dsubmyluz/image/upload/\", {\n                method: \"POST\",\n                body: data\n              }));\n\n            case 6:\n              res = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 9:\n              file = _context.sent;\n\n              if (file) {\n                _this.setState({\n                  image: file.secure_url\n                });\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addImageContainer\", function (data) {\n      var _this$state = _this.state,\n          image = _this$state.image,\n          houseId = _this$state.houseId;\n      var classes = _this.props.classes;\n      return __jsx(Mutation, {\n        mutation: ADD_IMAGE_MUTATION,\n        variables: _this.state,\n        refetchQueries: [{\n          query: GET_USER_HOUSES\n        }]\n      }, function (addImage, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return __jsx(Container, {\n          flex: 1\n        }, __jsx(\"form\", {\n          method: \"post\",\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1\n          },\n          onSubmit: function _callee2(e) {\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    e.preventDefault();\n                    _context2.next = 3;\n                    return _regeneratorRuntime.awrap(addImage());\n\n                  case 3:\n                    _this.setState({\n                      image: null,\n                      houseId: \"\"\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        }, __jsx(Container, {\n          middle: true,\n          row: true,\n          center: true,\n          customStyles: {\n            paddingTop: 15,\n            marginTop: 30\n          }\n        }, __jsx(\"span\", null, \" Select House:\"), __jsx(FormControl, {\n          size: \"small\",\n          variant: \"outlined\",\n          className: classes.formControl\n        }, __jsx(Select, {\n          \"native\": true,\n          size: \"normal\",\n          value: houseId,\n          style: {\n            marginLeft: 15\n          },\n          onChange: function onChange(e) {\n            _this.setState({\n              houseId: e.target.value\n            });\n          },\n          inputProps: {\n            name: \"house\",\n            id: \"outlined-house-image\"\n          }\n        }, __jsx(\"option\", {\n          value: \"\"\n        }, \"choose house\"), data.map(function (house) {\n          return __jsx(\"option\", {\n            key: house.id,\n            value: house.id\n          }, house.house_heading);\n        })))), __jsx(Container, {\n          middle: true,\n          row: true,\n          center: true,\n          customStyles: {\n            paddingTop: 15,\n            marginTop: 30\n          }\n        }, __jsx(\"span\", null, \" Select photo:\"), __jsx(Input, {\n          accept: \"image/*\",\n          id: \"text-button-file\",\n          multiple: true,\n          type: \"file\",\n          onChange: _this.uploadImage,\n          style: {\n            marginLeft: 10,\n            width: 200\n          }\n        }), image !== null && __jsx(\"img\", {\n          src: image,\n          style: {\n            width: 40,\n            height: 35,\n            objectFit: \"fit\"\n          }\n        })), __jsx(Container, {\n          right: true,\n          center: true,\n          row: true,\n          flex: 1,\n          space: \"space-between\",\n          customStyles: {\n            position: \"absolute\",\n            bottom: 0,\n            marginTop: 15,\n            padding: 10,\n            borderTop: \"0.5px solid \".concat(fade(\"#393939\", 0.2)),\n            width: \"100%\"\n          }\n        }, __jsx(FlatButton, {\n          type: \"submit\"\n        }, loading ? __jsx(\"img\", {\n          src: loadingImg,\n          style: {\n            width: 20,\n            height: 20\n          }\n        }) : \"Save\"))));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AddHouseImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          image = _this$state2.image,\n          houseId = _this$state2.houseId;\n      var classes = this.props.classes;\n      return __jsx(Container, {\n        flex: 1,\n        column: true\n      }, __jsx(Houses, null, function (_ref2) {\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            error = _ref2.error;\n\n        if (data) {\n          var houses = data.getUserHouses;\n\n          if (houses.length === 0) {\n            return __jsx(Container, {\n              flex: 1,\n              column: true,\n              middle: true,\n              center: true // customStyles={{ paddingTop: 64 }}\n\n            }, __jsx(AddPhotoIcon, {\n              style: {\n                fontSize: 60,\n                color: \"gray\"\n              }\n            }), __jsx(Typography, {\n              style: {\n                fontSize: 13,\n                fontWeight: 200,\n                marginTop: 20\n              }\n            }, \"Add at least one house\"));\n          }\n\n          if (houses.length !== 0) {\n            return __jsx(Container, {\n              color: \"pink\",\n              flex: 1\n            }, _this2.addImageContainer(houses));\n          }\n        }\n\n        if (loading) {\n          return __jsx(Container, {\n            flex: 1,\n            middle: true,\n            center: true\n          }, __jsx(\"img\", {\n            src: loadingImg,\n            style: {\n              width: 25,\n              height: 25\n            }\n          }));\n        }\n\n        return null;\n      }));\n    }\n  }]);\n\n  return AddHouseImage;\n}(React.Component);\n\nexport default withStyles(styles)(AddHouseImage);","map":null,"metadata":{},"sourceType":"module"}