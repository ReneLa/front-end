{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport { Children } from \"react\";\nimport React from \"react\";\nexport default withRouter(function (_ref) {\n  var router = _ref.router,\n      children = _ref.children,\n      as = _ref.as,\n      href = _ref.href,\n      rest = _objectWithoutProperties(_ref, [\"router\", \"children\", \"as\", \"href\"]);\n\n  return __jsx(Link, _extends({}, rest, {\n    href: href,\n    as: as\n  }), React.cloneElement(Children.only(children), {\n    className: router.pathname === href || router.asPath === as ? \"active\" : null\n  }));\n}); // import React from \"react\";\n// import Link from \"next/link\";\n// import { useRouter } from \"next/router\";\n// export default ({ href, children }) => {\n//   const router = useRouter();\n//   let className = children.props.className || \"\";\n//   if (router.pathname === href) {\n//     className = `${className} selected`;\n//   }\n//   return <Link href={href}>{React.cloneElement(children, { className })}</Link>;\n// };\n// import { withRouter } from \"next/router\";\n// import Link from \"next/link\";\n// import React, { Children } from \"react\";\n// const ActiveLink = ({ router, children, ...props }) => {\n//   const child = Children.only(children);\n//   let className = child.props.className || \"\";\n//   if (router.pathname === props.href && props.activeClassName) {\n//     className = `${className}${props.activeClassName}`.trim();\n//   }\n//   delete props.activeClassName;\n//   return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\n// };\n// export default withRouter(ActiveLink);","map":null,"metadata":{},"sourceType":"module"}