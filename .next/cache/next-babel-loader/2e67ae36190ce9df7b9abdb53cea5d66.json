{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/LandlordHouses.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { perPage } from \"../../../config\";\nconst GET_USER_HOUSES = gql`\n  query GET_USER_HOUSES($skip:Int=0,$first:Int=${perPage}) {\n    getUserHouses(skip:$skip, first:$first,orderBy:createdAt_DESC) {\n      id\n      house_heading\n      house_description\n      house_no\n      house_status\n      parcel_no\n\n      house_type {\n        id\n        house_type\n      }\n      year_built\n      parking\n      lot\n      price_sqrft\n      no_bedrooms\n      no_bathrooms\n      appliances\n      flooring\n      live_space\n      ext_ft\n      utilities\n      no_annex\n      dinning_room\n      date_available_from\n      isActive\n      has_in_kitchen\n      has_balcony\n      has_hotwater\n      has_carparking\n      profileImage\n      contact_no\n      countryId {\n        name\n      }\n      provinceId {\n        name\n      }\n      districtId {\n        name\n      }\n      street\n      createdAt\n      updatedAt\n      images {\n        id\n        image\n      }\n    }\n  }\n`;\n\nconst Houses = props => __jsx(Query, _extends({}, props, {\n  query: GET_USER_HOUSES,\n  variables: {\n    skip: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }\n}), payload => props.children(payload));\n\nHouses.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default Houses;\nexport { GET_USER_HOUSES };","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/LandlordHouses.js"],"names":["React","PropTypes","Query","gql","perPage","GET_USER_HOUSES","Houses","props","skip","payload","children","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,eAAe,GAAGF,GAAI;iDACqBC,OAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CADzD;;AAuDA,MAAME,MAAM,GAAIC,KAAD,IACb,MAAC,KAAD,eACMA,KADN;AAEE,EAAA,KAAK,EAAEF,eAFT;AAGE,EAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG,GAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOIC,OAAD,IAAaF,KAAK,CAACG,QAAN,CAAeD,OAAf,CAPhB,CADF;;AAYAH,MAAM,CAACK,SAAP,GAAmB;AACjBD,EAAAA,QAAQ,EAAET,SAAS,CAACW,IAAV,CAAeC;AADR,CAAnB;AAGA,eAAeP,MAAf;AACA,SAASD,eAAT","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { perPage } from \"../../../config\";\n\nconst GET_USER_HOUSES = gql`\n  query GET_USER_HOUSES($skip:Int=0,$first:Int=${perPage}) {\n    getUserHouses(skip:$skip, first:$first,orderBy:createdAt_DESC) {\n      id\n      house_heading\n      house_description\n      house_no\n      house_status\n      parcel_no\n\n      house_type {\n        id\n        house_type\n      }\n      year_built\n      parking\n      lot\n      price_sqrft\n      no_bedrooms\n      no_bathrooms\n      appliances\n      flooring\n      live_space\n      ext_ft\n      utilities\n      no_annex\n      dinning_room\n      date_available_from\n      isActive\n      has_in_kitchen\n      has_balcony\n      has_hotwater\n      has_carparking\n      profileImage\n      contact_no\n      countryId {\n        name\n      }\n      provinceId {\n        name\n      }\n      districtId {\n        name\n      }\n      street\n      createdAt\n      updatedAt\n      images {\n        id\n        image\n      }\n    }\n  }\n`;\n\nconst Houses = (props) => (\n  <Query\n    {...props}\n    query={GET_USER_HOUSES}\n    variables={{\n      skip: 0,\n    }}\n  >\n    {(payload) => props.children(payload)}\n  </Query>\n);\n\nHouses.propTypes = {\n  children: PropTypes.func.isRequired,\n};\nexport default Houses;\nexport { GET_USER_HOUSES };\n"]},"metadata":{},"sourceType":"module"}