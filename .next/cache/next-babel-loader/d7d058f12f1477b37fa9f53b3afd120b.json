{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport HomeIcon from \"@material-ui/icons/HomeWork\";\nimport BackIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport NextIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { perPage } from \"../../../config\";\nimport loadingImg from \"../../../public/static/126.gif\";\nimport SearchHouses from \"../../queryComponents/SearchHouses\";\nimport { CaptionText, Container, Header, IconButton, SubHeader, SubText } from \"../../styledComponents\";\nimport HouseItem from \"../HouseItem\";\nimport CreateHouse from \"./create/CreateHouse\";\nconst SearchWrapper = styled(Container).withConfig({\n  displayName: \"houses__SearchWrapper\",\n  componentId: \"sc-1358onz-0\"\n})([\"display:flex;width:100%;flex-direction:row;padding:20px 110px 10px 110px;\"]);\nconst Wrapper = styled(Container).withConfig({\n  displayName: \"houses__Wrapper\",\n  componentId: \"sc-1358onz-1\"\n})([\"display:flex;flex-direction:column;width:100%;padding-top:0px;padding-left:110px;padding-bottom:15px;padding-right:110px;\"]);\nconst PageBtn = styled(IconButton).withConfig({\n  displayName: \"houses__PageBtn\",\n  componentId: \"sc-1358onz-2\"\n})([\"display:flex;justify-content:center;align-items:center;align-content:center;border:none;margin-right:5px;height:33px;width:33px;\", \"\"], props => props.activeStyles);\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    housesConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst HousesPagination = ({\n  setSkip\n}) => {\n  const [currentPage, setCurrentPage] = React.useState(1);\n\n  const handleNext = () => {\n    setCurrentPage(currentPage + 1);\n    setSkip(currentPage + 1);\n  };\n\n  const handleBack = () => {\n    setCurrentPage(currentPage - 1);\n    setSkip(currentPage - 1);\n  };\n\n  return __jsx(Query, {\n    query: PAGINATION_QUERY\n  }, ({\n    data,\n    loading,\n    error\n  }) => {\n    if (data) {\n      const count = data.housesConnection.aggregate.count;\n      const pages = Math.ceil(count / perPage);\n      let backDisabled = currentPage <= 1;\n      let nextDisabled = currentPage >= pages;\n      return __jsx(Container, {\n        flex: 0,\n        row: true,\n        middle: true,\n        customStyles: {\n          paddingTop: 10,\n          paddingBottom: 25\n        }\n      }, __jsx(IconButton, {\n        onClick: () => handleBack(),\n        customStyles: {\n          border: \"1px solid #E1E1E1\",\n          marginRight: 10,\n          height: 33,\n          width: 33,\n          pointerEvents: backDisabled ? \"none\" : \"auto\",\n          opacity: backDisabled ? 0.6 : 1.0\n        }\n      }, __jsx(BackIcon, {\n        style: {\n          fontSize: 25\n        }\n      })), [...Array(pages)].map((num, i) => {\n        let index = i + 1;\n        return __jsx(PageBtn, {\n          key: i,\n          onClick: () => {\n            setCurrentPage(index);\n            setSkip(index);\n          },\n          activeStyles: {\n            backgroundColor: index === currentPage ? \"#E1E1E1\" : \"transparent\",\n            pointerEvents: index === currentPage ? \"none\" : \"auto\"\n          }\n        }, __jsx(\"span\", null, index));\n      }), __jsx(IconButton, {\n        onClick: () => handleNext(),\n        customStyles: {\n          border: \"1px solid #E1E1E1\",\n          height: 33,\n          width: 33,\n          marginLeft: 5,\n          pointerEvents: nextDisabled ? \"none\" : \"auto\",\n          opacity: nextDisabled ? 0.6 : 1.0\n        }\n      }, __jsx(NextIcon, {\n        style: {\n          fontSize: 25\n        }\n      })));\n    }\n\n    return null;\n  });\n};\n\nconst Houses = props => {\n  const [showNumber, setNumber] = React.useState(10);\n  const [loading, setLoading] = React.useState(false);\n  const [foundHouses, setFound] = React.useState(null);\n\n  if (loading) {\n    return __jsx(Container, {\n      flex: 1\n    }, __jsx(SearchWrapper, null, __jsx(Header, null, \"Your Houses\"), __jsx(Container, {\n      row: true,\n      center: true,\n      flex: 1,\n      right: true\n    }, __jsx(SubText, null, \"Search:\"), __jsx(SearchHouses, {\n      setLoading: setLoading,\n      setFound: setFound\n    }), __jsx(CreateHouse, null))), __jsx(Wrapper, null, __jsx(Container, {\n      flex: 1,\n      middle: true,\n      center: true,\n      column: true\n    }, __jsx(\"img\", {\n      src: loadingImg,\n      style: {\n        width: 20,\n        height: 20\n      }\n    }))));\n  }\n\n  return __jsx(Container, {\n    flex: 1\n  }, __jsx(SearchWrapper, null, __jsx(Header, null, \"Your Houses\"), __jsx(Container, {\n    row: true,\n    center: true,\n    flex: 1,\n    right: true\n  }, __jsx(SubText, null, \"Search:\"), __jsx(SearchHouses, {\n    setLoading: setLoading,\n    setFound: setFound\n  }), __jsx(CreateHouse, null))), __jsx(Wrapper, null, __jsx(Container, {\n    space: \"space-between\",\n    center: true,\n    row: true,\n    customStyles: {\n      paddingTop: 10,\n      paddingBottom: 10\n    }\n  }, __jsx(Container, {\n    row: true,\n    center: true,\n    flex: 1\n  })), foundHouses === null && __jsx(React.Fragment, null, props.houses.length > 0 && __jsx(HousesPagination, {\n    setSkip: props.setSkip\n  }), __jsx(Container, {\n    flex: 1,\n    row: true,\n    customStyles: {\n      flexWrap: \"wrap\"\n    }\n  }, props.houses.length > 0 && props.houses.map(house => {\n    return __jsx(HouseItem, _extends({\n      key: house.id,\n      house: house\n    }, props));\n  })), props.houses.length <= 0 && __jsx(Container, {\n    flex: 1,\n    column: true,\n    center: true,\n    middle: true,\n    customStyles: {\n      minHeight: 300\n    }\n  }, __jsx(SubHeader, {\n    customStyles: {\n      marginBottom: 20\n    }\n  }, \"No House found?\"), __jsx(HomeIcon, {\n    style: {\n      fontSize: 100,\n      color: \"#1C2833\",\n      marginBottom: 20,\n      marginTop: 20\n    }\n  }), __jsx(CaptionText, null, \"Try to create more houses\"))), foundHouses !== null && __jsx(Container, {\n    flex: 1,\n    row: true,\n    customStyles: {\n      flexWrap: \"wrap\"\n    }\n  }, foundHouses.map(house => {\n    return __jsx(HouseItem, _extends({\n      key: house.id,\n      house: house\n    }, props));\n  })), foundHouses !== null && foundHouses.length === 0 && __jsx(Container, {\n    flex: 1,\n    column: true,\n    middle: true,\n    center: true,\n    customStyles: {\n      flexWrap: \"wrap\"\n    }\n  }, __jsx(SubHeader, null, \"No House Found\"))));\n};\n\nexport default Houses;\nexport { PAGINATION_QUERY };","map":null,"metadata":{},"sourceType":"module"}