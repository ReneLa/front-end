{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/CurrentTenant.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst GET_CURRENT_TENANT = gql`\n  query GET_CURRENT_TENANT($houseId: ID!) {\n    getCurrentTenant(houseId: $houseId) {\n      id\n      firstName\n      lastName\n      isActive\n      sex\n      comm_email\n      tel_no\n      profileImage\n      houseId {\n        id\n        house_no\n        house_heading\n      }\n      stay_duration\n      from_date\n      street\n      updatedAt\n    }\n  }\n`;\n\nconst CurrentTenant = props => __jsx(Query, _extends({}, props, {\n  query: GET_CURRENT_TENANT,\n  variables: {\n    houseId: props.houseId\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}), payload => props.children(payload));\n\nCurrentTenant.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default CurrentTenant;\nexport { GET_CURRENT_TENANT };","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/landlord/CurrentTenant.js"],"names":["React","PropTypes","Query","gql","GET_CURRENT_TENANT","CurrentTenant","props","houseId","payload","children","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,kBAAkB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AAwBA,MAAME,aAAa,GAAIC,KAAD,IACpB,MAAC,KAAD,eACMA,KADN;AAEE,EAAA,KAAK,EAAEF,kBAFT;AAGE,EAAA,SAAS,EAAE;AAAEG,IAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,GAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKIC,OAAD,IAAaF,KAAK,CAACG,QAAN,CAAeD,OAAf,CALhB,CADF;;AAUAH,aAAa,CAACK,SAAd,GAA0B;AACxBD,EAAAA,QAAQ,EAAER,SAAS,CAACU,IAAV,CAAeC;AADD,CAA1B;AAGA,eAAeP,aAAf;AACA,SAASD,kBAAT","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst GET_CURRENT_TENANT = gql`\n  query GET_CURRENT_TENANT($houseId: ID!) {\n    getCurrentTenant(houseId: $houseId) {\n      id\n      firstName\n      lastName\n      isActive\n      sex\n      comm_email\n      tel_no\n      profileImage\n      houseId {\n        id\n        house_no\n        house_heading\n      }\n      stay_duration\n      from_date\n      street\n      updatedAt\n    }\n  }\n`;\n\nconst CurrentTenant = (props) => (\n  <Query\n    {...props}\n    query={GET_CURRENT_TENANT}\n    variables={{ houseId: props.houseId }}\n  >\n    {(payload) => props.children(payload)}\n  </Query>\n);\n\nCurrentTenant.propTypes = {\n  children: PropTypes.func.isRequired,\n};\nexport default CurrentTenant;\nexport { GET_CURRENT_TENANT };\n"]},"metadata":{},"sourceType":"module"}