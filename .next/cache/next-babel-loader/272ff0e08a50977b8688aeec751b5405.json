{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { withStyles, fade } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { Mutation } from \"react-apollo\";\nimport { GET_USER_HOUSES } from \"../../../queryComponents/Houses\";\nimport { TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Select, Divider, Avatar } from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport TagIcon from \"@material-ui/icons/LocalOffer\";\nimport { theme as customTheme } from \"../../../Page\";\nimport Countries from \"../../../queryComponents/Countries\";\nimport Provinces from \"../../../queryComponents/Provinces\";\nimport Districts from \"../../../queryComponents/Districts\"; // import Sectors from \"../../queryComponents/Sectors\";\n\nimport HouseTypes from \"../../../queryComponents/HouseTypes\";\nimport { Container, FlatButton, Input, TextInput, ActionButton, SubText, CaptionText } from \"../../../styledComponents\";\nimport loadingImg from \"../../../../public/static/126.gif\";\nconst CREATE_HOUSE_MUTATION = gql`\n  mutation CREATE_HOUSE_MUTATION(\n    $house_heading: String!\n    $house_description: String!\n    $house_no: String!\n    $no_bathrooms: Int\n    $no_bedrooms: Int\n    $no_annex: Int\n    $dinning_room: Int\n    $isActive: Boolean\n    $has_in_kitchen: Boolean\n    $has_balcony: Boolean\n    $has_garden: Boolean\n    $has_hotwater: Boolean\n    $has_carparking: Boolean\n    $house_type: ID\n    # $parent_houseId: ID\n    $countryId: ID\n    $provinceId: ID\n    $districtId: ID # $sectorId: ID\n  ) {\n    createHouse(\n      house_heading: $house_heading\n      house_description: $house_description\n      house_no: $house_no\n      no_bathrooms: $no_bathrooms\n      no_bedrooms: $no_bedrooms\n      no_annex: $no_annex\n      dinning_room: $dinning_room\n      isActive: $isActive\n      has_in_kitchen: $has_in_kitchen\n      has_balcony: $has_balcony\n      has_garden: $has_garden\n      has_hotwater: $has_hotwater\n      has_carparking: $has_carparking\n      house_type: $house_type\n      # parent_houseId: $parent_houseId\n      countryId: $countryId\n      provinceId: $provinceId\n      districtId: $districtId # sectorId: $sectorId\n    ) {\n      id\n      house_heading\n      house_description\n      house_no\n      no_annex\n      no_bathrooms\n      no_bedrooms\n      dinning_room\n      isActive\n      has_in_kitchen\n      has_balcony\n      has_garden\n      has_hotwater\n      has_carparking\n      house_type {\n        id\n      }\n      # parent_houseId {\n      #   id\n      # }\n      countryId {\n        id\n        name\n      }\n      provinceId {\n        id\n        name\n      }\n      districtId {\n        id\n        name\n      }\n      # sectorId {\n      #   id\n      #   name\n      # }\n    }\n  }\n`;\nconst ActionBtn = styled(ActionButton).withConfig({\n  displayName: \"CreateHouse__ActionBtn\",\n  componentId: \"r30vjh-0\"\n})([\"display:flex;justify-content:center;align-items:center;height:30px;width:30px;align-content:center;border-radius:2px;margin-right:5px;background-color:\", \";\"], ({\n  theme\n}) => theme.lightGrey);\n\nconst styles = theme => ({\n  list: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    maxWidth: 120\n  },\n  inputStyle: {\n    border: 0,\n    borderRadius: 4,\n    paddingTop: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    backgroundColor: \"#F5F8FA\",\n    // lineHeight: 2,\n    minHeight: 60,\n    fontSize: 12,\n    \"&:focus\": {\n      border: \"1px solid #4C3AF7\",\n      backgroundColor: \"#FEFEFF\"\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n  headerStyle: {\n    fontWeight: \"500\",\n    fontSize: 14\n  },\n  checkStyle: {\n    fontWeight: \"400\",\n    fontSize: 12\n  }\n});\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: \"green\",\n    \"&$checked\": {\n      color: \"red\"\n    }\n  },\n  checked: {}\n})(props => __jsx(Checkbox, _extends({\n  color: \"default\"\n}, props)));\n\nclass CreateHouse extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      createdHouses: [],\n      activeStep: 0,\n      house_heading: \"\",\n      house_description: \"\",\n      house_no: \"\",\n      no_annex: \"\",\n      no_bathrooms: \"\",\n      no_bedrooms: \"\",\n      dinning_room: \"\",\n      isActive: false,\n      has_in_kitchen: false,\n      has_balcony: false,\n      has_garden: false,\n      has_hotwater: false,\n      has_carparking: false,\n      house_type: \"\",\n      parent_houseId: \"\",\n      countryId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\",\n      success: false\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleReset\", () => {\n      this.setState({\n        activeStep: 0\n      });\n    });\n  }\n\n  render() {\n    const {\n      activeStep,\n      house_heading,\n      house_description,\n      house_no,\n      no_annex,\n      no_bathrooms,\n      no_bedrooms,\n      dinning_room,\n      isActive,\n      has_in_kitchen,\n      has_balcony,\n      has_garden,\n      has_hotwater,\n      has_carparking,\n      house_type,\n      parent_houseId,\n      countryId,\n      provinceId,\n      districtId,\n      sectorId,\n      createdHouses,\n      success\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return __jsx(Mutation, {\n      mutation: CREATE_HOUSE_MUTATION,\n      refetchQueries: [{\n        query: GET_USER_HOUSES\n      }],\n      variables: {\n        house_heading,\n        house_description,\n        house_no,\n        no_bathrooms: parseInt(no_bathrooms),\n        no_bedrooms: parseInt(no_bedrooms),\n        no_annex: parseInt(no_annex),\n        dinning_room: parseInt(dinning_room),\n        isActive,\n        has_in_kitchen,\n        has_balcony,\n        has_garden,\n        has_hotwater,\n        has_carparking,\n        house_type,\n        // parent_houseId,\n        countryId,\n        provinceId,\n        districtId // sectorId\n\n      }\n    }, (createHouse, {\n      loading,\n      error\n    }) => {\n      return __jsx(Container, {\n        flex: 1\n      }, __jsx(\"form\", {\n        method: \"post\",\n        style: {\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          flex: 1,\n          padding: 15,\n          position: \"relative\"\n        },\n        onSubmit: async e => {\n          e.preventDefault();\n          await createHouse().then(res => {\n            this.setState({\n              success: true\n            });\n          }).catch(err => {\n            alert(err);\n          });\n          this.setState({\n            house_heading: \"\",\n            house_description: \"\",\n            house_no: \"\",\n            no_annex: 0,\n            no_bathrooms: 0,\n            no_bedrooms: 0,\n            dinning_room: 0,\n            isActive: false,\n            has_in_kitchen: false,\n            has_balcony: false,\n            has_garden: false,\n            has_hotwater: false,\n            has_carparking: false,\n            house_type: \"\",\n            parent_houseId: \"\",\n            countryId: \"\",\n            provinceId: \"\",\n            districtId: \"\",\n            sectorId: \"\"\n          });\n        }\n      }, __jsx(Container, {\n        flex: false,\n        row: true,\n        center: true,\n        customStyles: {\n          paddingTop: 20,\n          paddingBottom: 20\n        }\n      }, __jsx(Container, {\n        row: true,\n        center: true,\n        flex: 1\n      }, __jsx(ActionBtn, null, __jsx(AddIcon, {\n        style: {\n          fontSize: 20\n        }\n      })), __jsx(CaptionText, null, \"Assign to building\")), __jsx(Container, {\n        row: true,\n        center: true,\n        flex: 1\n      }, __jsx(ActionBtn, null, __jsx(AddIcon, {\n        style: {\n          fontSize: 20\n        }\n      })), __jsx(CaptionText, null, \"Assign to tenant\")), __jsx(Container, {\n        row: true,\n        center: true,\n        flex: 1\n      }, __jsx(ActionBtn, null, __jsx(TagIcon, {\n        style: {\n          fontSize: 18\n        }\n      })), __jsx(CaptionText, null, \"select tag\"))), __jsx(Divider, {\n        style: {\n          height: \"0.5px\"\n        }\n      }), __jsx(Container, {\n        row: true,\n        flex: false,\n        space: \"space-between\",\n        customStyles: {\n          width: \"100%\",\n          paddingTop: 20\n        }\n      }, __jsx(TextInput, {\n        label: \"House Heading\",\n        placeholder: \"start typing ...\",\n        type: \"text\",\n        value: house_heading,\n        onChange: e => {\n          this.setState({\n            house_heading: e.target.value\n          });\n        },\n        customStyles: {\n          width: 200\n        }\n      }), __jsx(TextInput, {\n        label: \"House Number\",\n        type: \"text\",\n        value: house_no,\n        onChange: e => {\n          this.setState({\n            house_no: e.target.value\n          });\n        },\n        customStyles: {\n          width: 200\n        }\n      })), __jsx(Container, {\n        column: true,\n        flex: false,\n        customStyles: {\n          width: \"100%\",\n          paddingTop: 20\n        }\n      }, __jsx(CaptionText, {\n        customStyles: {\n          marginBottom: 5\n        }\n      }, \"Description\"), __jsx(\"textarea\", {\n        type: \"text\",\n        placeholder: \"start typing here...\",\n        className: classes.inputStyle,\n        value: house_description,\n        onChange: e => {\n          this.setState({\n            house_description: e.target.value\n          });\n        }\n      })), __jsx(Container, {\n        column: true,\n        flex: false,\n        customStyles: {\n          width: \"100%\",\n          paddingTop: 15,\n          paddingBottom: 5\n        }\n      }, __jsx(CaptionText, {\n        customStyles: {\n          color: \"#323130\",\n          fontWeight: \"600\"\n        }\n      }, \"House Features\"), __jsx(Divider, {\n        style: {\n          height: \"0.5px\"\n        }\n      })), __jsx(Container, {\n        row: true,\n        flex: false,\n        customStyles: {\n          width: \"100%\"\n        }\n      }, __jsx(Container, {\n        column: true,\n        flex: 1\n      }, __jsx(TextInput, {\n        row: true,\n        label: \"Bedrooms\",\n        type: \"number\",\n        placeholder: \"...\",\n        value: no_bedrooms,\n        onChange: e => {\n          this.setState({\n            no_bedrooms: e.target.value\n          });\n        },\n        customStyles: {\n          width: 80\n        }\n      }), __jsx(TextInput, {\n        label: \"Bathrooms\",\n        type: \"number\",\n        placeholder: \"...\",\n        value: no_bathrooms,\n        onChange: e => {\n          this.setState({\n            no_bathrooms: e.target.value\n          });\n        },\n        row: true,\n        customStyles: {\n          width: 80\n        }\n      }), __jsx(TextInput, {\n        label: \"Annex\",\n        type: \"number\",\n        placeholder: \"...\",\n        value: no_annex,\n        row: true,\n        onChange: e => {\n          this.setState({\n            no_annex: e.target.value\n          });\n        },\n        customStyles: {\n          width: 80\n        }\n      }), __jsx(TextInput, {\n        label: \"Dinning rooms\",\n        type: \"number\",\n        placeholder: \"...\",\n        value: dinning_room,\n        onChange: e => {\n          this.setState({\n            dinning_room: e.target.value\n          });\n        },\n        row: true,\n        customStyles: {\n          width: 80\n        }\n      })), __jsx(Container, {\n        flex: 1,\n        column: true,\n        center: true,\n        customStyles: {\n          width: \"100%\",\n          paddingTop: 10,\n          paddingBottom: 20\n        }\n      }, __jsx(FormGroup, {\n        column: true\n      }, __jsx(FormControlLabel, {\n        control: __jsx(GreenCheckbox, {\n          checked: has_hotwater,\n          onChange: e => {\n            this.setState({\n              has_hotwater: !has_hotwater\n            });\n          },\n          name: \"hot_water\"\n        }),\n        label: \"Hot Water\"\n      }), __jsx(FormControlLabel, {\n        control: __jsx(GreenCheckbox, {\n          checked: has_carparking,\n          onChange: e => {\n            this.setState({\n              has_carparking: !has_carparking\n            });\n          },\n          name: \"parking\"\n        }),\n        label: \"Has Parking\"\n      }), __jsx(FormControlLabel, {\n        control: __jsx(GreenCheckbox, {\n          checked: has_in_kitchen,\n          onChange: e => {\n            this.setState({\n              has_in_kitchen: !has_in_kitchen\n            });\n          },\n          name: \"kitchen\"\n        }),\n        label: \"Inside Kitchen\"\n      }), __jsx(FormControlLabel, {\n        control: __jsx(GreenCheckbox, {\n          checked: has_balcony,\n          onChange: e => {\n            this.setState({\n              has_balcony: !has_balcony\n            });\n          },\n          name: \"balcony\"\n        }),\n        label: \"Has balcony\"\n      }), __jsx(FormControlLabel, {\n        control: __jsx(GreenCheckbox, {\n          checked: has_garden,\n          onChange: e => {\n            this.setState({\n              has_garden: !has_garden\n            });\n          },\n          name: \"garden\"\n        }),\n        label: \"Has garden\"\n      })))), __jsx(Container, {\n        flex: false,\n        column: true,\n        customStyles: {\n          width: \"100%\",\n          paddingTop: 10,\n          paddingBottom: 20\n        }\n      }, __jsx(CaptionText, {\n        customStyles: {\n          marginBottom: 5\n        }\n      }, \"House profile\"), __jsx(Container, {\n        row: true,\n        center: true\n      }, __jsx(UploadIcon, {\n        style: {}\n      }), __jsx(CaptionText, {\n        customStyles: {\n          marginLeft: 10\n        }\n      }, \"upload your house image\")))));\n    });\n  }\n\n}\n\nexport default withStyles(styles)(CreateHouse);","map":null,"metadata":{},"sourceType":"module"}