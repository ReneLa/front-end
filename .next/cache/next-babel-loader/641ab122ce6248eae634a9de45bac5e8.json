{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/Provinces.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst GET_PROVINCES_IN_COUNTRY = gql`\n  query GET_PROVINCES_IN_COUNTRY($id: ID!) {\n    getProvincesByCountry(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nconst Provinces = props => __jsx(Query, _extends({}, props, {\n  query: GET_PROVINCES_IN_COUNTRY,\n  variables: {\n    id: props.id\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), payload => props.children(payload));\n\nProvinces.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default Provinces;\nexport { GET_PROVINCES_IN_COUNTRY };","map":{"version":3,"sources":["/Users/mac/Projects/React js/House /HouseAssist/frontend/components/queryComponents/Provinces.js"],"names":["React","PropTypes","Query","gql","GET_PROVINCES_IN_COUNTRY","Provinces","props","id","payload","children","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,wBAAwB,GAAGD,GAAI;;;;;;;CAArC;;AASA,MAAME,SAAS,GAAGC,KAAK,IACrB,MAAC,KAAD,eACMA,KADN;AAEE,EAAA,KAAK,EAAEF,wBAFT;AAGE,EAAA,SAAS,EAAE;AAAEG,IAAAA,EAAE,EAAED,KAAK,CAACC;AAAZ,GAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKGC,OAAO,IAAIF,KAAK,CAACG,QAAN,CAAeD,OAAf,CALd,CADF;;AAUAH,SAAS,CAACK,SAAV,GAAsB;AACpBD,EAAAA,QAAQ,EAAER,SAAS,CAACU,IAAV,CAAeC;AADL,CAAtB;AAGA,eAAeP,SAAf;AACA,SAASD,wBAAT","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst GET_PROVINCES_IN_COUNTRY = gql`\n  query GET_PROVINCES_IN_COUNTRY($id: ID!) {\n    getProvincesByCountry(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nconst Provinces = props => (\n  <Query\n    {...props}\n    query={GET_PROVINCES_IN_COUNTRY}\n    variables={{ id: props.id }}\n  >\n    {payload => props.children(payload)}\n  </Query>\n);\n\nProvinces.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default Provinces;\nexport { GET_PROVINCES_IN_COUNTRY };\n"]},"metadata":{},"sourceType":"module"}